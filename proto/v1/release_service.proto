syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "v1/common.proto";

option go_package = "generated-go/v1";

service ReleaseService {
  rpc GetRelease(GetReleaseRequest) returns (Release) {
    option (google.api.http) = {get: "/v1/{name=projects/*/releases/*}"};
    option (google.api.method_signature) = "name";
  }
  rpc ListReleases(ListReleasesRequest) returns (ListReleasesResponse) {
    option (google.api.http) = {get: "/v1/{parent=projects/*}/releases"};
    option (google.api.method_signature) = "parent";
  }
}

message GetReleaseRequest {
  // Format: projects/{project}/releases/{release}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "bytebase.com/Release"}
  ];
}

message ListReleasesRequest {
  // Format: projects/{project}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "bytebase.com/Project"}
  ];

  // The maximum number of change histories to return. The service may return fewer than this value.
  // If unspecified, at most 10 change histories will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // Not used. A page token, received from a previous `ListReleasesRequest` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListReleasesRequest` must match
  // the call that provided the page token.
  string page_token = 3;
}

message ListReleasesResponse {
  repeated Release releases = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message Release {
  // Format: projects/{project}/releases/{release}
  string name = 1;

  repeated File files = 2;

  VCSSource vcs_source = 3;

  message File {
    string filename = 1;

    // The sheet that holds the statement.
    // Format: projects/{project}/sheets/{sheet}
    string sheet = 2 [(google.api.resource_reference) = {type: "bytebase.com/Sheet"}];
    bytes sheet_hash = 3;

    Type type = 4;
    string version = 5;

    enum Type {
      TYPE_UNSPECIFIED = 0;
      VERSIONED = 1;
    }
  }

  message VCSSource {
    VCSType vcs_type = 1;
    string pull_request_url = 2;
  }
}
