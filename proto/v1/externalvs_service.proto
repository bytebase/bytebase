syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

import "v1/common.proto";

option go_package = "generated-go/v1";

service ExternalVersionControlService {
  rpc GetExternalVersionControl(GetExternalVersionControlRequest) returns (ExternalVersionControl) {
    option (google.api.http) = {
      get: "/v1/{name=externalVersionControls/*}"
    };
    option (google.api.method_signature) = "name";
  }

  rpc ListExternalVersionControls(ListExternalVersionControlsRequest) returns (ListExternalVersionControlsResponse) {
    option (google.api.http) = {
      get: "/v1/externalVersionControls"
    };
    option (google.api.method_signature) = "";
  }

  rpc CreateExternalVersionControl(CreateExternalVersionControlRequest) returns (ExternalVersionControl) {
    option (google.api.http) = {
      post: "/v1/externalVersionControls"
      body: "external_version_control"
    };
    option (google.api.method_signature) = "";
  }

  rpc UpdateExternalVersionControl(UpdateExternalVersionControlRequest) returns (ExternalVersionControl) {
    option (google.api.http) = {
      patch: "/v1/{external_version_control.name=externalVersionControls/*}"
      body: "external_version_control"
    };
    option (google.api.method_signature) = "external_version_control,update_mask";
  }

  rpc DeleteExternalVersionControl(DeleteExternalVersionControlRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/{name=externalVersionControls/*}"
    };
  }
}

message CreateExternalVersionControlRequest {
  ExternalVersionControl external_version_control = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetExternalVersionControlRequest {
    // The name of the external version control to retrieve.
    // Format: externalVersionControls/{externalVersionControl}
    string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListExternalVersionControlsRequest {
  // Not used. The maximum number of external version control to return. The service may return fewer than this value.
  // If unspecified, at most 100 external version control will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 1;
    
  // Not used. A page token, received from a previous `ListExternalVersionControls` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 2;
}

message ListExternalVersionControlsResponse {
  // The list of external version control.
  repeated ExternalVersionControl external_version_controls = 1;
    
  // Not used. A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message UpdateExternalVersionControlRequest {
  ExternalVersionControl external_version_control = 1 [(google.api.field_behavior) = REQUIRED];
    
  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

message DeleteExternalVersionControlRequest {
  // The name of the external version control to delete.
  // Format: externalVersionControls/{externalVersionControl}
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ExternalVersionControl {
  // The name of the external version control, generated by the server, and also is the unique identifier.
  // Format: externalVersionControls/{externalVersionControl}
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The title of the external version control. It is used to display in the UI. Specified by the client.
  string title = 2 [(google.api.field_behavior) = REQUIRED];

  enum Type {
    TYPE_UNSPECIFIED = 0;
    // GitHub type. Using for GitHub community edition(ce).
    TYPE_GITHUB = 1;
    // GitLab type. Using for GitLab community edition(ce) and enterprise edition(ee).
    TYPE_GITLAB = 2;
  }

  Type type = 3 [(google.api.field_behavior) = REQUIRED];

  // The url of the external version control. Specified by the client.
  // For example: github.com, gitlab.com, gitlab.bytebase.com.
  string url = 4 [(google.api.field_behavior) = REQUIRED];

  // The API url of the external version control. Derived from the url.
  string api_url = 5 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The application ID of the external version control. Specified by the client.
  string application_id = 6 [(google.api.field_behavior) = REQUIRED];

  // The application secret of the external version control. Specified by the client.
  string secret = 7 [(google.api.field_behavior) = INPUT_ONLY];
}