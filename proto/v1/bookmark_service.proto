syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

option go_package = "generated-go/v1";

service BookmarkService {
  // CreateBookmark creates a new bookmark.
  rpc CreateBookmark(CreateBookmarkRequest) returns (Bookmark) {
    option (google.api.http) = {
      post: "/v1/bookmarks"
      body: "bookmark"
    };
    option (google.api.method_signature) = "";
  }

  // DeleteBookmark deletes a bookmark.
  rpc DeleteBookmark(DeleteBookmarkRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/{name=bookmarks/*}"};
    option (google.api.method_signature) = "name";
  }

  // ListBookmarks lists bookmarks.
  rpc ListBookmarks(ListBookmarksRequest) returns (ListBookmarksResponse) {
    option (google.api.http) = {get: "/v1/bookmarks"};
    option (google.api.method_signature) = "";
  }
}

message CreateBookmarkRequest {
  // The bookmark to create.
  Bookmark bookmark = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteBookmarkRequest {
  // The name of the bookmark to delete.
  // Format: bookmarks/{bookmark}
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListBookmarksRequest {
  // Not used. The maximum number of bookmarks to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 bookmarks will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 1;

  // Not used. A page token, received from a previous `ListBookmarks` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListBookmarks` must match
  // the call that provided the page token.
  string page_token = 2;
}

message ListBookmarksResponse {
  // The list of bookmarks.
  repeated Bookmark bookmarks = 1;

  // Not used. A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message Bookmark {
  // The name of the bookmark.
  // Format: bookmarks/{bookmark}, user and bookmark are server-generated unique IDs.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The title of the bookmark.
  string title = 2 [(google.api.field_behavior) = REQUIRED];

  // The resource link of the bookmark. Only support issue link for now.
  // Format:
  // Issue: /issue/slug(issue_name)-{issue_uid}
  // Example: /issue/start-here-add-email-column-to-employee-table-101
  string link = 3 [(google.api.field_behavior) = REQUIRED];
}
