syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/type/expr.proto";
import "v1/annotation.proto";

option go_package = "generated-go/v1";

service RiskService {
  rpc ListRisks(ListRisksRequest) returns (ListRisksResponse) {
    option (google.api.http) = {get: "/v1/risks"};
    option (google.api.method_signature) = "";
    option (bytebase.v1.permission) = "bb.risks.list";
  }

  rpc CreateRisk(CreateRiskRequest) returns (Risk) {
    option (google.api.http) = {
      post: "/v1/risks"
      body: "risk"
    };
    option (google.api.method_signature) = "risk";
    option (bytebase.v1.permission) = "bb.risks.create";
  }

  rpc UpdateRisk(UpdateRiskRequest) returns (Risk) {
    option (google.api.http) = {
      patch: "/v1/{risk.name=risks/*}"
      body: "risk"
    };
    option (google.api.method_signature) = "risk,update_mask";
    option (bytebase.v1.permission) = "bb.risks.update";
  }

  rpc DeleteRisk(DeleteRiskRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/{name=risks/*}"};
    option (bytebase.v1.permission) = "bb.risks.delete";
  }
}

message ListRisksRequest {
  // The maximum number of risks to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 risks will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 1;

  // A page token, received from a previous `ListRisks` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `LiskRisks` must match
  // the call that provided the page token.
  string page_token = 2;
}

message ListRisksResponse {
  repeated Risk risks = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message CreateRiskRequest {
  // The risk to create.
  Risk risk = 1 [(google.api.field_behavior) = REQUIRED];
}

message UpdateRiskRequest {
  // The risk to update.
  //
  // The risk's `name` field is used to identify the risk to update.
  // Format: risks/{risk}
  Risk risk = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to update.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

message DeleteRiskRequest {
  // The name of the risk to delete.
  // Format: risks/{risk}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "bytebase.com/Risk"}
  ];
}

message Risk {
  option (google.api.resource) = {
    type: "bytebase.com/Risk"
    pattern: "risks/{risk}"
  };

  // Format: risks/{risk}
  string name = 1;

  // system-generated unique identifier.
  string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  enum Source {
    SOURCE_UNSPECIFIED = 0;
    DDL = 1;
    DML = 2;
    CREATE_DATABASE = 3;
    REQUEST_QUERY = 4;
    REQUEST_EXPORT = 5;
    DATA_EXPORT = 6;
  }
  Source source = 3;

  string title = 4;
  int32 level = 5;
  bool active = 7;
  google.type.Expr condition = 8;
}
