syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "v1/iam_policy.proto";

option go_package = "generated-go/v1";

service WorkspaceService {
  rpc GetIamPolicy(GetIamPolicyRequest) returns (IamPolicy) {
    option (google.api.http) = {get: "/v1/{resource=workspaces/*}:getIamPolicy"};
  }

  rpc SetIamPolicy(SetIamPolicyRequest) returns (IamPolicy) {
    option (google.api.http) = {
      post: "/v1/{resource=workspaces/*}:setIamPolicy"
      body: "*"
    };
  }

  rpc PatchIamPolicy(PatchIamPolicyRequest) returns (IamPolicy) {
    option (google.api.http) = {
      patch: "/v1/{resource=workspaces/*}:patchIamPolicy"
      body: "*"
    };
  }
}

message PatchIamPolicyRequest {
  // The name of the resource to get the IAM policy.
  // Format: workspaces/{workspace}
  string resource = 1 [(google.api.field_behavior) = REQUIRED];

  // Specifies the principals requesting access for a Bytebase resource.
  // Format: user:{email}
  string member = 2;

  // The roles that is assigned to the member.
  // Format: roles/{role}
  repeated string roles = 3;
}
