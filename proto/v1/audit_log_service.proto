syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

option go_package = "generated-go/v1";

service AuditLogService {
  rpc SearchAuditLogs(SearchAuditLogsRequest) returns (SearchAuditLogsResponse) {
    option (google.api.http) = {get: "/v1/logs:search"};
  }
}

message SearchAuditLogsRequest {
  string filter = 1;

  // The order by of the log.
  // Only support order by create_time.
  // For example:
  //  - order_by = "create_time asc"
  //  - order_by = "create_time desc"
  string order_by = 2;

  // The maximum number of logs to return.
  // The service may return fewer than this value.
  // If unspecified, at most 100 log entries will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 3;

  // A page token, received from a previous `SearchLogs` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 4;
}

message SearchAuditLogsResponse {
  repeated AuditLog audit_logs = 1;

  // A token to retrieve next page of log entities.
  // Pass this value in the page_token field in the subsequent call
  // to retrieve the next page of log entities.
  string next_page_token = 2;
}

message AuditLog {
  // The name of the log.
  // Format: logs/{uid}
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  google.protobuf.Timestamp create_time = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Format: users/d@d.com
  string user = 3;

  // e.g. `/bytebase.v1.SQLService/Query`, `bb.project.repository.push`
  string method = 4;

  Severity severity = 5;

  // The associated resource.
  string resource = 6;

  // JSON-encoded request.
  string request = 7;

  // JSON-encoded response.
  // Some fields are omitted because they are too large or contain sensitive information.
  string response = 8;

  google.rpc.Status status = 9;

  enum Severity {
    DEFAULT = 0;
    DEBUG = 1;
    INFO = 2;
    NOTICE = 3;
    WARNING = 4;
    ERROR = 5;
    CRITICAL = 6;
    ALERT = 7;
    EMERGENCY = 8;
  }
}
