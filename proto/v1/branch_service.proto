syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "v1/annotation.proto";
import "v1/common.proto";
import "v1/database_service.proto";

option go_package = "generated-go/v1";

service BranchService {
  rpc DiffMetadata(DiffMetadataRequest) returns (DiffMetadataResponse) {
    option (google.api.http) = {
      post: "/v1/schemaDesign:diffMetadata"
      body: "*"
    };
    option (bytebase.v1.allow_without_credential) = true;
    // This is a util method requiring no authentication thus no authorization.
  }
}

message DiffMetadataRequest {
  // The metadata of the source schema.
  DatabaseMetadata source_metadata = 1 [(google.api.field_behavior) = REQUIRED];

  // The metadata of the target schema.
  DatabaseMetadata target_metadata = 2 [(google.api.field_behavior) = REQUIRED];

  // The database engine of the schema.
  Engine engine = 3;

  // If false, we will build the raw common by classification in database config.
  bool classification_from_config = 4;
}

message DiffMetadataResponse {
  // The diff of the metadata.
  string diff = 1;
}
