syntax = "proto3";

package bytebase.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "v1/annotation.proto";
import "v1/org_policy_service.proto";

option go_package = "github.com/bytebase/bytebase/backend/generated-go/v1";

// ReviewConfigService manages approval flow configurations.
service ReviewConfigService {
  // Creates a new SQL review configuration.
  // Permissions required: bb.reviewConfigs.create
  rpc CreateReviewConfig(CreateReviewConfigRequest) returns (ReviewConfig) {
    option (google.api.http) = {
      post: "/v1/reviewConfigs"
      body: "review_config"
    };
    option (google.api.method_signature) = "";
    option (bytebase.v1.permission) = "bb.reviewConfigs.create";
    option (bytebase.v1.auth_method) = IAM;
  }

  // Lists all SQL review configurations.
  // Permissions required: bb.reviewConfigs.list
  rpc ListReviewConfigs(ListReviewConfigsRequest) returns (ListReviewConfigsResponse) {
    option (google.api.http) = {get: "/v1/reviewConfigs"};
    option (google.api.method_signature) = "";
    option (bytebase.v1.permission) = "bb.reviewConfigs.list";
    option (bytebase.v1.auth_method) = IAM;
  }

  // Retrieves a SQL review configuration by name.
  // Permissions required: bb.reviewConfigs.get
  rpc GetReviewConfig(GetReviewConfigRequest) returns (ReviewConfig) {
    option (google.api.http) = {get: "/v1/{name=reviewConfigs/*}"};
    option (google.api.method_signature) = "name";
    option (bytebase.v1.permission) = "bb.reviewConfigs.get";
    option (bytebase.v1.auth_method) = IAM;
  }

  // Updates a SQL review configuration.
  // Permissions required: bb.reviewConfigs.update
  // When allow_missing=true, also requires: bb.reviewConfigs.create
  rpc UpdateReviewConfig(UpdateReviewConfigRequest) returns (ReviewConfig) {
    option (google.api.http) = {
      patch: "/v1/{review_config.name=reviewConfigs/*}"
      body: "review_config"
    };
    option (google.api.method_signature) = "review_config,update_mask";
    option (bytebase.v1.permission) = "bb.reviewConfigs.update";
    option (bytebase.v1.allow_missing_requires) = "bb.reviewConfigs.create";
    option (bytebase.v1.auth_method) = IAM;
  }

  // Deletes a SQL review configuration.
  // Permissions required: bb.reviewConfigs.delete
  rpc DeleteReviewConfig(DeleteReviewConfigRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/{name=reviewConfigs/*}"};
    option (google.api.method_signature) = "name";
    option (bytebase.v1.permission) = "bb.reviewConfigs.delete";
    option (bytebase.v1.auth_method) = IAM;
  }
}

message ListReviewConfigsRequest {}

message ListReviewConfigsResponse {
  // The SQL review configs from the specified request.
  repeated ReviewConfig review_configs = 1;
}

message CreateReviewConfigRequest {
  // The SQL review config to create.
  ReviewConfig review_config = 1 [(google.api.field_behavior) = REQUIRED];
}

message UpdateReviewConfigRequest {
  // The SQL review config to update.
  //
  // The name field is used to identify the SQL review config to update.
  ReviewConfig review_config = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to update.
  google.protobuf.FieldMask update_mask = 2;

  // If set to true, and the config is not found, a new config will be created.
  // In this situation, `update_mask` is ignored.
  bool allow_missing = 3;
}

message GetReviewConfigRequest {
  // The name of the SQL review config to retrieve.
  // Format: reviewConfigs/{reviewConfig}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "bytebase.com/ReviewConfig"}
  ];
}

message DeleteReviewConfigRequest {
  // The name of the SQL review config to delete.
  // Format: reviewConfigs/{reviewConfig}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "bytebase.com/ReviewConfig"}
  ];
}

message ReviewConfig {
  option (google.api.resource) = {
    type: "bytebase.com/ReviewConfig"
    pattern: "reviewConfigs/{reviewConfig}"
  };

  // The name of the SQL review config.
  // Format: reviewConfigs/{reviewConfig}
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The title of the review configuration.
  string title = 2 [(buf.validate.field).string.max_len = 200];

  // Whether the review configuration is enabled.
  bool enabled = 3;

  // The SQL review rules to enforce.
  repeated SQLReviewRule rules = 7;

  // Resources using the config.
  // Format: {resource}/{resource id}, e.g., environments/test.
  repeated string resources = 8;
}
