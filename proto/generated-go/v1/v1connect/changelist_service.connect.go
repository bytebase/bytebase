// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: v1/changelist_service.proto

package v1connect

import (
	context "context"
	errors "errors"
	v1 "github.com/bytebase/bytebase/proto/generated-go/v1"
	connect_go "github.com/bufbuild/connect-go"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// ChangelistServiceName is the fully-qualified name of the ChangelistService service.
	ChangelistServiceName = "bytebase.v1.ChangelistService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ChangelistServiceCreateChangelistProcedure is the fully-qualified name of the ChangelistService's
	// CreateChangelist RPC.
	ChangelistServiceCreateChangelistProcedure = "/bytebase.v1.ChangelistService/CreateChangelist"
	// ChangelistServiceGetChangelistProcedure is the fully-qualified name of the ChangelistService's
	// GetChangelist RPC.
	ChangelistServiceGetChangelistProcedure = "/bytebase.v1.ChangelistService/GetChangelist"
	// ChangelistServiceListChangelistsProcedure is the fully-qualified name of the ChangelistService's
	// ListChangelists RPC.
	ChangelistServiceListChangelistsProcedure = "/bytebase.v1.ChangelistService/ListChangelists"
	// ChangelistServiceUpdateChangelistProcedure is the fully-qualified name of the ChangelistService's
	// UpdateChangelist RPC.
	ChangelistServiceUpdateChangelistProcedure = "/bytebase.v1.ChangelistService/UpdateChangelist"
	// ChangelistServiceDeleteChangelistProcedure is the fully-qualified name of the ChangelistService's
	// DeleteChangelist RPC.
	ChangelistServiceDeleteChangelistProcedure = "/bytebase.v1.ChangelistService/DeleteChangelist"
)

// ChangelistServiceClient is a client for the bytebase.v1.ChangelistService service.
type ChangelistServiceClient interface {
	CreateChangelist(context.Context, *connect_go.Request[v1.CreateChangelistRequest]) (*connect_go.Response[v1.Changelist], error)
	GetChangelist(context.Context, *connect_go.Request[v1.GetChangelistRequest]) (*connect_go.Response[v1.Changelist], error)
	ListChangelists(context.Context, *connect_go.Request[v1.ListChangelistsRequest]) (*connect_go.Response[v1.ListChangelistsResponse], error)
	UpdateChangelist(context.Context, *connect_go.Request[v1.UpdateChangelistRequest]) (*connect_go.Response[v1.Changelist], error)
	DeleteChangelist(context.Context, *connect_go.Request[v1.DeleteChangelistRequest]) (*connect_go.Response[emptypb.Empty], error)
}

// NewChangelistServiceClient constructs a client for the bytebase.v1.ChangelistService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewChangelistServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) ChangelistServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &changelistServiceClient{
		createChangelist: connect_go.NewClient[v1.CreateChangelistRequest, v1.Changelist](
			httpClient,
			baseURL+ChangelistServiceCreateChangelistProcedure,
			opts...,
		),
		getChangelist: connect_go.NewClient[v1.GetChangelistRequest, v1.Changelist](
			httpClient,
			baseURL+ChangelistServiceGetChangelistProcedure,
			opts...,
		),
		listChangelists: connect_go.NewClient[v1.ListChangelistsRequest, v1.ListChangelistsResponse](
			httpClient,
			baseURL+ChangelistServiceListChangelistsProcedure,
			opts...,
		),
		updateChangelist: connect_go.NewClient[v1.UpdateChangelistRequest, v1.Changelist](
			httpClient,
			baseURL+ChangelistServiceUpdateChangelistProcedure,
			opts...,
		),
		deleteChangelist: connect_go.NewClient[v1.DeleteChangelistRequest, emptypb.Empty](
			httpClient,
			baseURL+ChangelistServiceDeleteChangelistProcedure,
			opts...,
		),
	}
}

// changelistServiceClient implements ChangelistServiceClient.
type changelistServiceClient struct {
	createChangelist *connect_go.Client[v1.CreateChangelistRequest, v1.Changelist]
	getChangelist    *connect_go.Client[v1.GetChangelistRequest, v1.Changelist]
	listChangelists  *connect_go.Client[v1.ListChangelistsRequest, v1.ListChangelistsResponse]
	updateChangelist *connect_go.Client[v1.UpdateChangelistRequest, v1.Changelist]
	deleteChangelist *connect_go.Client[v1.DeleteChangelistRequest, emptypb.Empty]
}

// CreateChangelist calls bytebase.v1.ChangelistService.CreateChangelist.
func (c *changelistServiceClient) CreateChangelist(ctx context.Context, req *connect_go.Request[v1.CreateChangelistRequest]) (*connect_go.Response[v1.Changelist], error) {
	return c.createChangelist.CallUnary(ctx, req)
}

// GetChangelist calls bytebase.v1.ChangelistService.GetChangelist.
func (c *changelistServiceClient) GetChangelist(ctx context.Context, req *connect_go.Request[v1.GetChangelistRequest]) (*connect_go.Response[v1.Changelist], error) {
	return c.getChangelist.CallUnary(ctx, req)
}

// ListChangelists calls bytebase.v1.ChangelistService.ListChangelists.
func (c *changelistServiceClient) ListChangelists(ctx context.Context, req *connect_go.Request[v1.ListChangelistsRequest]) (*connect_go.Response[v1.ListChangelistsResponse], error) {
	return c.listChangelists.CallUnary(ctx, req)
}

// UpdateChangelist calls bytebase.v1.ChangelistService.UpdateChangelist.
func (c *changelistServiceClient) UpdateChangelist(ctx context.Context, req *connect_go.Request[v1.UpdateChangelistRequest]) (*connect_go.Response[v1.Changelist], error) {
	return c.updateChangelist.CallUnary(ctx, req)
}

// DeleteChangelist calls bytebase.v1.ChangelistService.DeleteChangelist.
func (c *changelistServiceClient) DeleteChangelist(ctx context.Context, req *connect_go.Request[v1.DeleteChangelistRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.deleteChangelist.CallUnary(ctx, req)
}

// ChangelistServiceHandler is an implementation of the bytebase.v1.ChangelistService service.
type ChangelistServiceHandler interface {
	CreateChangelist(context.Context, *connect_go.Request[v1.CreateChangelistRequest]) (*connect_go.Response[v1.Changelist], error)
	GetChangelist(context.Context, *connect_go.Request[v1.GetChangelistRequest]) (*connect_go.Response[v1.Changelist], error)
	ListChangelists(context.Context, *connect_go.Request[v1.ListChangelistsRequest]) (*connect_go.Response[v1.ListChangelistsResponse], error)
	UpdateChangelist(context.Context, *connect_go.Request[v1.UpdateChangelistRequest]) (*connect_go.Response[v1.Changelist], error)
	DeleteChangelist(context.Context, *connect_go.Request[v1.DeleteChangelistRequest]) (*connect_go.Response[emptypb.Empty], error)
}

// NewChangelistServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewChangelistServiceHandler(svc ChangelistServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	changelistServiceCreateChangelistHandler := connect_go.NewUnaryHandler(
		ChangelistServiceCreateChangelistProcedure,
		svc.CreateChangelist,
		opts...,
	)
	changelistServiceGetChangelistHandler := connect_go.NewUnaryHandler(
		ChangelistServiceGetChangelistProcedure,
		svc.GetChangelist,
		opts...,
	)
	changelistServiceListChangelistsHandler := connect_go.NewUnaryHandler(
		ChangelistServiceListChangelistsProcedure,
		svc.ListChangelists,
		opts...,
	)
	changelistServiceUpdateChangelistHandler := connect_go.NewUnaryHandler(
		ChangelistServiceUpdateChangelistProcedure,
		svc.UpdateChangelist,
		opts...,
	)
	changelistServiceDeleteChangelistHandler := connect_go.NewUnaryHandler(
		ChangelistServiceDeleteChangelistProcedure,
		svc.DeleteChangelist,
		opts...,
	)
	return "/bytebase.v1.ChangelistService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ChangelistServiceCreateChangelistProcedure:
			changelistServiceCreateChangelistHandler.ServeHTTP(w, r)
		case ChangelistServiceGetChangelistProcedure:
			changelistServiceGetChangelistHandler.ServeHTTP(w, r)
		case ChangelistServiceListChangelistsProcedure:
			changelistServiceListChangelistsHandler.ServeHTTP(w, r)
		case ChangelistServiceUpdateChangelistProcedure:
			changelistServiceUpdateChangelistHandler.ServeHTTP(w, r)
		case ChangelistServiceDeleteChangelistProcedure:
			changelistServiceDeleteChangelistHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedChangelistServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedChangelistServiceHandler struct{}

func (UnimplementedChangelistServiceHandler) CreateChangelist(context.Context, *connect_go.Request[v1.CreateChangelistRequest]) (*connect_go.Response[v1.Changelist], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("bytebase.v1.ChangelistService.CreateChangelist is not implemented"))
}

func (UnimplementedChangelistServiceHandler) GetChangelist(context.Context, *connect_go.Request[v1.GetChangelistRequest]) (*connect_go.Response[v1.Changelist], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("bytebase.v1.ChangelistService.GetChangelist is not implemented"))
}

func (UnimplementedChangelistServiceHandler) ListChangelists(context.Context, *connect_go.Request[v1.ListChangelistsRequest]) (*connect_go.Response[v1.ListChangelistsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("bytebase.v1.ChangelistService.ListChangelists is not implemented"))
}

func (UnimplementedChangelistServiceHandler) UpdateChangelist(context.Context, *connect_go.Request[v1.UpdateChangelistRequest]) (*connect_go.Response[v1.Changelist], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("bytebase.v1.ChangelistService.UpdateChangelist is not implemented"))
}

func (UnimplementedChangelistServiceHandler) DeleteChangelist(context.Context, *connect_go.Request[v1.DeleteChangelistRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("bytebase.v1.ChangelistService.DeleteChangelist is not implemented"))
}
