// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/idp_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdentityProviderType int32

const (
	IdentityProviderType_IDENTITY_PROVIDER_TYPE_UNSPECIFIED IdentityProviderType = 0
	IdentityProviderType_OAUTH2                             IdentityProviderType = 1
	IdentityProviderType_OIDC                               IdentityProviderType = 2
	IdentityProviderType_LDAP                               IdentityProviderType = 3
)

// Enum value maps for IdentityProviderType.
var (
	IdentityProviderType_name = map[int32]string{
		0: "IDENTITY_PROVIDER_TYPE_UNSPECIFIED",
		1: "OAUTH2",
		2: "OIDC",
		3: "LDAP",
	}
	IdentityProviderType_value = map[string]int32{
		"IDENTITY_PROVIDER_TYPE_UNSPECIFIED": 0,
		"OAUTH2":                             1,
		"OIDC":                               2,
		"LDAP":                               3,
	}
)

func (x IdentityProviderType) Enum() *IdentityProviderType {
	p := new(IdentityProviderType)
	*p = x
	return p
}

func (x IdentityProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_idp_service_proto_enumTypes[0].Descriptor()
}

func (IdentityProviderType) Type() protoreflect.EnumType {
	return &file_v1_idp_service_proto_enumTypes[0]
}

func (x IdentityProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityProviderType.Descriptor instead.
func (IdentityProviderType) EnumDescriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{0}
}

type OAuth2AuthStyle int32

const (
	OAuth2AuthStyle_OAUTH2_AUTH_STYLE_UNSPECIFIED OAuth2AuthStyle = 0
	// IN_PARAMS sends the "client_id" and "client_secret" in the POST body
	// as application/x-www-form-urlencoded parameters.
	OAuth2AuthStyle_IN_PARAMS OAuth2AuthStyle = 1
	// IN_HEADER sends the client_id and client_password using HTTP Basic Authorization.
	// This is an optional style described in the OAuth2 RFC 6749 section 2.3.1.
	OAuth2AuthStyle_IN_HEADER OAuth2AuthStyle = 2
)

// Enum value maps for OAuth2AuthStyle.
var (
	OAuth2AuthStyle_name = map[int32]string{
		0: "OAUTH2_AUTH_STYLE_UNSPECIFIED",
		1: "IN_PARAMS",
		2: "IN_HEADER",
	}
	OAuth2AuthStyle_value = map[string]int32{
		"OAUTH2_AUTH_STYLE_UNSPECIFIED": 0,
		"IN_PARAMS":                     1,
		"IN_HEADER":                     2,
	}
)

func (x OAuth2AuthStyle) Enum() *OAuth2AuthStyle {
	p := new(OAuth2AuthStyle)
	*p = x
	return p
}

func (x OAuth2AuthStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OAuth2AuthStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_idp_service_proto_enumTypes[1].Descriptor()
}

func (OAuth2AuthStyle) Type() protoreflect.EnumType {
	return &file_v1_idp_service_proto_enumTypes[1]
}

func (x OAuth2AuthStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OAuth2AuthStyle.Descriptor instead.
func (OAuth2AuthStyle) EnumDescriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{1}
}

type GetIdentityProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIdentityProviderRequest) Reset() {
	*x = GetIdentityProviderRequest{}
	mi := &file_v1_idp_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIdentityProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityProviderRequest) ProtoMessage() {}

func (x *GetIdentityProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityProviderRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityProviderRequest) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetIdentityProviderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListIdentityProvidersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Not used.
	// The maximum number of identity providers to return. The service may return fewer than
	// this value.
	// If unspecified, at most 10 will be returned.
	// The maximum value is 1000; values above 1000 will be coerced to 1000.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Not used.
	// A page token, received from a previous `ListIdentityProviders` call.
	// Provide this to retrieve the subsequent page.
	//
	// When paginating, all other parameters provided to `ListIdentityProviders` must match
	// the call that provided the page token.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Show deleted identity providers if specified.
	ShowDeleted   bool `protobuf:"varint,3,opt,name=show_deleted,json=showDeleted,proto3" json:"show_deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIdentityProvidersRequest) Reset() {
	*x = ListIdentityProvidersRequest{}
	mi := &file_v1_idp_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIdentityProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentityProvidersRequest) ProtoMessage() {}

func (x *ListIdentityProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentityProvidersRequest.ProtoReflect.Descriptor instead.
func (*ListIdentityProvidersRequest) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListIdentityProvidersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListIdentityProvidersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListIdentityProvidersRequest) GetShowDeleted() bool {
	if x != nil {
		return x.ShowDeleted
	}
	return false
}

type ListIdentityProvidersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identity providers from the specified request.
	IdentityProviders []*IdentityProvider `protobuf:"bytes,1,rep,name=identity_providers,json=identityProviders,proto3" json:"identity_providers,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIdentityProvidersResponse) Reset() {
	*x = ListIdentityProvidersResponse{}
	mi := &file_v1_idp_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIdentityProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentityProvidersResponse) ProtoMessage() {}

func (x *ListIdentityProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentityProvidersResponse.ProtoReflect.Descriptor instead.
func (*ListIdentityProvidersResponse) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListIdentityProvidersResponse) GetIdentityProviders() []*IdentityProvider {
	if x != nil {
		return x.IdentityProviders
	}
	return nil
}

func (x *ListIdentityProvidersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateIdentityProviderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identity provider to create.
	IdentityProvider *IdentityProvider `protobuf:"bytes,1,opt,name=identity_provider,json=identityProvider,proto3" json:"identity_provider,omitempty"`
	// The ID to use for the identity provider, which will become the final component of
	// the identity provider's resource name.
	//
	// This value should be 4-63 characters, and valid characters
	// are /[a-z][0-9]-/.
	IdentityProviderId string `protobuf:"bytes,2,opt,name=identity_provider_id,json=identityProviderId,proto3" json:"identity_provider_id,omitempty"`
	// If set to true, the request will be validated without actually creating the identity provider.
	ValidateOnly  bool `protobuf:"varint,3,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIdentityProviderRequest) Reset() {
	*x = CreateIdentityProviderRequest{}
	mi := &file_v1_idp_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIdentityProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityProviderRequest) ProtoMessage() {}

func (x *CreateIdentityProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityProviderRequest.ProtoReflect.Descriptor instead.
func (*CreateIdentityProviderRequest) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {
	if x != nil {
		return x.IdentityProvider
	}
	return nil
}

func (x *CreateIdentityProviderRequest) GetIdentityProviderId() string {
	if x != nil {
		return x.IdentityProviderId
	}
	return ""
}

func (x *CreateIdentityProviderRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

type UpdateIdentityProviderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identity provider to update.
	//
	// The identity provider's `name` field is used to identify the identity provider to update.
	// Format: idps/{identity_provider}
	IdentityProvider *IdentityProvider `protobuf:"bytes,1,opt,name=identity_provider,json=identityProvider,proto3" json:"identity_provider,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateIdentityProviderRequest) Reset() {
	*x = UpdateIdentityProviderRequest{}
	mi := &file_v1_idp_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIdentityProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdentityProviderRequest) ProtoMessage() {}

func (x *UpdateIdentityProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdentityProviderRequest.ProtoReflect.Descriptor instead.
func (*UpdateIdentityProviderRequest) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {
	if x != nil {
		return x.IdentityProvider
	}
	return nil
}

func (x *UpdateIdentityProviderRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteIdentityProviderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the identity provider to delete.
	// Format: idps/{identity_provider}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIdentityProviderRequest) Reset() {
	*x = DeleteIdentityProviderRequest{}
	mi := &file_v1_idp_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIdentityProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdentityProviderRequest) ProtoMessage() {}

func (x *DeleteIdentityProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdentityProviderRequest.ProtoReflect.Descriptor instead.
func (*DeleteIdentityProviderRequest) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteIdentityProviderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UndeleteIdentityProviderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the deleted identity provider.
	// Format: idps/{identity_provider}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UndeleteIdentityProviderRequest) Reset() {
	*x = UndeleteIdentityProviderRequest{}
	mi := &file_v1_idp_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndeleteIdentityProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeleteIdentityProviderRequest) ProtoMessage() {}

func (x *UndeleteIdentityProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeleteIdentityProviderRequest.ProtoReflect.Descriptor instead.
func (*UndeleteIdentityProviderRequest) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{6}
}

func (x *UndeleteIdentityProviderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TestIdentityProviderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identity provider to test connection including uncreated.
	IdentityProvider *IdentityProvider `protobuf:"bytes,1,opt,name=identity_provider,json=identityProvider,proto3" json:"identity_provider,omitempty"`
	// Types that are valid to be assigned to Context:
	//
	//	*TestIdentityProviderRequest_Oauth2Context
	Context       isTestIdentityProviderRequest_Context `protobuf_oneof:"context"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestIdentityProviderRequest) Reset() {
	*x = TestIdentityProviderRequest{}
	mi := &file_v1_idp_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestIdentityProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestIdentityProviderRequest) ProtoMessage() {}

func (x *TestIdentityProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestIdentityProviderRequest.ProtoReflect.Descriptor instead.
func (*TestIdentityProviderRequest) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{7}
}

func (x *TestIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {
	if x != nil {
		return x.IdentityProvider
	}
	return nil
}

func (x *TestIdentityProviderRequest) GetContext() isTestIdentityProviderRequest_Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TestIdentityProviderRequest) GetOauth2Context() *OAuth2IdentityProviderTestRequestContext {
	if x != nil {
		if x, ok := x.Context.(*TestIdentityProviderRequest_Oauth2Context); ok {
			return x.Oauth2Context
		}
	}
	return nil
}

type isTestIdentityProviderRequest_Context interface {
	isTestIdentityProviderRequest_Context()
}

type TestIdentityProviderRequest_Oauth2Context struct {
	Oauth2Context *OAuth2IdentityProviderTestRequestContext `protobuf:"bytes,2,opt,name=oauth2_context,json=oauth2Context,proto3,oneof"`
}

func (*TestIdentityProviderRequest_Oauth2Context) isTestIdentityProviderRequest_Context() {}

type OAuth2IdentityProviderTestRequestContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Authorize code from website.
	Code          string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OAuth2IdentityProviderTestRequestContext) Reset() {
	*x = OAuth2IdentityProviderTestRequestContext{}
	mi := &file_v1_idp_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuth2IdentityProviderTestRequestContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth2IdentityProviderTestRequestContext) ProtoMessage() {}

func (x *OAuth2IdentityProviderTestRequestContext) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth2IdentityProviderTestRequestContext.ProtoReflect.Descriptor instead.
func (*OAuth2IdentityProviderTestRequestContext) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{8}
}

func (x *OAuth2IdentityProviderTestRequestContext) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TestIdentityProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestIdentityProviderResponse) Reset() {
	*x = TestIdentityProviderResponse{}
	mi := &file_v1_idp_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestIdentityProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestIdentityProviderResponse) ProtoMessage() {}

func (x *TestIdentityProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestIdentityProviderResponse.ProtoReflect.Descriptor instead.
func (*TestIdentityProviderResponse) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{9}
}

type IdentityProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the identity provider.
	// Format: idps/{idp}
	Name          string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State         State                   `protobuf:"varint,3,opt,name=state,proto3,enum=bytebase.v1.State" json:"state,omitempty"`
	Title         string                  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Domain        string                  `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	Type          IdentityProviderType    `protobuf:"varint,6,opt,name=type,proto3,enum=bytebase.v1.IdentityProviderType" json:"type,omitempty"`
	Config        *IdentityProviderConfig `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityProvider) Reset() {
	*x = IdentityProvider{}
	mi := &file_v1_idp_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityProvider) ProtoMessage() {}

func (x *IdentityProvider) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityProvider.ProtoReflect.Descriptor instead.
func (*IdentityProvider) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{10}
}

func (x *IdentityProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IdentityProvider) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *IdentityProvider) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IdentityProvider) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *IdentityProvider) GetType() IdentityProviderType {
	if x != nil {
		return x.Type
	}
	return IdentityProviderType_IDENTITY_PROVIDER_TYPE_UNSPECIFIED
}

func (x *IdentityProvider) GetConfig() *IdentityProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type IdentityProviderConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Config:
	//
	//	*IdentityProviderConfig_Oauth2Config
	//	*IdentityProviderConfig_OidcConfig
	//	*IdentityProviderConfig_LdapConfig
	Config        isIdentityProviderConfig_Config `protobuf_oneof:"config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityProviderConfig) Reset() {
	*x = IdentityProviderConfig{}
	mi := &file_v1_idp_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityProviderConfig) ProtoMessage() {}

func (x *IdentityProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityProviderConfig.ProtoReflect.Descriptor instead.
func (*IdentityProviderConfig) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{11}
}

func (x *IdentityProviderConfig) GetConfig() isIdentityProviderConfig_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *IdentityProviderConfig) GetOauth2Config() *OAuth2IdentityProviderConfig {
	if x != nil {
		if x, ok := x.Config.(*IdentityProviderConfig_Oauth2Config); ok {
			return x.Oauth2Config
		}
	}
	return nil
}

func (x *IdentityProviderConfig) GetOidcConfig() *OIDCIdentityProviderConfig {
	if x != nil {
		if x, ok := x.Config.(*IdentityProviderConfig_OidcConfig); ok {
			return x.OidcConfig
		}
	}
	return nil
}

func (x *IdentityProviderConfig) GetLdapConfig() *LDAPIdentityProviderConfig {
	if x != nil {
		if x, ok := x.Config.(*IdentityProviderConfig_LdapConfig); ok {
			return x.LdapConfig
		}
	}
	return nil
}

type isIdentityProviderConfig_Config interface {
	isIdentityProviderConfig_Config()
}

type IdentityProviderConfig_Oauth2Config struct {
	Oauth2Config *OAuth2IdentityProviderConfig `protobuf:"bytes,1,opt,name=oauth2_config,json=oauth2Config,proto3,oneof"`
}

type IdentityProviderConfig_OidcConfig struct {
	OidcConfig *OIDCIdentityProviderConfig `protobuf:"bytes,2,opt,name=oidc_config,json=oidcConfig,proto3,oneof"`
}

type IdentityProviderConfig_LdapConfig struct {
	LdapConfig *LDAPIdentityProviderConfig `protobuf:"bytes,3,opt,name=ldap_config,json=ldapConfig,proto3,oneof"`
}

func (*IdentityProviderConfig_Oauth2Config) isIdentityProviderConfig_Config() {}

func (*IdentityProviderConfig_OidcConfig) isIdentityProviderConfig_Config() {}

func (*IdentityProviderConfig_LdapConfig) isIdentityProviderConfig_Config() {}

// OAuth2IdentityProviderConfig is the structure for OAuth2 identity provider config.
type OAuth2IdentityProviderConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthUrl       string                 `protobuf:"bytes,1,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	TokenUrl      string                 `protobuf:"bytes,2,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	UserInfoUrl   string                 `protobuf:"bytes,3,opt,name=user_info_url,json=userInfoUrl,proto3" json:"user_info_url,omitempty"`
	ClientId      string                 `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret  string                 `protobuf:"bytes,5,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Scopes        []string               `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
	FieldMapping  *FieldMapping          `protobuf:"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3" json:"field_mapping,omitempty"`
	SkipTlsVerify bool                   `protobuf:"varint,8,opt,name=skip_tls_verify,json=skipTlsVerify,proto3" json:"skip_tls_verify,omitempty"`
	AuthStyle     OAuth2AuthStyle        `protobuf:"varint,9,opt,name=auth_style,json=authStyle,proto3,enum=bytebase.v1.OAuth2AuthStyle" json:"auth_style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OAuth2IdentityProviderConfig) Reset() {
	*x = OAuth2IdentityProviderConfig{}
	mi := &file_v1_idp_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuth2IdentityProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth2IdentityProviderConfig) ProtoMessage() {}

func (x *OAuth2IdentityProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth2IdentityProviderConfig.ProtoReflect.Descriptor instead.
func (*OAuth2IdentityProviderConfig) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{12}
}

func (x *OAuth2IdentityProviderConfig) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *OAuth2IdentityProviderConfig) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *OAuth2IdentityProviderConfig) GetUserInfoUrl() string {
	if x != nil {
		return x.UserInfoUrl
	}
	return ""
}

func (x *OAuth2IdentityProviderConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuth2IdentityProviderConfig) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OAuth2IdentityProviderConfig) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *OAuth2IdentityProviderConfig) GetFieldMapping() *FieldMapping {
	if x != nil {
		return x.FieldMapping
	}
	return nil
}

func (x *OAuth2IdentityProviderConfig) GetSkipTlsVerify() bool {
	if x != nil {
		return x.SkipTlsVerify
	}
	return false
}

func (x *OAuth2IdentityProviderConfig) GetAuthStyle() OAuth2AuthStyle {
	if x != nil {
		return x.AuthStyle
	}
	return OAuth2AuthStyle_OAUTH2_AUTH_STYLE_UNSPECIFIED
}

// OIDCIdentityProviderConfig is the structure for OIDC identity provider config.
type OIDCIdentityProviderConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issuer        string                 `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret  string                 `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	FieldMapping  *FieldMapping          `protobuf:"bytes,5,opt,name=field_mapping,json=fieldMapping,proto3" json:"field_mapping,omitempty"`
	SkipTlsVerify bool                   `protobuf:"varint,6,opt,name=skip_tls_verify,json=skipTlsVerify,proto3" json:"skip_tls_verify,omitempty"`
	AuthStyle     OAuth2AuthStyle        `protobuf:"varint,7,opt,name=auth_style,json=authStyle,proto3,enum=bytebase.v1.OAuth2AuthStyle" json:"auth_style,omitempty"`
	// The scopes that the OIDC provider supports.
	// Should be fetched from the well-known configuration file of the OIDC provider.
	Scopes []string `protobuf:"bytes,4,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// The authorization endpoint of the OIDC provider.
	// Should be fetched from the well-known configuration file of the OIDC provider.
	AuthEndpoint  string `protobuf:"bytes,8,opt,name=auth_endpoint,json=authEndpoint,proto3" json:"auth_endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OIDCIdentityProviderConfig) Reset() {
	*x = OIDCIdentityProviderConfig{}
	mi := &file_v1_idp_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OIDCIdentityProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDCIdentityProviderConfig) ProtoMessage() {}

func (x *OIDCIdentityProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDCIdentityProviderConfig.ProtoReflect.Descriptor instead.
func (*OIDCIdentityProviderConfig) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{13}
}

func (x *OIDCIdentityProviderConfig) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *OIDCIdentityProviderConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OIDCIdentityProviderConfig) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OIDCIdentityProviderConfig) GetFieldMapping() *FieldMapping {
	if x != nil {
		return x.FieldMapping
	}
	return nil
}

func (x *OIDCIdentityProviderConfig) GetSkipTlsVerify() bool {
	if x != nil {
		return x.SkipTlsVerify
	}
	return false
}

func (x *OIDCIdentityProviderConfig) GetAuthStyle() OAuth2AuthStyle {
	if x != nil {
		return x.AuthStyle
	}
	return OAuth2AuthStyle_OAUTH2_AUTH_STYLE_UNSPECIFIED
}

func (x *OIDCIdentityProviderConfig) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *OIDCIdentityProviderConfig) GetAuthEndpoint() string {
	if x != nil {
		return x.AuthEndpoint
	}
	return ""
}

// LDAPIdentityProviderConfig is the structure for LDAP identity provider config.
type LDAPIdentityProviderConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host is the hostname or IP address of the LDAP server, e.g.
	// "ldap.example.com".
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Port is the port number of the LDAP server, e.g. 389. When not set, the
	// default port of the corresponding security protocol will be used, i.e. 389
	// for StartTLS and 636 for LDAPS.
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// SkipTLSVerify controls whether to skip TLS certificate verification.
	SkipTlsVerify bool `protobuf:"varint,3,opt,name=skip_tls_verify,json=skipTlsVerify,proto3" json:"skip_tls_verify,omitempty"`
	// BindDN is the DN of the user to bind as a service account to perform
	// search requests.
	BindDn string `protobuf:"bytes,4,opt,name=bind_dn,json=bindDn,proto3" json:"bind_dn,omitempty"`
	// BindPassword is the password of the user to bind as a service account.
	BindPassword string `protobuf:"bytes,5,opt,name=bind_password,json=bindPassword,proto3" json:"bind_password,omitempty"`
	// BaseDN is the base DN to search for users, e.g. "ou=users,dc=example,dc=com".
	BaseDn string `protobuf:"bytes,6,opt,name=base_dn,json=baseDn,proto3" json:"base_dn,omitempty"`
	// UserFilter is the filter to search for users, e.g. "(uid=%s)".
	UserFilter string `protobuf:"bytes,7,opt,name=user_filter,json=userFilter,proto3" json:"user_filter,omitempty"`
	// SecurityProtocol is the security protocol to be used for establishing
	// connections with the LDAP server. It should be either StartTLS or LDAPS, and
	// cannot be empty.
	SecurityProtocol string `protobuf:"bytes,8,opt,name=security_protocol,json=securityProtocol,proto3" json:"security_protocol,omitempty"`
	// FieldMapping is the mapping of the user attributes returned by the LDAP
	// server.
	FieldMapping  *FieldMapping `protobuf:"bytes,9,opt,name=field_mapping,json=fieldMapping,proto3" json:"field_mapping,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LDAPIdentityProviderConfig) Reset() {
	*x = LDAPIdentityProviderConfig{}
	mi := &file_v1_idp_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LDAPIdentityProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LDAPIdentityProviderConfig) ProtoMessage() {}

func (x *LDAPIdentityProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LDAPIdentityProviderConfig.ProtoReflect.Descriptor instead.
func (*LDAPIdentityProviderConfig) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{14}
}

func (x *LDAPIdentityProviderConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LDAPIdentityProviderConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *LDAPIdentityProviderConfig) GetSkipTlsVerify() bool {
	if x != nil {
		return x.SkipTlsVerify
	}
	return false
}

func (x *LDAPIdentityProviderConfig) GetBindDn() string {
	if x != nil {
		return x.BindDn
	}
	return ""
}

func (x *LDAPIdentityProviderConfig) GetBindPassword() string {
	if x != nil {
		return x.BindPassword
	}
	return ""
}

func (x *LDAPIdentityProviderConfig) GetBaseDn() string {
	if x != nil {
		return x.BaseDn
	}
	return ""
}

func (x *LDAPIdentityProviderConfig) GetUserFilter() string {
	if x != nil {
		return x.UserFilter
	}
	return ""
}

func (x *LDAPIdentityProviderConfig) GetSecurityProtocol() string {
	if x != nil {
		return x.SecurityProtocol
	}
	return ""
}

func (x *LDAPIdentityProviderConfig) GetFieldMapping() *FieldMapping {
	if x != nil {
		return x.FieldMapping
	}
	return nil
}

// FieldMapping saves the field names from user info API of identity provider.
// As we save all raw json string of user info response data into `principal.idp_user_info`,
// we can extract the relevant data based with `FieldMapping`.
//
// e.g. For GitHub authenticated user API, it will return `login`, `name` and `email` in response.
// Then the identifier of FieldMapping will be `login`, display_name will be `name`,
// and email will be `email`.
// reference: https://docs.github.com/en/rest/users/users?apiVersion=2022-11-28#get-the-authenticated-user
type FieldMapping struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier is the field name of the unique identifier in 3rd-party idp user info. Required.
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// DisplayName is the field name of display name in 3rd-party idp user info.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Email is the field name of primary email in 3rd-party idp user info.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Phone is the field name of primary phone in 3rd-party idp user info.
	Phone         string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldMapping) Reset() {
	*x = FieldMapping{}
	mi := &file_v1_idp_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMapping) ProtoMessage() {}

func (x *FieldMapping) ProtoReflect() protoreflect.Message {
	mi := &file_v1_idp_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMapping.ProtoReflect.Descriptor instead.
func (*FieldMapping) Descriptor() ([]byte, []int) {
	return file_v1_idp_service_proto_rawDescGZIP(), []int{15}
}

func (x *FieldMapping) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *FieldMapping) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *FieldMapping) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *FieldMapping) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

var File_v1_idp_service_proto protoreflect.FileDescriptor

const file_v1_idp_service_proto_rawDesc = "" +
	"\n" +
	"\x14v1/idp_service.proto\x12\vbytebase.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x13v1/annotation.proto\x1a\x0fv1/common.proto\"K\n" +
	"\x1aGetIdentityProviderRequest\x12-\n" +
	"\x04name\x18\x01 \x01(\tB\x19\xe2A\x01\x02\xfaA\x12\n" +
	"\x10bytebase.com/IdPR\x04name\"}\n" +
	"\x1cListIdentityProvidersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12!\n" +
	"\fshow_deleted\x18\x03 \x01(\bR\vshowDeleted\"\x95\x01\n" +
	"\x1dListIdentityProvidersResponse\x12L\n" +
	"\x12identity_providers\x18\x01 \x03(\v2\x1d.bytebase.v1.IdentityProviderR\x11identityProviders\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc8\x01\n" +
	"\x1dCreateIdentityProviderRequest\x12P\n" +
	"\x11identity_provider\x18\x01 \x01(\v2\x1d.bytebase.v1.IdentityProviderB\x04\xe2A\x01\x02R\x10identityProvider\x120\n" +
	"\x14identity_provider_id\x18\x02 \x01(\tR\x12identityProviderId\x12#\n" +
	"\rvalidate_only\x18\x03 \x01(\bR\fvalidateOnly\"\xae\x01\n" +
	"\x1dUpdateIdentityProviderRequest\x12P\n" +
	"\x11identity_provider\x18\x01 \x01(\v2\x1d.bytebase.v1.IdentityProviderB\x04\xe2A\x01\x02R\x10identityProvider\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"N\n" +
	"\x1dDeleteIdentityProviderRequest\x12-\n" +
	"\x04name\x18\x01 \x01(\tB\x19\xe2A\x01\x02\xfaA\x12\n" +
	"\x10bytebase.com/IdPR\x04name\"P\n" +
	"\x1fUndeleteIdentityProviderRequest\x12-\n" +
	"\x04name\x18\x01 \x01(\tB\x19\xe2A\x01\x02\xfaA\x12\n" +
	"\x10bytebase.com/IdPR\x04name\"\xd4\x01\n" +
	"\x1bTestIdentityProviderRequest\x12J\n" +
	"\x11identity_provider\x18\x01 \x01(\v2\x1d.bytebase.v1.IdentityProviderR\x10identityProvider\x12^\n" +
	"\x0eoauth2_context\x18\x02 \x01(\v25.bytebase.v1.OAuth2IdentityProviderTestRequestContextH\x00R\roauth2ContextB\t\n" +
	"\acontext\">\n" +
	"(OAuth2IdentityProviderTestRequestContext\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"\x1e\n" +
	"\x1cTestIdentityProviderResponse\"\x9b\x02\n" +
	"\x10IdentityProvider\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12(\n" +
	"\x05state\x18\x03 \x01(\x0e2\x12.bytebase.v1.StateR\x05state\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x16\n" +
	"\x06domain\x18\x05 \x01(\tR\x06domain\x125\n" +
	"\x04type\x18\x06 \x01(\x0e2!.bytebase.v1.IdentityProviderTypeR\x04type\x12;\n" +
	"\x06config\x18\a \x01(\v2#.bytebase.v1.IdentityProviderConfigR\x06config:!\xeaA\x1e\n" +
	"\x10bytebase.com/IdP\x12\n" +
	"idps/{idp}J\x04\b\x02\x10\x03\"\x8c\x02\n" +
	"\x16IdentityProviderConfig\x12P\n" +
	"\roauth2_config\x18\x01 \x01(\v2).bytebase.v1.OAuth2IdentityProviderConfigH\x00R\foauth2Config\x12J\n" +
	"\voidc_config\x18\x02 \x01(\v2'.bytebase.v1.OIDCIdentityProviderConfigH\x00R\n" +
	"oidcConfig\x12J\n" +
	"\vldap_config\x18\x03 \x01(\v2'.bytebase.v1.LDAPIdentityProviderConfigH\x00R\n" +
	"ldapConfigB\b\n" +
	"\x06config\"\xf9\x02\n" +
	"\x1cOAuth2IdentityProviderConfig\x12\x19\n" +
	"\bauth_url\x18\x01 \x01(\tR\aauthUrl\x12\x1b\n" +
	"\ttoken_url\x18\x02 \x01(\tR\btokenUrl\x12\"\n" +
	"\ruser_info_url\x18\x03 \x01(\tR\vuserInfoUrl\x12\x1b\n" +
	"\tclient_id\x18\x04 \x01(\tR\bclientId\x12#\n" +
	"\rclient_secret\x18\x05 \x01(\tR\fclientSecret\x12\x16\n" +
	"\x06scopes\x18\x06 \x03(\tR\x06scopes\x12>\n" +
	"\rfield_mapping\x18\a \x01(\v2\x19.bytebase.v1.FieldMappingR\ffieldMapping\x12&\n" +
	"\x0fskip_tls_verify\x18\b \x01(\bR\rskipTlsVerify\x12;\n" +
	"\n" +
	"auth_style\x18\t \x01(\x0e2\x1c.bytebase.v1.OAuth2AuthStyleR\tauthStyle\"\xe4\x02\n" +
	"\x1aOIDCIdentityProviderConfig\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\tR\x06issuer\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12#\n" +
	"\rclient_secret\x18\x03 \x01(\tR\fclientSecret\x12>\n" +
	"\rfield_mapping\x18\x05 \x01(\v2\x19.bytebase.v1.FieldMappingR\ffieldMapping\x12&\n" +
	"\x0fskip_tls_verify\x18\x06 \x01(\bR\rskipTlsVerify\x12;\n" +
	"\n" +
	"auth_style\x18\a \x01(\x0e2\x1c.bytebase.v1.OAuth2AuthStyleR\tauthStyle\x12\x1c\n" +
	"\x06scopes\x18\x04 \x03(\tB\x04\xe2A\x01\x03R\x06scopes\x12)\n" +
	"\rauth_endpoint\x18\b \x01(\tB\x04\xe2A\x01\x03R\fauthEndpoint\"\xd1\x02\n" +
	"\x1aLDAPIdentityProviderConfig\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12&\n" +
	"\x0fskip_tls_verify\x18\x03 \x01(\bR\rskipTlsVerify\x12\x17\n" +
	"\abind_dn\x18\x04 \x01(\tR\x06bindDn\x12#\n" +
	"\rbind_password\x18\x05 \x01(\tR\fbindPassword\x12\x17\n" +
	"\abase_dn\x18\x06 \x01(\tR\x06baseDn\x12\x1f\n" +
	"\vuser_filter\x18\a \x01(\tR\n" +
	"userFilter\x12+\n" +
	"\x11security_protocol\x18\b \x01(\tR\x10securityProtocol\x12>\n" +
	"\rfield_mapping\x18\t \x01(\v2\x19.bytebase.v1.FieldMappingR\ffieldMapping\"}\n" +
	"\fFieldMapping\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x04 \x01(\tR\x05phone*^\n" +
	"\x14IdentityProviderType\x12&\n" +
	"\"IDENTITY_PROVIDER_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06OAUTH2\x10\x01\x12\b\n" +
	"\x04OIDC\x10\x02\x12\b\n" +
	"\x04LDAP\x10\x03*R\n" +
	"\x0fOAuth2AuthStyle\x12!\n" +
	"\x1dOAUTH2_AUTH_STYLE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tIN_PARAMS\x10\x01\x12\r\n" +
	"\tIN_HEADER\x10\x022\xf7\t\n" +
	"\x17IdentityProviderService\x12\x9f\x01\n" +
	"\x13GetIdentityProvider\x12'.bytebase.v1.GetIdentityProviderRequest\x1a\x1d.bytebase.v1.IdentityProvider\"@\xdaA\x04name\x8a\xea0\x18bb.identityProviders.get\x90\xea0\x01\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/{name=idps/*}\x12\x87\x01\n" +
	"\x15ListIdentityProviders\x12).bytebase.v1.ListIdentityProvidersRequest\x1a*.bytebase.v1.ListIdentityProvidersResponse\"\x17\xdaA\x00\x80\xea0\x01\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/v1/idps\x12\xb2\x01\n" +
	"\x16CreateIdentityProvider\x12*.bytebase.v1.CreateIdentityProviderRequest\x1a\x1d.bytebase.v1.IdentityProvider\"M\xdaA\x00\x8a\xea0\x1bbb.identityProviders.create\x90\xea0\x01\x98\xea0\x01\x82\xd3\xe4\x93\x02\x1d:\x11identity_provider\"\b/v1/idps\x12\xeb\x01\n" +
	"\x16UpdateIdentityProvider\x12*.bytebase.v1.UpdateIdentityProviderRequest\x1a\x1d.bytebase.v1.IdentityProvider\"\x85\x01\xdaA\x1didentity_provider,update_mask\x8a\xea0\x1bbb.identityProviders.update\x90\xea0\x01\x98\xea0\x01\x82\xd3\xe4\x93\x028:\x11identity_provider2#/v1/{identity_provider.name=idps/*}\x12\xa5\x01\n" +
	"\x16DeleteIdentityProvider\x12*.bytebase.v1.DeleteIdentityProviderRequest\x1a\x16.google.protobuf.Empty\"G\xdaA\x04name\x8a\xea0\x1bbb.identityProviders.delete\x90\xea0\x01\x98\xea0\x01\x82\xd3\xe4\x93\x02\x13*\x11/v1/{name=idps/*}\x12\xb7\x01\n" +
	"\x18UndeleteIdentityProvider\x12,.bytebase.v1.UndeleteIdentityProviderRequest\x1a\x1d.bytebase.v1.IdentityProvider\"N\x8a\xea0\x1dbb.identityProviders.undelete\x90\xea0\x01\x98\xea0\x01\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/{name=idps/*}:undelete\x12\xaa\x01\n" +
	"\x14TestIdentityProvider\x12(.bytebase.v1.TestIdentityProviderRequest\x1a).bytebase.v1.TestIdentityProviderResponse\"=\x8a\xea0\x1bbb.identityProviders.update\x90\xea0\x01\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/idps/*:testB\x11Z\x0fgenerated-go/v1b\x06proto3"

var (
	file_v1_idp_service_proto_rawDescOnce sync.Once
	file_v1_idp_service_proto_rawDescData []byte
)

func file_v1_idp_service_proto_rawDescGZIP() []byte {
	file_v1_idp_service_proto_rawDescOnce.Do(func() {
		file_v1_idp_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_idp_service_proto_rawDesc), len(file_v1_idp_service_proto_rawDesc)))
	})
	return file_v1_idp_service_proto_rawDescData
}

var file_v1_idp_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_idp_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_v1_idp_service_proto_goTypes = []any{
	(IdentityProviderType)(0),                        // 0: bytebase.v1.IdentityProviderType
	(OAuth2AuthStyle)(0),                             // 1: bytebase.v1.OAuth2AuthStyle
	(*GetIdentityProviderRequest)(nil),               // 2: bytebase.v1.GetIdentityProviderRequest
	(*ListIdentityProvidersRequest)(nil),             // 3: bytebase.v1.ListIdentityProvidersRequest
	(*ListIdentityProvidersResponse)(nil),            // 4: bytebase.v1.ListIdentityProvidersResponse
	(*CreateIdentityProviderRequest)(nil),            // 5: bytebase.v1.CreateIdentityProviderRequest
	(*UpdateIdentityProviderRequest)(nil),            // 6: bytebase.v1.UpdateIdentityProviderRequest
	(*DeleteIdentityProviderRequest)(nil),            // 7: bytebase.v1.DeleteIdentityProviderRequest
	(*UndeleteIdentityProviderRequest)(nil),          // 8: bytebase.v1.UndeleteIdentityProviderRequest
	(*TestIdentityProviderRequest)(nil),              // 9: bytebase.v1.TestIdentityProviderRequest
	(*OAuth2IdentityProviderTestRequestContext)(nil), // 10: bytebase.v1.OAuth2IdentityProviderTestRequestContext
	(*TestIdentityProviderResponse)(nil),             // 11: bytebase.v1.TestIdentityProviderResponse
	(*IdentityProvider)(nil),                         // 12: bytebase.v1.IdentityProvider
	(*IdentityProviderConfig)(nil),                   // 13: bytebase.v1.IdentityProviderConfig
	(*OAuth2IdentityProviderConfig)(nil),             // 14: bytebase.v1.OAuth2IdentityProviderConfig
	(*OIDCIdentityProviderConfig)(nil),               // 15: bytebase.v1.OIDCIdentityProviderConfig
	(*LDAPIdentityProviderConfig)(nil),               // 16: bytebase.v1.LDAPIdentityProviderConfig
	(*FieldMapping)(nil),                             // 17: bytebase.v1.FieldMapping
	(*fieldmaskpb.FieldMask)(nil),                    // 18: google.protobuf.FieldMask
	(State)(0),                                       // 19: bytebase.v1.State
	(*emptypb.Empty)(nil),                            // 20: google.protobuf.Empty
}
var file_v1_idp_service_proto_depIdxs = []int32{
	12, // 0: bytebase.v1.ListIdentityProvidersResponse.identity_providers:type_name -> bytebase.v1.IdentityProvider
	12, // 1: bytebase.v1.CreateIdentityProviderRequest.identity_provider:type_name -> bytebase.v1.IdentityProvider
	12, // 2: bytebase.v1.UpdateIdentityProviderRequest.identity_provider:type_name -> bytebase.v1.IdentityProvider
	18, // 3: bytebase.v1.UpdateIdentityProviderRequest.update_mask:type_name -> google.protobuf.FieldMask
	12, // 4: bytebase.v1.TestIdentityProviderRequest.identity_provider:type_name -> bytebase.v1.IdentityProvider
	10, // 5: bytebase.v1.TestIdentityProviderRequest.oauth2_context:type_name -> bytebase.v1.OAuth2IdentityProviderTestRequestContext
	19, // 6: bytebase.v1.IdentityProvider.state:type_name -> bytebase.v1.State
	0,  // 7: bytebase.v1.IdentityProvider.type:type_name -> bytebase.v1.IdentityProviderType
	13, // 8: bytebase.v1.IdentityProvider.config:type_name -> bytebase.v1.IdentityProviderConfig
	14, // 9: bytebase.v1.IdentityProviderConfig.oauth2_config:type_name -> bytebase.v1.OAuth2IdentityProviderConfig
	15, // 10: bytebase.v1.IdentityProviderConfig.oidc_config:type_name -> bytebase.v1.OIDCIdentityProviderConfig
	16, // 11: bytebase.v1.IdentityProviderConfig.ldap_config:type_name -> bytebase.v1.LDAPIdentityProviderConfig
	17, // 12: bytebase.v1.OAuth2IdentityProviderConfig.field_mapping:type_name -> bytebase.v1.FieldMapping
	1,  // 13: bytebase.v1.OAuth2IdentityProviderConfig.auth_style:type_name -> bytebase.v1.OAuth2AuthStyle
	17, // 14: bytebase.v1.OIDCIdentityProviderConfig.field_mapping:type_name -> bytebase.v1.FieldMapping
	1,  // 15: bytebase.v1.OIDCIdentityProviderConfig.auth_style:type_name -> bytebase.v1.OAuth2AuthStyle
	17, // 16: bytebase.v1.LDAPIdentityProviderConfig.field_mapping:type_name -> bytebase.v1.FieldMapping
	2,  // 17: bytebase.v1.IdentityProviderService.GetIdentityProvider:input_type -> bytebase.v1.GetIdentityProviderRequest
	3,  // 18: bytebase.v1.IdentityProviderService.ListIdentityProviders:input_type -> bytebase.v1.ListIdentityProvidersRequest
	5,  // 19: bytebase.v1.IdentityProviderService.CreateIdentityProvider:input_type -> bytebase.v1.CreateIdentityProviderRequest
	6,  // 20: bytebase.v1.IdentityProviderService.UpdateIdentityProvider:input_type -> bytebase.v1.UpdateIdentityProviderRequest
	7,  // 21: bytebase.v1.IdentityProviderService.DeleteIdentityProvider:input_type -> bytebase.v1.DeleteIdentityProviderRequest
	8,  // 22: bytebase.v1.IdentityProviderService.UndeleteIdentityProvider:input_type -> bytebase.v1.UndeleteIdentityProviderRequest
	9,  // 23: bytebase.v1.IdentityProviderService.TestIdentityProvider:input_type -> bytebase.v1.TestIdentityProviderRequest
	12, // 24: bytebase.v1.IdentityProviderService.GetIdentityProvider:output_type -> bytebase.v1.IdentityProvider
	4,  // 25: bytebase.v1.IdentityProviderService.ListIdentityProviders:output_type -> bytebase.v1.ListIdentityProvidersResponse
	12, // 26: bytebase.v1.IdentityProviderService.CreateIdentityProvider:output_type -> bytebase.v1.IdentityProvider
	12, // 27: bytebase.v1.IdentityProviderService.UpdateIdentityProvider:output_type -> bytebase.v1.IdentityProvider
	20, // 28: bytebase.v1.IdentityProviderService.DeleteIdentityProvider:output_type -> google.protobuf.Empty
	12, // 29: bytebase.v1.IdentityProviderService.UndeleteIdentityProvider:output_type -> bytebase.v1.IdentityProvider
	11, // 30: bytebase.v1.IdentityProviderService.TestIdentityProvider:output_type -> bytebase.v1.TestIdentityProviderResponse
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_v1_idp_service_proto_init() }
func file_v1_idp_service_proto_init() {
	if File_v1_idp_service_proto != nil {
		return
	}
	file_v1_annotation_proto_init()
	file_v1_common_proto_init()
	file_v1_idp_service_proto_msgTypes[7].OneofWrappers = []any{
		(*TestIdentityProviderRequest_Oauth2Context)(nil),
	}
	file_v1_idp_service_proto_msgTypes[11].OneofWrappers = []any{
		(*IdentityProviderConfig_Oauth2Config)(nil),
		(*IdentityProviderConfig_OidcConfig)(nil),
		(*IdentityProviderConfig_LdapConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_idp_service_proto_rawDesc), len(file_v1_idp_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_idp_service_proto_goTypes,
		DependencyIndexes: file_v1_idp_service_proto_depIdxs,
		EnumInfos:         file_v1_idp_service_proto_enumTypes,
		MessageInfos:      file_v1_idp_service_proto_msgTypes,
	}.Build()
	File_v1_idp_service_proto = out.File
	file_v1_idp_service_proto_goTypes = nil
	file_v1_idp_service_proto_depIdxs = nil
}
