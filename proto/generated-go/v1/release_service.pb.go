// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/release_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReleaseFileType int32

const (
	ReleaseFileType_TYPE_UNSPECIFIED ReleaseFileType = 0
	ReleaseFileType_VERSIONED        ReleaseFileType = 1
)

// Enum value maps for ReleaseFileType.
var (
	ReleaseFileType_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "VERSIONED",
	}
	ReleaseFileType_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"VERSIONED":        1,
	}
)

func (x ReleaseFileType) Enum() *ReleaseFileType {
	p := new(ReleaseFileType)
	*p = x
	return p
}

func (x ReleaseFileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReleaseFileType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_release_service_proto_enumTypes[0].Descriptor()
}

func (ReleaseFileType) Type() protoreflect.EnumType {
	return &file_v1_release_service_proto_enumTypes[0]
}

func (x ReleaseFileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReleaseFileType.Descriptor instead.
func (ReleaseFileType) EnumDescriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{0}
}

type CheckReleaseResponse_RiskLevel int32

const (
	CheckReleaseResponse_RISK_LEVEL_UNSPECIFIED CheckReleaseResponse_RiskLevel = 0
	CheckReleaseResponse_LOW                    CheckReleaseResponse_RiskLevel = 1
	CheckReleaseResponse_MODERATE               CheckReleaseResponse_RiskLevel = 2
	CheckReleaseResponse_HIGH                   CheckReleaseResponse_RiskLevel = 3
)

// Enum value maps for CheckReleaseResponse_RiskLevel.
var (
	CheckReleaseResponse_RiskLevel_name = map[int32]string{
		0: "RISK_LEVEL_UNSPECIFIED",
		1: "LOW",
		2: "MODERATE",
		3: "HIGH",
	}
	CheckReleaseResponse_RiskLevel_value = map[string]int32{
		"RISK_LEVEL_UNSPECIFIED": 0,
		"LOW":                    1,
		"MODERATE":               2,
		"HIGH":                   3,
	}
)

func (x CheckReleaseResponse_RiskLevel) Enum() *CheckReleaseResponse_RiskLevel {
	p := new(CheckReleaseResponse_RiskLevel)
	*p = x
	return p
}

func (x CheckReleaseResponse_RiskLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckReleaseResponse_RiskLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_release_service_proto_enumTypes[1].Descriptor()
}

func (CheckReleaseResponse_RiskLevel) Type() protoreflect.EnumType {
	return &file_v1_release_service_proto_enumTypes[1]
}

func (x CheckReleaseResponse_RiskLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckReleaseResponse_RiskLevel.Descriptor instead.
func (CheckReleaseResponse_RiskLevel) EnumDescriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{8, 0}
}

type Release_File_ChangeType int32

const (
	Release_File_CHANGE_TYPE_UNSPECIFIED Release_File_ChangeType = 0
	Release_File_DDL                     Release_File_ChangeType = 1
	Release_File_DDL_GHOST               Release_File_ChangeType = 2
	Release_File_DML                     Release_File_ChangeType = 3
)

// Enum value maps for Release_File_ChangeType.
var (
	Release_File_ChangeType_name = map[int32]string{
		0: "CHANGE_TYPE_UNSPECIFIED",
		1: "DDL",
		2: "DDL_GHOST",
		3: "DML",
	}
	Release_File_ChangeType_value = map[string]int32{
		"CHANGE_TYPE_UNSPECIFIED": 0,
		"DDL":                     1,
		"DDL_GHOST":               2,
		"DML":                     3,
	}
)

func (x Release_File_ChangeType) Enum() *Release_File_ChangeType {
	p := new(Release_File_ChangeType)
	*p = x
	return p
}

func (x Release_File_ChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Release_File_ChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_release_service_proto_enumTypes[2].Descriptor()
}

func (Release_File_ChangeType) Type() protoreflect.EnumType {
	return &file_v1_release_service_proto_enumTypes[2]
}

func (x Release_File_ChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Release_File_ChangeType.Descriptor instead.
func (Release_File_ChangeType) EnumDescriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{9, 0, 0}
}

type GetReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Format: projects/{project}/releases/{release}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReleaseRequest) Reset() {
	*x = GetReleaseRequest{}
	mi := &file_v1_release_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleaseRequest) ProtoMessage() {}

func (x *GetReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleaseRequest.ProtoReflect.Descriptor instead.
func (*GetReleaseRequest) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetReleaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListReleasesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Format: projects/{project}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of releases to return. The service may return fewer than this value.
	// If unspecified, at most 10 releases will be returned.
	// The maximum value is 1000; values above 1000 will be coerced to 1000.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Not used.
	// A page token, received from a previous `ListReleases` call.
	// Provide this to retrieve the subsequent page.
	//
	// When paginating, all other parameters provided to `ListReleases` must match
	// the call that provided the page token.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Show deleted releases if specified.
	ShowDeleted   bool `protobuf:"varint,4,opt,name=show_deleted,json=showDeleted,proto3" json:"show_deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReleasesRequest) Reset() {
	*x = ListReleasesRequest{}
	mi := &file_v1_release_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesRequest) ProtoMessage() {}

func (x *ListReleasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasesRequest.ProtoReflect.Descriptor instead.
func (*ListReleasesRequest) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListReleasesRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListReleasesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListReleasesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListReleasesRequest) GetShowDeleted() bool {
	if x != nil {
		return x.ShowDeleted
	}
	return false
}

type ListReleasesResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Releases []*Release             `protobuf:"bytes,1,rep,name=releases,proto3" json:"releases,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReleasesResponse) Reset() {
	*x = ListReleasesResponse{}
	mi := &file_v1_release_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReleasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReleasesResponse) ProtoMessage() {}

func (x *ListReleasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReleasesResponse.ProtoReflect.Descriptor instead.
func (*ListReleasesResponse) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListReleasesResponse) GetReleases() []*Release {
	if x != nil {
		return x.Releases
	}
	return nil
}

func (x *ListReleasesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Format: projects/{project}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The release to create.
	Release       *Release `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReleaseRequest) Reset() {
	*x = CreateReleaseRequest{}
	mi := &file_v1_release_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReleaseRequest) ProtoMessage() {}

func (x *CreateReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReleaseRequest.ProtoReflect.Descriptor instead.
func (*CreateReleaseRequest) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateReleaseRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateReleaseRequest) GetRelease() *Release {
	if x != nil {
		return x.Release
	}
	return nil
}

type UpdateReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The release to update.
	Release *Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	// The list of fields to be updated.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReleaseRequest) Reset() {
	*x = UpdateReleaseRequest{}
	mi := &file_v1_release_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReleaseRequest) ProtoMessage() {}

func (x *UpdateReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReleaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateReleaseRequest) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateReleaseRequest) GetRelease() *Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *UpdateReleaseRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the release to delete.
	// Format: projects/{project}/releases/{release}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReleaseRequest) Reset() {
	*x = DeleteReleaseRequest{}
	mi := &file_v1_release_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReleaseRequest) ProtoMessage() {}

func (x *DeleteReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReleaseRequest.ProtoReflect.Descriptor instead.
func (*DeleteReleaseRequest) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteReleaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UndeleteReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the deleted release.
	// Format: projects/{project}/releases/{release}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UndeleteReleaseRequest) Reset() {
	*x = UndeleteReleaseRequest{}
	mi := &file_v1_release_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndeleteReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeleteReleaseRequest) ProtoMessage() {}

func (x *UndeleteReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeleteReleaseRequest.ProtoReflect.Descriptor instead.
func (*UndeleteReleaseRequest) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{6}
}

func (x *UndeleteReleaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CheckReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Format: projects/{project}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The release to check.
	Release *Release `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	// The targets to dry-run the release.
	// Can be database or databaseGroup.
	// Format:
	// projects/{project}/databaseGroups/{databaseGroup}
	// instances/{instance}/databases/{database}
	Targets       []string `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckReleaseRequest) Reset() {
	*x = CheckReleaseRequest{}
	mi := &file_v1_release_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReleaseRequest) ProtoMessage() {}

func (x *CheckReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReleaseRequest.ProtoReflect.Descriptor instead.
func (*CheckReleaseRequest) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{7}
}

func (x *CheckReleaseRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CheckReleaseRequest) GetRelease() *Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *CheckReleaseRequest) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

type CheckReleaseResponse struct {
	state   protoimpl.MessageState              `protogen:"open.v1"`
	Results []*CheckReleaseResponse_CheckResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// The affected rows of the check.
	AffectedRows int32 `protobuf:"varint,2,opt,name=affected_rows,json=affectedRows,proto3" json:"affected_rows,omitempty"`
	// The aggregated risk level of the check.
	RiskLevel     CheckReleaseResponse_RiskLevel `protobuf:"varint,3,opt,name=risk_level,json=riskLevel,proto3,enum=bytebase.v1.CheckReleaseResponse_RiskLevel" json:"risk_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckReleaseResponse) Reset() {
	*x = CheckReleaseResponse{}
	mi := &file_v1_release_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReleaseResponse) ProtoMessage() {}

func (x *CheckReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReleaseResponse.ProtoReflect.Descriptor instead.
func (*CheckReleaseResponse) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{8}
}

func (x *CheckReleaseResponse) GetResults() []*CheckReleaseResponse_CheckResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CheckReleaseResponse) GetAffectedRows() int32 {
	if x != nil {
		return x.AffectedRows
	}
	return 0
}

func (x *CheckReleaseResponse) GetRiskLevel() CheckReleaseResponse_RiskLevel {
	if x != nil {
		return x.RiskLevel
	}
	return CheckReleaseResponse_RISK_LEVEL_UNSPECIFIED
}

type Release struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Format: projects/{project}/releases/{release}
	Name      string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title     string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Files     []*Release_File    `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
	VcsSource *Release_VCSSource `protobuf:"bytes,4,opt,name=vcs_source,json=vcsSource,proto3" json:"vcs_source,omitempty"`
	// Format: users/hello@world.com
	Creator       string                 `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	State         State                  `protobuf:"varint,7,opt,name=state,proto3,enum=bytebase.v1.State" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_v1_release_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{9}
}

func (x *Release) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Release) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Release) GetFiles() []*Release_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Release) GetVcsSource() *Release_VCSSource {
	if x != nil {
		return x.VcsSource
	}
	return nil
}

func (x *Release) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Release) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Release) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

type CheckReleaseResponse_CheckResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file path that is being checked.
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// The target that the check is performed on.
	// Should be a database. Format: instances/{instance}/databases/{database}
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	// The list of advice for the file and the target.
	Advices []*Advice `protobuf:"bytes,3,rep,name=advices,proto3" json:"advices,omitempty"`
	// The count of affected rows of the statement on the target.
	AffectedRows int32 `protobuf:"varint,4,opt,name=affected_rows,json=affectedRows,proto3" json:"affected_rows,omitempty"`
	// The risk level of the statement on the target.
	RiskLevel     CheckReleaseResponse_RiskLevel `protobuf:"varint,5,opt,name=risk_level,json=riskLevel,proto3,enum=bytebase.v1.CheckReleaseResponse_RiskLevel" json:"risk_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckReleaseResponse_CheckResult) Reset() {
	*x = CheckReleaseResponse_CheckResult{}
	mi := &file_v1_release_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckReleaseResponse_CheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReleaseResponse_CheckResult) ProtoMessage() {}

func (x *CheckReleaseResponse_CheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReleaseResponse_CheckResult.ProtoReflect.Descriptor instead.
func (*CheckReleaseResponse_CheckResult) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CheckReleaseResponse_CheckResult) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *CheckReleaseResponse_CheckResult) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *CheckReleaseResponse_CheckResult) GetAdvices() []*Advice {
	if x != nil {
		return x.Advices
	}
	return nil
}

func (x *CheckReleaseResponse_CheckResult) GetAffectedRows() int32 {
	if x != nil {
		return x.AffectedRows
	}
	return 0
}

func (x *CheckReleaseResponse_CheckResult) GetRiskLevel() CheckReleaseResponse_RiskLevel {
	if x != nil {
		return x.RiskLevel
	}
	return CheckReleaseResponse_RISK_LEVEL_UNSPECIFIED
}

type Release_File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier for the file.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The path of the file. e.g. `2.2/V0001_create_table.sql`.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// The sheet that holds the content.
	// Format: projects/{project}/sheets/{sheet}
	Sheet string `protobuf:"bytes,3,opt,name=sheet,proto3" json:"sheet,omitempty"`
	// The SHA256 hash value of the sheet.
	SheetSha256 string                  `protobuf:"bytes,4,opt,name=sheet_sha256,json=sheetSha256,proto3" json:"sheet_sha256,omitempty"`
	Type        ReleaseFileType         `protobuf:"varint,5,opt,name=type,proto3,enum=bytebase.v1.ReleaseFileType" json:"type,omitempty"`
	Version     string                  `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	ChangeType  Release_File_ChangeType `protobuf:"varint,9,opt,name=change_type,json=changeType,proto3,enum=bytebase.v1.Release_File_ChangeType" json:"change_type,omitempty"`
	// The statement is used for preview or check purpose.
	Statement     []byte `protobuf:"bytes,7,opt,name=statement,proto3" json:"statement,omitempty"`
	StatementSize int64  `protobuf:"varint,8,opt,name=statement_size,json=statementSize,proto3" json:"statement_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release_File) Reset() {
	*x = Release_File{}
	mi := &file_v1_release_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release_File) ProtoMessage() {}

func (x *Release_File) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release_File.ProtoReflect.Descriptor instead.
func (*Release_File) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Release_File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Release_File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Release_File) GetSheet() string {
	if x != nil {
		return x.Sheet
	}
	return ""
}

func (x *Release_File) GetSheetSha256() string {
	if x != nil {
		return x.SheetSha256
	}
	return ""
}

func (x *Release_File) GetType() ReleaseFileType {
	if x != nil {
		return x.Type
	}
	return ReleaseFileType_TYPE_UNSPECIFIED
}

func (x *Release_File) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Release_File) GetChangeType() Release_File_ChangeType {
	if x != nil {
		return x.ChangeType
	}
	return Release_File_CHANGE_TYPE_UNSPECIFIED
}

func (x *Release_File) GetStatement() []byte {
	if x != nil {
		return x.Statement
	}
	return nil
}

func (x *Release_File) GetStatementSize() int64 {
	if x != nil {
		return x.StatementSize
	}
	return 0
}

type Release_VCSSource struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	VcsType VCSType                `protobuf:"varint,1,opt,name=vcs_type,json=vcsType,proto3,enum=bytebase.v1.VCSType" json:"vcs_type,omitempty"`
	// The url link to the e.g. GitHub commit or pull request.
	Url           string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release_VCSSource) Reset() {
	*x = Release_VCSSource{}
	mi := &file_v1_release_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release_VCSSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release_VCSSource) ProtoMessage() {}

func (x *Release_VCSSource) ProtoReflect() protoreflect.Message {
	mi := &file_v1_release_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release_VCSSource.ProtoReflect.Descriptor instead.
func (*Release_VCSSource) Descriptor() ([]byte, []int) {
	return file_v1_release_service_proto_rawDescGZIP(), []int{9, 1}
}

func (x *Release_VCSSource) GetVcsType() VCSType {
	if x != nil {
		return x.VcsType
	}
	return VCSType_VCS_TYPE_UNSPECIFIED
}

func (x *Release_VCSSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_v1_release_service_proto protoreflect.FileDescriptor

const file_v1_release_service_proto_rawDesc = "" +
	"\n" +
	"\x18v1/release_service.proto\x12\vbytebase.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13v1/annotation.proto\x1a\x0fv1/common.proto\x1a\x14v1/sql_service.proto\"F\n" +
	"\x11GetReleaseRequest\x121\n" +
	"\x04name\x18\x01 \x01(\tB\x1d\xe2A\x01\x02\xfaA\x16\n" +
	"\x14bytebase.com/ReleaseR\x04name\"\xab\x01\n" +
	"\x13ListReleasesRequest\x125\n" +
	"\x06parent\x18\x01 \x01(\tB\x1d\xe2A\x01\x02\xfaA\x16\n" +
	"\x14bytebase.com/ProjectR\x06parent\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12!\n" +
	"\fshow_deleted\x18\x04 \x01(\bR\vshowDeleted\"p\n" +
	"\x14ListReleasesResponse\x120\n" +
	"\breleases\x18\x01 \x03(\v2\x14.bytebase.v1.ReleaseR\breleases\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x83\x01\n" +
	"\x14CreateReleaseRequest\x125\n" +
	"\x06parent\x18\x01 \x01(\tB\x1d\xe2A\x01\x02\xfaA\x16\n" +
	"\x14bytebase.com/ProjectR\x06parent\x124\n" +
	"\arelease\x18\x02 \x01(\v2\x14.bytebase.v1.ReleaseB\x04\xe2A\x01\x02R\arelease\"\x89\x01\n" +
	"\x14UpdateReleaseRequest\x124\n" +
	"\arelease\x18\x01 \x01(\v2\x14.bytebase.v1.ReleaseB\x04\xe2A\x01\x02R\arelease\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"I\n" +
	"\x14DeleteReleaseRequest\x121\n" +
	"\x04name\x18\x01 \x01(\tB\x1d\xe2A\x01\x02\xfaA\x16\n" +
	"\x14bytebase.com/ReleaseR\x04name\"K\n" +
	"\x16UndeleteReleaseRequest\x121\n" +
	"\x04name\x18\x01 \x01(\tB\x1d\xe2A\x01\x02\xfaA\x16\n" +
	"\x14bytebase.com/ReleaseR\x04name\"\x9c\x01\n" +
	"\x13CheckReleaseRequest\x125\n" +
	"\x06parent\x18\x01 \x01(\tB\x1d\xe2A\x01\x02\xfaA\x16\n" +
	"\x14bytebase.com/ProjectR\x06parent\x124\n" +
	"\arelease\x18\x02 \x01(\v2\x14.bytebase.v1.ReleaseB\x04\xe2A\x01\x02R\arelease\x12\x18\n" +
	"\atargets\x18\x03 \x03(\tR\atargets\"\xf6\x03\n" +
	"\x14CheckReleaseResponse\x12G\n" +
	"\aresults\x18\x01 \x03(\v2-.bytebase.v1.CheckReleaseResponse.CheckResultR\aresults\x12#\n" +
	"\raffected_rows\x18\x02 \x01(\x05R\faffectedRows\x12J\n" +
	"\n" +
	"risk_level\x18\x03 \x01(\x0e2+.bytebase.v1.CheckReleaseResponse.RiskLevelR\triskLevel\x1a\xd9\x01\n" +
	"\vCheckResult\x12\x12\n" +
	"\x04file\x18\x01 \x01(\tR\x04file\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12-\n" +
	"\aadvices\x18\x03 \x03(\v2\x13.bytebase.v1.AdviceR\aadvices\x12#\n" +
	"\raffected_rows\x18\x04 \x01(\x05R\faffectedRows\x12J\n" +
	"\n" +
	"risk_level\x18\x05 \x01(\x0e2+.bytebase.v1.CheckReleaseResponse.RiskLevelR\triskLevel\"H\n" +
	"\tRiskLevel\x12\x1a\n" +
	"\x16RISK_LEVEL_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03LOW\x10\x01\x12\f\n" +
	"\bMODERATE\x10\x02\x12\b\n" +
	"\x04HIGH\x10\x03\"\xfd\x06\n" +
	"\aRelease\x12\x18\n" +
	"\x04name\x18\x01 \x01(\tB\x04\xe2A\x01\x03R\x04name\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12/\n" +
	"\x05files\x18\x03 \x03(\v2\x19.bytebase.v1.Release.FileR\x05files\x12=\n" +
	"\n" +
	"vcs_source\x18\x04 \x01(\v2\x1e.bytebase.v1.Release.VCSSourceR\tvcsSource\x12\x1e\n" +
	"\acreator\x18\x05 \x01(\tB\x04\xe2A\x01\x03R\acreator\x12A\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe2A\x01\x03R\n" +
	"createTime\x12.\n" +
	"\x05state\x18\a \x01(\x0e2\x12.bytebase.v1.StateB\x04\xe2A\x01\x03R\x05state\x1a\xac\x03\n" +
	"\x04File\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12-\n" +
	"\x05sheet\x18\x03 \x01(\tB\x17\xfaA\x14\n" +
	"\x12bytebase.com/SheetR\x05sheet\x12'\n" +
	"\fsheet_sha256\x18\x04 \x01(\tB\x04\xe2A\x01\x03R\vsheetSha256\x120\n" +
	"\x04type\x18\x05 \x01(\x0e2\x1c.bytebase.v1.ReleaseFileTypeR\x04type\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x12E\n" +
	"\vchange_type\x18\t \x01(\x0e2$.bytebase.v1.Release.File.ChangeTypeR\n" +
	"changeType\x12\x1c\n" +
	"\tstatement\x18\a \x01(\fR\tstatement\x12+\n" +
	"\x0estatement_size\x18\b \x01(\x03B\x04\xe2A\x01\x03R\rstatementSize\"J\n" +
	"\n" +
	"ChangeType\x12\x1b\n" +
	"\x17CHANGE_TYPE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03DDL\x10\x01\x12\r\n" +
	"\tDDL_GHOST\x10\x02\x12\a\n" +
	"\x03DML\x10\x03\x1aN\n" +
	"\tVCSSource\x12/\n" +
	"\bvcs_type\x18\x01 \x01(\x0e2\x14.bytebase.v1.VCSTypeR\avcsType\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url:@\xeaA=\n" +
	"\x14bytebase.com/Release\x12%projects/{project}/releases/{release}*6\n" +
	"\x0fReleaseFileType\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tVERSIONED\x10\x012\xf5\b\n" +
	"\x0eReleaseService\x12\x8a\x01\n" +
	"\n" +
	"GetRelease\x12\x1e.bytebase.v1.GetReleaseRequest\x1a\x14.bytebase.v1.Release\"F\xdaA\x04name\x8a\xea0\x0fbb.releases.get\x90\xea0\x01\x82\xd3\xe4\x93\x02\"\x12 /v1/{name=projects/*/releases/*}\x12\x9e\x01\n" +
	"\fListReleases\x12 .bytebase.v1.ListReleasesRequest\x1a!.bytebase.v1.ListReleasesResponse\"I\xdaA\x06parent\x8a\xea0\x10bb.releases.list\x90\xea0\x01\x82\xd3\xe4\x93\x02\"\x12 /v1/{parent=projects/*}/releases\x12\xa6\x01\n" +
	"\rCreateRelease\x12!.bytebase.v1.CreateReleaseRequest\x1a\x14.bytebase.v1.Release\"\\\xdaA\x0eparent,release\x8a\xea0\x12bb.releases.create\x90\xea0\x01\x82\xd3\xe4\x93\x02+:\arelease\" /v1/{parent=projects/*}/releases\x12\xb3\x01\n" +
	"\rUpdateRelease\x12!.bytebase.v1.UpdateReleaseRequest\x1a\x14.bytebase.v1.Release\"i\xdaA\x13release,update_mask\x8a\xea0\x12bb.releases.update\x90\xea0\x01\x82\xd3\xe4\x93\x023:\arelease2(/v1/{release.name=projects/*/releases/*}\x12\x95\x01\n" +
	"\rDeleteRelease\x12!.bytebase.v1.DeleteReleaseRequest\x1a\x16.google.protobuf.Empty\"I\xdaA\x04name\x8a\xea0\x12bb.releases.delete\x90\xea0\x01\x82\xd3\xe4\x93\x02\"* /v1/{name=projects/*/releases/*}\x12\x9b\x01\n" +
	"\x0fUndeleteRelease\x12#.bytebase.v1.UndeleteReleaseRequest\x1a\x14.bytebase.v1.Release\"M\x8a\xea0\x14bb.releases.undelete\x90\xea0\x01\x82\xd3\xe4\x93\x02+\")/v1/{name=projects/*/releases/*}:undelete\x12\x9f\x01\n" +
	"\fCheckRelease\x12 .bytebase.v1.CheckReleaseRequest\x1a!.bytebase.v1.CheckReleaseResponse\"J\x8a\xea0\x11bb.releases.check\x90\xea0\x01\x82\xd3\xe4\x93\x02+:\x01*\"&/v1/{parent=projects/*}/releases:checkB\x11Z\x0fgenerated-go/v1b\x06proto3"

var (
	file_v1_release_service_proto_rawDescOnce sync.Once
	file_v1_release_service_proto_rawDescData []byte
)

func file_v1_release_service_proto_rawDescGZIP() []byte {
	file_v1_release_service_proto_rawDescOnce.Do(func() {
		file_v1_release_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_release_service_proto_rawDesc), len(file_v1_release_service_proto_rawDesc)))
	})
	return file_v1_release_service_proto_rawDescData
}

var file_v1_release_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_v1_release_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_v1_release_service_proto_goTypes = []any{
	(ReleaseFileType)(0),                     // 0: bytebase.v1.ReleaseFileType
	(CheckReleaseResponse_RiskLevel)(0),      // 1: bytebase.v1.CheckReleaseResponse.RiskLevel
	(Release_File_ChangeType)(0),             // 2: bytebase.v1.Release.File.ChangeType
	(*GetReleaseRequest)(nil),                // 3: bytebase.v1.GetReleaseRequest
	(*ListReleasesRequest)(nil),              // 4: bytebase.v1.ListReleasesRequest
	(*ListReleasesResponse)(nil),             // 5: bytebase.v1.ListReleasesResponse
	(*CreateReleaseRequest)(nil),             // 6: bytebase.v1.CreateReleaseRequest
	(*UpdateReleaseRequest)(nil),             // 7: bytebase.v1.UpdateReleaseRequest
	(*DeleteReleaseRequest)(nil),             // 8: bytebase.v1.DeleteReleaseRequest
	(*UndeleteReleaseRequest)(nil),           // 9: bytebase.v1.UndeleteReleaseRequest
	(*CheckReleaseRequest)(nil),              // 10: bytebase.v1.CheckReleaseRequest
	(*CheckReleaseResponse)(nil),             // 11: bytebase.v1.CheckReleaseResponse
	(*Release)(nil),                          // 12: bytebase.v1.Release
	(*CheckReleaseResponse_CheckResult)(nil), // 13: bytebase.v1.CheckReleaseResponse.CheckResult
	(*Release_File)(nil),                     // 14: bytebase.v1.Release.File
	(*Release_VCSSource)(nil),                // 15: bytebase.v1.Release.VCSSource
	(*fieldmaskpb.FieldMask)(nil),            // 16: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),            // 17: google.protobuf.Timestamp
	(State)(0),                               // 18: bytebase.v1.State
	(*Advice)(nil),                           // 19: bytebase.v1.Advice
	(VCSType)(0),                             // 20: bytebase.v1.VCSType
	(*emptypb.Empty)(nil),                    // 21: google.protobuf.Empty
}
var file_v1_release_service_proto_depIdxs = []int32{
	12, // 0: bytebase.v1.ListReleasesResponse.releases:type_name -> bytebase.v1.Release
	12, // 1: bytebase.v1.CreateReleaseRequest.release:type_name -> bytebase.v1.Release
	12, // 2: bytebase.v1.UpdateReleaseRequest.release:type_name -> bytebase.v1.Release
	16, // 3: bytebase.v1.UpdateReleaseRequest.update_mask:type_name -> google.protobuf.FieldMask
	12, // 4: bytebase.v1.CheckReleaseRequest.release:type_name -> bytebase.v1.Release
	13, // 5: bytebase.v1.CheckReleaseResponse.results:type_name -> bytebase.v1.CheckReleaseResponse.CheckResult
	1,  // 6: bytebase.v1.CheckReleaseResponse.risk_level:type_name -> bytebase.v1.CheckReleaseResponse.RiskLevel
	14, // 7: bytebase.v1.Release.files:type_name -> bytebase.v1.Release.File
	15, // 8: bytebase.v1.Release.vcs_source:type_name -> bytebase.v1.Release.VCSSource
	17, // 9: bytebase.v1.Release.create_time:type_name -> google.protobuf.Timestamp
	18, // 10: bytebase.v1.Release.state:type_name -> bytebase.v1.State
	19, // 11: bytebase.v1.CheckReleaseResponse.CheckResult.advices:type_name -> bytebase.v1.Advice
	1,  // 12: bytebase.v1.CheckReleaseResponse.CheckResult.risk_level:type_name -> bytebase.v1.CheckReleaseResponse.RiskLevel
	0,  // 13: bytebase.v1.Release.File.type:type_name -> bytebase.v1.ReleaseFileType
	2,  // 14: bytebase.v1.Release.File.change_type:type_name -> bytebase.v1.Release.File.ChangeType
	20, // 15: bytebase.v1.Release.VCSSource.vcs_type:type_name -> bytebase.v1.VCSType
	3,  // 16: bytebase.v1.ReleaseService.GetRelease:input_type -> bytebase.v1.GetReleaseRequest
	4,  // 17: bytebase.v1.ReleaseService.ListReleases:input_type -> bytebase.v1.ListReleasesRequest
	6,  // 18: bytebase.v1.ReleaseService.CreateRelease:input_type -> bytebase.v1.CreateReleaseRequest
	7,  // 19: bytebase.v1.ReleaseService.UpdateRelease:input_type -> bytebase.v1.UpdateReleaseRequest
	8,  // 20: bytebase.v1.ReleaseService.DeleteRelease:input_type -> bytebase.v1.DeleteReleaseRequest
	9,  // 21: bytebase.v1.ReleaseService.UndeleteRelease:input_type -> bytebase.v1.UndeleteReleaseRequest
	10, // 22: bytebase.v1.ReleaseService.CheckRelease:input_type -> bytebase.v1.CheckReleaseRequest
	12, // 23: bytebase.v1.ReleaseService.GetRelease:output_type -> bytebase.v1.Release
	5,  // 24: bytebase.v1.ReleaseService.ListReleases:output_type -> bytebase.v1.ListReleasesResponse
	12, // 25: bytebase.v1.ReleaseService.CreateRelease:output_type -> bytebase.v1.Release
	12, // 26: bytebase.v1.ReleaseService.UpdateRelease:output_type -> bytebase.v1.Release
	21, // 27: bytebase.v1.ReleaseService.DeleteRelease:output_type -> google.protobuf.Empty
	12, // 28: bytebase.v1.ReleaseService.UndeleteRelease:output_type -> bytebase.v1.Release
	11, // 29: bytebase.v1.ReleaseService.CheckRelease:output_type -> bytebase.v1.CheckReleaseResponse
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_v1_release_service_proto_init() }
func file_v1_release_service_proto_init() {
	if File_v1_release_service_proto != nil {
		return
	}
	file_v1_annotation_proto_init()
	file_v1_common_proto_init()
	file_v1_sql_service_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_release_service_proto_rawDesc), len(file_v1_release_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_release_service_proto_goTypes,
		DependencyIndexes: file_v1_release_service_proto_depIdxs,
		EnumInfos:         file_v1_release_service_proto_enumTypes,
		MessageInfos:      file_v1_release_service_proto_msgTypes,
	}.Build()
	File_v1_release_service_proto = out.File
	file_v1_release_service_proto_goTypes = nil
	file_v1_release_service_proto_depIdxs = nil
}
