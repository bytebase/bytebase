// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: v1/database_role.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RoleAttribute is the attribute for role. Docs: https://www.postgresql.org/docs/current/role-attributes.html
type DatabaseRoleAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A database superuser bypasses all permission checks, except the right to log in.
	SuperUser bool `protobuf:"varint,1,opt,name=super_user,json=superUser,proto3" json:"super_user,omitempty"`
	// A role is given permission to inherit the privileges of roles it is a member of. To create a role without the permission, use "noInherit = true"
	NoInherit bool `protobuf:"varint,2,opt,name=no_inherit,json=noInherit,proto3" json:"no_inherit,omitempty"`
	// A role must be explicitly given permission to create more roles (except for superusers, since those bypass all permission checks).
	CreateRole bool `protobuf:"varint,3,opt,name=create_role,json=createRole,proto3" json:"create_role,omitempty"`
	// A role must be explicitly given permission to create databases (except for superusers, since those bypass all permission checks).
	CreateDb bool `protobuf:"varint,4,opt,name=create_db,json=createDb,proto3" json:"create_db,omitempty"`
	// Only roles that have the LOGIN attribute can be used as the initial role name for a database connection.
	CanLogin bool `protobuf:"varint,5,opt,name=can_login,json=canLogin,proto3" json:"can_login,omitempty"`
	// A role must explicitly be given permission to initiate streaming replication (except for superusers, since those bypass all permission checks).
	Replication bool `protobuf:"varint,6,opt,name=replication,proto3" json:"replication,omitempty"`
	// A role must be explicitly given permission to bypass every row-level security (RLS) policy (except for superusers, since those bypass all permission checks).
	BypassRls bool `protobuf:"varint,7,opt,name=bypass_rls,json=bypassRls,proto3" json:"bypass_rls,omitempty"`
}

func (x *DatabaseRoleAttribute) Reset() {
	*x = DatabaseRoleAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_database_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseRoleAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseRoleAttribute) ProtoMessage() {}

func (x *DatabaseRoleAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_v1_database_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseRoleAttribute.ProtoReflect.Descriptor instead.
func (*DatabaseRoleAttribute) Descriptor() ([]byte, []int) {
	return file_v1_database_role_proto_rawDescGZIP(), []int{0}
}

func (x *DatabaseRoleAttribute) GetSuperUser() bool {
	if x != nil {
		return x.SuperUser
	}
	return false
}

func (x *DatabaseRoleAttribute) GetNoInherit() bool {
	if x != nil {
		return x.NoInherit
	}
	return false
}

func (x *DatabaseRoleAttribute) GetCreateRole() bool {
	if x != nil {
		return x.CreateRole
	}
	return false
}

func (x *DatabaseRoleAttribute) GetCreateDb() bool {
	if x != nil {
		return x.CreateDb
	}
	return false
}

func (x *DatabaseRoleAttribute) GetCanLogin() bool {
	if x != nil {
		return x.CanLogin
	}
	return false
}

func (x *DatabaseRoleAttribute) GetReplication() bool {
	if x != nil {
		return x.Replication
	}
	return false
}

func (x *DatabaseRoleAttribute) GetBypassRls() bool {
	if x != nil {
		return x.BypassRls
	}
	return false
}

// DatabaseRole is the API message for database role.
type DatabaseRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role unique name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The Bytebase instance id for this role.
	InstanceId int32 `protobuf:"varint,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The connection count limit for this role.
	ConnectionLimit int32 `protobuf:"varint,3,opt,name=connection_limit,json=connectionLimit,proto3" json:"connection_limit,omitempty"`
	// The expiration for the role's password.
	ValidUntil *string `protobuf:"bytes,4,opt,name=valid_until,json=validUntil,proto3,oneof" json:"valid_until,omitempty"`
	// The role attribute.
	Attribute *DatabaseRoleAttribute `protobuf:"bytes,5,opt,name=attribute,proto3" json:"attribute,omitempty"`
}

func (x *DatabaseRole) Reset() {
	*x = DatabaseRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_database_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseRole) ProtoMessage() {}

func (x *DatabaseRole) ProtoReflect() protoreflect.Message {
	mi := &file_v1_database_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseRole.ProtoReflect.Descriptor instead.
func (*DatabaseRole) Descriptor() ([]byte, []int) {
	return file_v1_database_role_proto_rawDescGZIP(), []int{1}
}

func (x *DatabaseRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseRole) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *DatabaseRole) GetConnectionLimit() int32 {
	if x != nil {
		return x.ConnectionLimit
	}
	return 0
}

func (x *DatabaseRole) GetValidUntil() string {
	if x != nil && x.ValidUntil != nil {
		return *x.ValidUntil
	}
	return ""
}

func (x *DatabaseRole) GetAttribute() *DatabaseRoleAttribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

// DatabaseRoleUpsert is the API message for upserting a database role.
type DatabaseRoleUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role unique name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A password is only significant if the client authentication method requires the user to supply a password when connecting to the database.
	Password *string `protobuf:"bytes,2,opt,name=password,proto3,oneof" json:"password,omitempty"`
	// Connection limit can specify how many concurrent connections a role can make. -1 (the default) means no limit.
	ConnectionLimit *int32 `protobuf:"varint,3,opt,name=connection_limit,json=connectionLimit,proto3,oneof" json:"connection_limit,omitempty"`
	// The VALID UNTIL clause sets a date and time after which the role's password is no longer valid. If this clause is omitted the password will be valid for all time.
	ValidUntil *string `protobuf:"bytes,4,opt,name=valid_until,json=validUntil,proto3,oneof" json:"valid_until,omitempty"`
	// The role attribute.
	Attribute *DatabaseRoleAttribute `protobuf:"bytes,5,opt,name=attribute,proto3,oneof" json:"attribute,omitempty"`
}

func (x *DatabaseRoleUpsert) Reset() {
	*x = DatabaseRoleUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_database_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseRoleUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseRoleUpsert) ProtoMessage() {}

func (x *DatabaseRoleUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_v1_database_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseRoleUpsert.ProtoReflect.Descriptor instead.
func (*DatabaseRoleUpsert) Descriptor() ([]byte, []int) {
	return file_v1_database_role_proto_rawDescGZIP(), []int{2}
}

func (x *DatabaseRoleUpsert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseRoleUpsert) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *DatabaseRoleUpsert) GetConnectionLimit() int32 {
	if x != nil && x.ConnectionLimit != nil {
		return *x.ConnectionLimit
	}
	return 0
}

func (x *DatabaseRoleUpsert) GetValidUntil() string {
	if x != nil && x.ValidUntil != nil {
		return *x.ValidUntil
	}
	return ""
}

func (x *DatabaseRoleUpsert) GetAttribute() *DatabaseRoleAttribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

var File_v1_database_role_proto protoreflect.FileDescriptor

var file_v1_database_role_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x22, 0xf1, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x49, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x61, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79,
	0x70, 0x61, 0x73, 0x73, 0x5f, 0x72, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x52, 0x6c, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x40, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x79, 0x74, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74,
	0x69, 0x6c, 0x22, 0xa6, 0x02, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x79, 0x74, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x48, 0x03, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_database_role_proto_rawDescOnce sync.Once
	file_v1_database_role_proto_rawDescData = file_v1_database_role_proto_rawDesc
)

func file_v1_database_role_proto_rawDescGZIP() []byte {
	file_v1_database_role_proto_rawDescOnce.Do(func() {
		file_v1_database_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_database_role_proto_rawDescData)
	})
	return file_v1_database_role_proto_rawDescData
}

var file_v1_database_role_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_database_role_proto_goTypes = []interface{}{
	(*DatabaseRoleAttribute)(nil), // 0: bytebase.v1.DatabaseRoleAttribute
	(*DatabaseRole)(nil),          // 1: bytebase.v1.DatabaseRole
	(*DatabaseRoleUpsert)(nil),    // 2: bytebase.v1.DatabaseRoleUpsert
}
var file_v1_database_role_proto_depIdxs = []int32{
	0, // 0: bytebase.v1.DatabaseRole.attribute:type_name -> bytebase.v1.DatabaseRoleAttribute
	0, // 1: bytebase.v1.DatabaseRoleUpsert.attribute:type_name -> bytebase.v1.DatabaseRoleAttribute
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_database_role_proto_init() }
func file_v1_database_role_proto_init() {
	if File_v1_database_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_database_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseRoleAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_database_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_database_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseRoleUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_database_role_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_v1_database_role_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_database_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_database_role_proto_goTypes,
		DependencyIndexes: file_v1_database_role_proto_depIdxs,
		MessageInfos:      file_v1_database_role_proto_msgTypes,
	}.Build()
	File_v1_database_role_proto = out.File
	file_v1_database_role_proto_rawDesc = nil
	file_v1_database_role_proto_goTypes = nil
	file_v1_database_role_proto_depIdxs = nil
}
