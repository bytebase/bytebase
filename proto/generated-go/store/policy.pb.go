// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: store/policy.proto

package store

import (
	expr "google.golang.org/genproto/googleapis/type/expr"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SQLReviewRuleLevel int32

const (
	SQLReviewRuleLevel_LEVEL_UNSPECIFIED SQLReviewRuleLevel = 0
	SQLReviewRuleLevel_ERROR             SQLReviewRuleLevel = 1
	SQLReviewRuleLevel_WARNING           SQLReviewRuleLevel = 2
	SQLReviewRuleLevel_DISABLED          SQLReviewRuleLevel = 3
)

// Enum value maps for SQLReviewRuleLevel.
var (
	SQLReviewRuleLevel_name = map[int32]string{
		0: "LEVEL_UNSPECIFIED",
		1: "ERROR",
		2: "WARNING",
		3: "DISABLED",
	}
	SQLReviewRuleLevel_value = map[string]int32{
		"LEVEL_UNSPECIFIED": 0,
		"ERROR":             1,
		"WARNING":           2,
		"DISABLED":          3,
	}
)

func (x SQLReviewRuleLevel) Enum() *SQLReviewRuleLevel {
	p := new(SQLReviewRuleLevel)
	*p = x
	return p
}

func (x SQLReviewRuleLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SQLReviewRuleLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_store_policy_proto_enumTypes[0].Descriptor()
}

func (SQLReviewRuleLevel) Type() protoreflect.EnumType {
	return &file_store_policy_proto_enumTypes[0]
}

func (x SQLReviewRuleLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SQLReviewRuleLevel.Descriptor instead.
func (SQLReviewRuleLevel) EnumDescriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{0}
}

type MaskingExceptionPolicy_MaskingException_Action int32

const (
	MaskingExceptionPolicy_MaskingException_ACTION_UNSPECIFIED MaskingExceptionPolicy_MaskingException_Action = 0
	MaskingExceptionPolicy_MaskingException_QUERY              MaskingExceptionPolicy_MaskingException_Action = 1
	MaskingExceptionPolicy_MaskingException_EXPORT             MaskingExceptionPolicy_MaskingException_Action = 2
)

// Enum value maps for MaskingExceptionPolicy_MaskingException_Action.
var (
	MaskingExceptionPolicy_MaskingException_Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "QUERY",
		2: "EXPORT",
	}
	MaskingExceptionPolicy_MaskingException_Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"QUERY":              1,
		"EXPORT":             2,
	}
)

func (x MaskingExceptionPolicy_MaskingException_Action) Enum() *MaskingExceptionPolicy_MaskingException_Action {
	p := new(MaskingExceptionPolicy_MaskingException_Action)
	*p = x
	return p
}

func (x MaskingExceptionPolicy_MaskingException_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaskingExceptionPolicy_MaskingException_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_store_policy_proto_enumTypes[1].Descriptor()
}

func (MaskingExceptionPolicy_MaskingException_Action) Type() protoreflect.EnumType {
	return &file_store_policy_proto_enumTypes[1]
}

func (x MaskingExceptionPolicy_MaskingException_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaskingExceptionPolicy_MaskingException_Action.Descriptor instead.
func (MaskingExceptionPolicy_MaskingException_Action) EnumDescriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{1, 0, 0}
}

type EnvironmentTierPolicy_EnvironmentTier int32

const (
	EnvironmentTierPolicy_ENVIRONMENT_TIER_UNSPECIFIED EnvironmentTierPolicy_EnvironmentTier = 0
	EnvironmentTierPolicy_PROTECTED                    EnvironmentTierPolicy_EnvironmentTier = 1
	EnvironmentTierPolicy_UNPROTECTED                  EnvironmentTierPolicy_EnvironmentTier = 2
)

// Enum value maps for EnvironmentTierPolicy_EnvironmentTier.
var (
	EnvironmentTierPolicy_EnvironmentTier_name = map[int32]string{
		0: "ENVIRONMENT_TIER_UNSPECIFIED",
		1: "PROTECTED",
		2: "UNPROTECTED",
	}
	EnvironmentTierPolicy_EnvironmentTier_value = map[string]int32{
		"ENVIRONMENT_TIER_UNSPECIFIED": 0,
		"PROTECTED":                    1,
		"UNPROTECTED":                  2,
	}
)

func (x EnvironmentTierPolicy_EnvironmentTier) Enum() *EnvironmentTierPolicy_EnvironmentTier {
	p := new(EnvironmentTierPolicy_EnvironmentTier)
	*p = x
	return p
}

func (x EnvironmentTierPolicy_EnvironmentTier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnvironmentTierPolicy_EnvironmentTier) Descriptor() protoreflect.EnumDescriptor {
	return file_store_policy_proto_enumTypes[2].Descriptor()
}

func (EnvironmentTierPolicy_EnvironmentTier) Type() protoreflect.EnumType {
	return &file_store_policy_proto_enumTypes[2]
}

func (x EnvironmentTierPolicy_EnvironmentTier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnvironmentTierPolicy_EnvironmentTier.Descriptor instead.
func (EnvironmentTierPolicy_EnvironmentTier) EnumDescriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{7, 0}
}

type DataSourceQueryPolicy_Restriction int32

const (
	DataSourceQueryPolicy_RESTRICTION_UNSPECIFIED DataSourceQueryPolicy_Restriction = 0
	// Allow to query admin data sources when there is no read-only data source.
	DataSourceQueryPolicy_FALLBACK DataSourceQueryPolicy_Restriction = 1
	// Disallow to query admin data sources.
	DataSourceQueryPolicy_DISALLOW DataSourceQueryPolicy_Restriction = 2
)

// Enum value maps for DataSourceQueryPolicy_Restriction.
var (
	DataSourceQueryPolicy_Restriction_name = map[int32]string{
		0: "RESTRICTION_UNSPECIFIED",
		1: "FALLBACK",
		2: "DISALLOW",
	}
	DataSourceQueryPolicy_Restriction_value = map[string]int32{
		"RESTRICTION_UNSPECIFIED": 0,
		"FALLBACK":                1,
		"DISALLOW":                2,
	}
)

func (x DataSourceQueryPolicy_Restriction) Enum() *DataSourceQueryPolicy_Restriction {
	p := new(DataSourceQueryPolicy_Restriction)
	*p = x
	return p
}

func (x DataSourceQueryPolicy_Restriction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataSourceQueryPolicy_Restriction) Descriptor() protoreflect.EnumDescriptor {
	return file_store_policy_proto_enumTypes[3].Descriptor()
}

func (DataSourceQueryPolicy_Restriction) Type() protoreflect.EnumType {
	return &file_store_policy_proto_enumTypes[3]
}

func (x DataSourceQueryPolicy_Restriction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataSourceQueryPolicy_Restriction.Descriptor instead.
func (DataSourceQueryPolicy_Restriction) EnumDescriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{12, 0}
}

type RolloutPolicy struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Automatic bool                   `protobuf:"varint,1,opt,name=automatic,proto3" json:"automatic,omitempty"`
	Roles     []string               `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	// roles/LAST_APPROVER
	// roles/CREATOR
	IssueRoles    []string `protobuf:"bytes,3,rep,name=issue_roles,json=issueRoles,proto3" json:"issue_roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolloutPolicy) Reset() {
	*x = RolloutPolicy{}
	mi := &file_store_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolloutPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolloutPolicy) ProtoMessage() {}

func (x *RolloutPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolloutPolicy.ProtoReflect.Descriptor instead.
func (*RolloutPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{0}
}

func (x *RolloutPolicy) GetAutomatic() bool {
	if x != nil {
		return x.Automatic
	}
	return false
}

func (x *RolloutPolicy) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *RolloutPolicy) GetIssueRoles() []string {
	if x != nil {
		return x.IssueRoles
	}
	return nil
}

// MaskingExceptionPolicy is the allowlist of users who can access sensitive data.
type MaskingExceptionPolicy struct {
	state             protoimpl.MessageState                     `protogen:"open.v1"`
	MaskingExceptions []*MaskingExceptionPolicy_MaskingException `protobuf:"bytes,1,rep,name=masking_exceptions,json=maskingExceptions,proto3" json:"masking_exceptions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MaskingExceptionPolicy) Reset() {
	*x = MaskingExceptionPolicy{}
	mi := &file_store_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskingExceptionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskingExceptionPolicy) ProtoMessage() {}

func (x *MaskingExceptionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskingExceptionPolicy.ProtoReflect.Descriptor instead.
func (*MaskingExceptionPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{1}
}

func (x *MaskingExceptionPolicy) GetMaskingExceptions() []*MaskingExceptionPolicy_MaskingException {
	if x != nil {
		return x.MaskingExceptions
	}
	return nil
}

type MaskingRulePolicy struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Rules         []*MaskingRulePolicy_MaskingRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaskingRulePolicy) Reset() {
	*x = MaskingRulePolicy{}
	mi := &file_store_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskingRulePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskingRulePolicy) ProtoMessage() {}

func (x *MaskingRulePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskingRulePolicy.ProtoReflect.Descriptor instead.
func (*MaskingRulePolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{2}
}

func (x *MaskingRulePolicy) GetRules() []*MaskingRulePolicy_MaskingRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type SQLReviewRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Level         SQLReviewRuleLevel     `protobuf:"varint,2,opt,name=level,proto3,enum=bytebase.store.SQLReviewRuleLevel" json:"level,omitempty"`
	Payload       string                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Engine        Engine                 `protobuf:"varint,4,opt,name=engine,proto3,enum=bytebase.store.Engine" json:"engine,omitempty"`
	Comment       string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SQLReviewRule) Reset() {
	*x = SQLReviewRule{}
	mi := &file_store_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SQLReviewRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLReviewRule) ProtoMessage() {}

func (x *SQLReviewRule) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLReviewRule.ProtoReflect.Descriptor instead.
func (*SQLReviewRule) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{3}
}

func (x *SQLReviewRule) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SQLReviewRule) GetLevel() SQLReviewRuleLevel {
	if x != nil {
		return x.Level
	}
	return SQLReviewRuleLevel_LEVEL_UNSPECIFIED
}

func (x *SQLReviewRule) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *SQLReviewRule) GetEngine() Engine {
	if x != nil {
		return x.Engine
	}
	return Engine_ENGINE_UNSPECIFIED
}

func (x *SQLReviewRule) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type TagPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// tags is the key - value map for resources.
	// for example, the environment resource can have the sql review config tag, like "bb.tag.review_config": "reviewConfigs/{review config resource id}"
	Tags          map[string]string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagPolicy) Reset() {
	*x = TagPolicy{}
	mi := &file_store_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagPolicy) ProtoMessage() {}

func (x *TagPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagPolicy.ProtoReflect.Descriptor instead.
func (*TagPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{4}
}

func (x *TagPolicy) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Binding struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The role that is assigned to the members.
	// Format: roles/{role}
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// Specifies the principals requesting access for a Bytebase resource.
	// For users, the member should be: users/{userUID}
	// For groups, the member should be: groups/{email}
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	// The condition that is associated with this binding.
	// If the condition evaluates to true, then this binding applies to the current request.
	// If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.
	Condition     *expr.Expr `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Binding) Reset() {
	*x = Binding{}
	mi := &file_store_policy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Binding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Binding) ProtoMessage() {}

func (x *Binding) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Binding.ProtoReflect.Descriptor instead.
func (*Binding) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{5}
}

func (x *Binding) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Binding) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Binding) GetCondition() *expr.Expr {
	if x != nil {
		return x.Condition
	}
	return nil
}

type IamPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection of binding.
	// A binding binds one or more members or groups to a single role.
	Bindings      []*Binding `protobuf:"bytes,1,rep,name=bindings,proto3" json:"bindings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IamPolicy) Reset() {
	*x = IamPolicy{}
	mi := &file_store_policy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IamPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamPolicy) ProtoMessage() {}

func (x *IamPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamPolicy.ProtoReflect.Descriptor instead.
func (*IamPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{6}
}

func (x *IamPolicy) GetBindings() []*Binding {
	if x != nil {
		return x.Bindings
	}
	return nil
}

// EnvironmentTierPolicy is the tier of an environment.
type EnvironmentTierPolicy struct {
	state           protoimpl.MessageState                `protogen:"open.v1"`
	EnvironmentTier EnvironmentTierPolicy_EnvironmentTier `protobuf:"varint,1,opt,name=environment_tier,json=environmentTier,proto3,enum=bytebase.store.EnvironmentTierPolicy_EnvironmentTier" json:"environment_tier,omitempty"`
	Color           string                                `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EnvironmentTierPolicy) Reset() {
	*x = EnvironmentTierPolicy{}
	mi := &file_store_policy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentTierPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentTierPolicy) ProtoMessage() {}

func (x *EnvironmentTierPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentTierPolicy.ProtoReflect.Descriptor instead.
func (*EnvironmentTierPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{7}
}

func (x *EnvironmentTierPolicy) GetEnvironmentTier() EnvironmentTierPolicy_EnvironmentTier {
	if x != nil {
		return x.EnvironmentTier
	}
	return EnvironmentTierPolicy_ENVIRONMENT_TIER_UNSPECIFIED
}

func (x *EnvironmentTierPolicy) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// DisableCopyDataPolicy is the policy configuration for disabling copying data.
type DisableCopyDataPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Active        bool                   `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableCopyDataPolicy) Reset() {
	*x = DisableCopyDataPolicy{}
	mi := &file_store_policy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableCopyDataPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableCopyDataPolicy) ProtoMessage() {}

func (x *DisableCopyDataPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableCopyDataPolicy.ProtoReflect.Descriptor instead.
func (*DisableCopyDataPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{8}
}

func (x *DisableCopyDataPolicy) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

// ExportDataPolicy is the policy configuration for export data.
type ExportDataPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disable       bool                   `protobuf:"varint,1,opt,name=disable,proto3" json:"disable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportDataPolicy) Reset() {
	*x = ExportDataPolicy{}
	mi := &file_store_policy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportDataPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDataPolicy) ProtoMessage() {}

func (x *ExportDataPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportDataPolicy.ProtoReflect.Descriptor instead.
func (*ExportDataPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{9}
}

func (x *ExportDataPolicy) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

// QueryDataPolicy is the policy configuration for querying data.
type QueryDataPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The query timeout duration.
	Timeout       *durationpb.Duration `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDataPolicy) Reset() {
	*x = QueryDataPolicy{}
	mi := &file_store_policy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDataPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataPolicy) ProtoMessage() {}

func (x *QueryDataPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataPolicy.ProtoReflect.Descriptor instead.
func (*QueryDataPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{10}
}

func (x *QueryDataPolicy) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// RestrictIssueCreationForSQLReviewPolicy is the policy configuration for restricting issue creation for SQL review.
type RestrictIssueCreationForSQLReviewPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disallow      bool                   `protobuf:"varint,1,opt,name=disallow,proto3" json:"disallow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestrictIssueCreationForSQLReviewPolicy) Reset() {
	*x = RestrictIssueCreationForSQLReviewPolicy{}
	mi := &file_store_policy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestrictIssueCreationForSQLReviewPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestrictIssueCreationForSQLReviewPolicy) ProtoMessage() {}

func (x *RestrictIssueCreationForSQLReviewPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestrictIssueCreationForSQLReviewPolicy.ProtoReflect.Descriptor instead.
func (*RestrictIssueCreationForSQLReviewPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{11}
}

func (x *RestrictIssueCreationForSQLReviewPolicy) GetDisallow() bool {
	if x != nil {
		return x.Disallow
	}
	return false
}

// DataSourceQueryPolicy is the policy configuration for running statements in the SQL editor.
type DataSourceQueryPolicy struct {
	state                      protoimpl.MessageState            `protogen:"open.v1"`
	AdminDataSourceRestriction DataSourceQueryPolicy_Restriction `protobuf:"varint,1,opt,name=admin_data_source_restriction,json=adminDataSourceRestriction,proto3,enum=bytebase.store.DataSourceQueryPolicy_Restriction" json:"admin_data_source_restriction,omitempty"`
	// Disallow running DDL statements in the SQL editor.
	DisallowDdl bool `protobuf:"varint,2,opt,name=disallow_ddl,json=disallowDdl,proto3" json:"disallow_ddl,omitempty"`
	// Disallow running DML statements in the SQL editor.
	DisallowDml   bool `protobuf:"varint,3,opt,name=disallow_dml,json=disallowDml,proto3" json:"disallow_dml,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataSourceQueryPolicy) Reset() {
	*x = DataSourceQueryPolicy{}
	mi := &file_store_policy_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSourceQueryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceQueryPolicy) ProtoMessage() {}

func (x *DataSourceQueryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceQueryPolicy.ProtoReflect.Descriptor instead.
func (*DataSourceQueryPolicy) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{12}
}

func (x *DataSourceQueryPolicy) GetAdminDataSourceRestriction() DataSourceQueryPolicy_Restriction {
	if x != nil {
		return x.AdminDataSourceRestriction
	}
	return DataSourceQueryPolicy_RESTRICTION_UNSPECIFIED
}

func (x *DataSourceQueryPolicy) GetDisallowDdl() bool {
	if x != nil {
		return x.DisallowDdl
	}
	return false
}

func (x *DataSourceQueryPolicy) GetDisallowDml() bool {
	if x != nil {
		return x.DisallowDml
	}
	return false
}

type MaskingExceptionPolicy_MaskingException struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// action is the action that the user can access sensitive data.
	Action MaskingExceptionPolicy_MaskingException_Action `protobuf:"varint,1,opt,name=action,proto3,enum=bytebase.store.MaskingExceptionPolicy_MaskingException_Action" json:"action,omitempty"`
	// Member is the principal who bind to this exception policy instance.
	//
	// Format: users/{userUID} or groups/{group email}
	Member string `protobuf:"bytes,4,opt,name=member,proto3" json:"member,omitempty"`
	// The condition that is associated with this exception policy instance.
	Condition     *expr.Expr `protobuf:"bytes,5,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaskingExceptionPolicy_MaskingException) Reset() {
	*x = MaskingExceptionPolicy_MaskingException{}
	mi := &file_store_policy_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskingExceptionPolicy_MaskingException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskingExceptionPolicy_MaskingException) ProtoMessage() {}

func (x *MaskingExceptionPolicy_MaskingException) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskingExceptionPolicy_MaskingException.ProtoReflect.Descriptor instead.
func (*MaskingExceptionPolicy_MaskingException) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MaskingExceptionPolicy_MaskingException) GetAction() MaskingExceptionPolicy_MaskingException_Action {
	if x != nil {
		return x.Action
	}
	return MaskingExceptionPolicy_MaskingException_ACTION_UNSPECIFIED
}

func (x *MaskingExceptionPolicy_MaskingException) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *MaskingExceptionPolicy_MaskingException) GetCondition() *expr.Expr {
	if x != nil {
		return x.Condition
	}
	return nil
}

type MaskingRulePolicy_MaskingRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique identifier for a node in UUID format.
	Id            string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Condition     *expr.Expr `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	SemanticType  string     `protobuf:"bytes,3,opt,name=semantic_type,json=semanticType,proto3" json:"semantic_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaskingRulePolicy_MaskingRule) Reset() {
	*x = MaskingRulePolicy_MaskingRule{}
	mi := &file_store_policy_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskingRulePolicy_MaskingRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskingRulePolicy_MaskingRule) ProtoMessage() {}

func (x *MaskingRulePolicy_MaskingRule) ProtoReflect() protoreflect.Message {
	mi := &file_store_policy_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskingRulePolicy_MaskingRule.ProtoReflect.Descriptor instead.
func (*MaskingRulePolicy_MaskingRule) Descriptor() ([]byte, []int) {
	return file_store_policy_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MaskingRulePolicy_MaskingRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MaskingRulePolicy_MaskingRule) GetCondition() *expr.Expr {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *MaskingRulePolicy_MaskingRule) GetSemanticType() string {
	if x != nil {
		return x.SemanticType
	}
	return ""
}

var File_store_policy_proto protoreflect.FileDescriptor

const file_store_policy_proto_rawDesc = "" +
	"\n" +
	"\x12store/policy.proto\x12\x0ebytebase.store\x1a\x1egoogle/protobuf/duration.proto\x1a\x16google/type/expr.proto\x1a\x12store/common.proto\"d\n" +
	"\rRolloutPolicy\x12\x1c\n" +
	"\tautomatic\x18\x01 \x01(\bR\tautomatic\x12\x14\n" +
	"\x05roles\x18\x02 \x03(\tR\x05roles\x12\x1f\n" +
	"\vissue_roles\x18\x03 \x03(\tR\n" +
	"issueRoles\"\xef\x02\n" +
	"\x16MaskingExceptionPolicy\x12f\n" +
	"\x12masking_exceptions\x18\x01 \x03(\v27.bytebase.store.MaskingExceptionPolicy.MaskingExceptionR\x11maskingExceptions\x1a\xec\x01\n" +
	"\x10MaskingException\x12V\n" +
	"\x06action\x18\x01 \x01(\x0e2>.bytebase.store.MaskingExceptionPolicy.MaskingException.ActionR\x06action\x12\x16\n" +
	"\x06member\x18\x04 \x01(\tR\x06member\x12/\n" +
	"\tcondition\x18\x05 \x01(\v2\x11.google.type.ExprR\tcondition\"7\n" +
	"\x06Action\x12\x16\n" +
	"\x12ACTION_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05QUERY\x10\x01\x12\n" +
	"\n" +
	"\x06EXPORT\x10\x02\"\xcd\x01\n" +
	"\x11MaskingRulePolicy\x12C\n" +
	"\x05rules\x18\x01 \x03(\v2-.bytebase.store.MaskingRulePolicy.MaskingRuleR\x05rules\x1as\n" +
	"\vMaskingRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12/\n" +
	"\tcondition\x18\x02 \x01(\v2\x11.google.type.ExprR\tcondition\x12#\n" +
	"\rsemantic_type\x18\x03 \x01(\tR\fsemanticType\"\xc1\x01\n" +
	"\rSQLReviewRule\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x128\n" +
	"\x05level\x18\x02 \x01(\x0e2\".bytebase.store.SQLReviewRuleLevelR\x05level\x12\x18\n" +
	"\apayload\x18\x03 \x01(\tR\apayload\x12.\n" +
	"\x06engine\x18\x04 \x01(\x0e2\x16.bytebase.store.EngineR\x06engine\x12\x18\n" +
	"\acomment\x18\x05 \x01(\tR\acomment\"}\n" +
	"\tTagPolicy\x127\n" +
	"\x04tags\x18\x01 \x03(\v2#.bytebase.store.TagPolicy.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"\aBinding\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x18\n" +
	"\amembers\x18\x02 \x03(\tR\amembers\x12/\n" +
	"\tcondition\x18\x03 \x01(\v2\x11.google.type.ExprR\tcondition\"@\n" +
	"\tIamPolicy\x123\n" +
	"\bbindings\x18\x01 \x03(\v2\x17.bytebase.store.BindingR\bbindings\"\xe4\x01\n" +
	"\x15EnvironmentTierPolicy\x12`\n" +
	"\x10environment_tier\x18\x01 \x01(\x0e25.bytebase.store.EnvironmentTierPolicy.EnvironmentTierR\x0fenvironmentTier\x12\x14\n" +
	"\x05color\x18\x02 \x01(\tR\x05color\"S\n" +
	"\x0fEnvironmentTier\x12 \n" +
	"\x1cENVIRONMENT_TIER_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tPROTECTED\x10\x01\x12\x0f\n" +
	"\vUNPROTECTED\x10\x02\"/\n" +
	"\x15DisableCopyDataPolicy\x12\x16\n" +
	"\x06active\x18\x01 \x01(\bR\x06active\",\n" +
	"\x10ExportDataPolicy\x12\x18\n" +
	"\adisable\x18\x01 \x01(\bR\adisable\"F\n" +
	"\x0fQueryDataPolicy\x123\n" +
	"\atimeout\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"E\n" +
	"'RestrictIssueCreationForSQLReviewPolicy\x12\x1a\n" +
	"\bdisallow\x18\x01 \x01(\bR\bdisallow\"\x9b\x02\n" +
	"\x15DataSourceQueryPolicy\x12t\n" +
	"\x1dadmin_data_source_restriction\x18\x01 \x01(\x0e21.bytebase.store.DataSourceQueryPolicy.RestrictionR\x1aadminDataSourceRestriction\x12!\n" +
	"\fdisallow_ddl\x18\x02 \x01(\bR\vdisallowDdl\x12!\n" +
	"\fdisallow_dml\x18\x03 \x01(\bR\vdisallowDml\"F\n" +
	"\vRestriction\x12\x1b\n" +
	"\x17RESTRICTION_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bFALLBACK\x10\x01\x12\f\n" +
	"\bDISALLOW\x10\x02*Q\n" +
	"\x12SQLReviewRuleLevel\x12\x15\n" +
	"\x11LEVEL_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05ERROR\x10\x01\x12\v\n" +
	"\aWARNING\x10\x02\x12\f\n" +
	"\bDISABLED\x10\x03B\x14Z\x12generated-go/storeb\x06proto3"

var (
	file_store_policy_proto_rawDescOnce sync.Once
	file_store_policy_proto_rawDescData []byte
)

func file_store_policy_proto_rawDescGZIP() []byte {
	file_store_policy_proto_rawDescOnce.Do(func() {
		file_store_policy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_store_policy_proto_rawDesc), len(file_store_policy_proto_rawDesc)))
	})
	return file_store_policy_proto_rawDescData
}

var file_store_policy_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_store_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_store_policy_proto_goTypes = []any{
	(SQLReviewRuleLevel)(0),                             // 0: bytebase.store.SQLReviewRuleLevel
	(MaskingExceptionPolicy_MaskingException_Action)(0), // 1: bytebase.store.MaskingExceptionPolicy.MaskingException.Action
	(EnvironmentTierPolicy_EnvironmentTier)(0),          // 2: bytebase.store.EnvironmentTierPolicy.EnvironmentTier
	(DataSourceQueryPolicy_Restriction)(0),              // 3: bytebase.store.DataSourceQueryPolicy.Restriction
	(*RolloutPolicy)(nil),                               // 4: bytebase.store.RolloutPolicy
	(*MaskingExceptionPolicy)(nil),                      // 5: bytebase.store.MaskingExceptionPolicy
	(*MaskingRulePolicy)(nil),                           // 6: bytebase.store.MaskingRulePolicy
	(*SQLReviewRule)(nil),                               // 7: bytebase.store.SQLReviewRule
	(*TagPolicy)(nil),                                   // 8: bytebase.store.TagPolicy
	(*Binding)(nil),                                     // 9: bytebase.store.Binding
	(*IamPolicy)(nil),                                   // 10: bytebase.store.IamPolicy
	(*EnvironmentTierPolicy)(nil),                       // 11: bytebase.store.EnvironmentTierPolicy
	(*DisableCopyDataPolicy)(nil),                       // 12: bytebase.store.DisableCopyDataPolicy
	(*ExportDataPolicy)(nil),                            // 13: bytebase.store.ExportDataPolicy
	(*QueryDataPolicy)(nil),                             // 14: bytebase.store.QueryDataPolicy
	(*RestrictIssueCreationForSQLReviewPolicy)(nil),     // 15: bytebase.store.RestrictIssueCreationForSQLReviewPolicy
	(*DataSourceQueryPolicy)(nil),                       // 16: bytebase.store.DataSourceQueryPolicy
	(*MaskingExceptionPolicy_MaskingException)(nil),     // 17: bytebase.store.MaskingExceptionPolicy.MaskingException
	(*MaskingRulePolicy_MaskingRule)(nil),               // 18: bytebase.store.MaskingRulePolicy.MaskingRule
	nil,                                                 // 19: bytebase.store.TagPolicy.TagsEntry
	(Engine)(0),                                         // 20: bytebase.store.Engine
	(*expr.Expr)(nil),                                   // 21: google.type.Expr
	(*durationpb.Duration)(nil),                         // 22: google.protobuf.Duration
}
var file_store_policy_proto_depIdxs = []int32{
	17, // 0: bytebase.store.MaskingExceptionPolicy.masking_exceptions:type_name -> bytebase.store.MaskingExceptionPolicy.MaskingException
	18, // 1: bytebase.store.MaskingRulePolicy.rules:type_name -> bytebase.store.MaskingRulePolicy.MaskingRule
	0,  // 2: bytebase.store.SQLReviewRule.level:type_name -> bytebase.store.SQLReviewRuleLevel
	20, // 3: bytebase.store.SQLReviewRule.engine:type_name -> bytebase.store.Engine
	19, // 4: bytebase.store.TagPolicy.tags:type_name -> bytebase.store.TagPolicy.TagsEntry
	21, // 5: bytebase.store.Binding.condition:type_name -> google.type.Expr
	9,  // 6: bytebase.store.IamPolicy.bindings:type_name -> bytebase.store.Binding
	2,  // 7: bytebase.store.EnvironmentTierPolicy.environment_tier:type_name -> bytebase.store.EnvironmentTierPolicy.EnvironmentTier
	22, // 8: bytebase.store.QueryDataPolicy.timeout:type_name -> google.protobuf.Duration
	3,  // 9: bytebase.store.DataSourceQueryPolicy.admin_data_source_restriction:type_name -> bytebase.store.DataSourceQueryPolicy.Restriction
	1,  // 10: bytebase.store.MaskingExceptionPolicy.MaskingException.action:type_name -> bytebase.store.MaskingExceptionPolicy.MaskingException.Action
	21, // 11: bytebase.store.MaskingExceptionPolicy.MaskingException.condition:type_name -> google.type.Expr
	21, // 12: bytebase.store.MaskingRulePolicy.MaskingRule.condition:type_name -> google.type.Expr
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_store_policy_proto_init() }
func file_store_policy_proto_init() {
	if File_store_policy_proto != nil {
		return
	}
	file_store_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_store_policy_proto_rawDesc), len(file_store_policy_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_store_policy_proto_goTypes,
		DependencyIndexes: file_store_policy_proto_depIdxs,
		EnumInfos:         file_store_policy_proto_enumTypes,
		MessageInfos:      file_store_policy_proto_msgTypes,
	}.Build()
	File_store_policy_proto = out.File
	file_store_policy_proto_goTypes = nil
	file_store_policy_proto_depIdxs = nil
}
