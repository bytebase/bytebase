syntax = "proto3";

package bytebase.store;

option go_package = "generated-go/store";

enum IdentityProviderType {
  IDENTITY_PROVIDER_TYPE_UNSPECIFIED = 0;
  OAUTH2 = 1;
  OIDC = 2;
}

message IdentityProviderConfig {
  oneof config {
    OAuth2IdentityProviderConfig oauth2_config = 1;
    OIDCIdentityProviderConfig oidc_config = 2;
  }
}

// OAuth2IdentityProviderConfig is the structure for OAuth2 identity provider config.
message OAuth2IdentityProviderConfig {
  string auth_url = 1;

  string token_url = 2;

  string user_info_url = 3;

  string client_id = 4;

  string client_secret = 5;

  repeated string scopes = 6;

  FieldMapping field_mapping = 7;

  bool skip_tls_verify = 8;

  OAuth2AuthStyle auth_style = 9;
}

// OIDCIdentityProviderConfig is the structure for OIDC identity provider config.
message OIDCIdentityProviderConfig {
  string issuer = 1;

  string client_id = 2;

  string client_secret = 3;

  FieldMapping field_mapping = 4;

  bool skip_tls_verify = 5;

  OAuth2AuthStyle auth_style = 6;
}

// FieldMapping saves the field names from user info API of identity provider.
// As we save all raw json string of user info response data into `principal.idp_user_info`,
// we can extract the relevant data based with `FieldMapping`.
//
// e.g. For GitHub authenticated user API, it will return `login`, `name` and `email` in response.
// Then the identifier of FieldMapping will be `login`, display_name will be `name`,
// and email will be `email`.
// reference: https://docs.github.com/en/rest/users/users?apiVersion=2022-11-28#get-the-authenticated-user
message FieldMapping {
  // Identifier is the field name of the unique identifier in 3rd-party idp user info. Required.
  string identifier = 1;

  // DisplayName is the field name of display name in 3rd-party idp user info. Required.
  string display_name = 2;

  // Email is the field name of primary email in 3rd-party idp user info. Required.
  string email = 3;
}

message IdentityProviderUserInfo {
  // Identifier is the value of the unique identifier in 3rd-party idp user info.
  string identifier = 1;

  // DisplayName is the value of display name in 3rd-party idp user info.
  string display_name = 2;

  // Email is the value of primary email in 3rd-party idp user info.
  string email = 3;
}

enum OAuth2AuthStyle {
  OAUTH2_AUTH_STYLE_UNSPECIFIED = 0;
  // IN_PARAMS sends the "client_id" and "client_secret" in the POST body
  // as application/x-www-form-urlencoded parameters.
  IN_PARAMS = 1;
  // IN_HEADER sends the client_id and client_password using HTTP Basic Authorization.
  // This is an optional style described in the OAuth2 RFC 6749 section 2.3.1.
  IN_HEADER = 2;
}
