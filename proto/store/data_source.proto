syntax = "proto3";

package bytebase.store;

option go_package = "generated-go/store";

message DataSourceExternalSecret {
  enum SecretType {
    SAECRET_TYPE_UNSPECIFIED = 0;
    VAULT_KV_V2 = 1;
  }
  SecretType secret_type = 1;
  string url = 2;

  enum AuthType {
    AUTH_TYPE_UNSPECIFIED = 0;
    TOKEN = 1;
    APP_ROLE = 2;
  }
  AuthType auth_type = 3;

  // app role auth method: https://developer.hashicorp.com/vault/docs/auth/approle
  message AppRoleAuthOption {
    string role_id = 1;
    string secret_id = 2;
  }

  oneof auth_option {
    AppRoleAuthOption app_role = 4;
    string token = 5;
  }

  // engine name is the name for secret engine.
  string engine_name = 6;
  // the secret name in the engine to store the password.
  string secret_name = 7;
  // the key name for the password.
  string key_name = 8;
}

message DataSourceOptions {
  // srv is a boolean flag that indicates whether the host is a DNS SRV record.
  bool srv = 1;

  // authentication_database is the database name to authenticate against, which stores the user credentials.
  string authentication_database = 2;

  // sid and service_name are used for Oracle.
  string sid = 3;
  string service_name = 4;
  // SSH related
  // The hostname of the SSH server agent.
  string ssh_host = 5;
  // The port of the SSH server agent. It's 22 typically.
  string ssh_port = 6;
  // The user to login the server.
  string ssh_user = 7;
  // The password to login the server. If it's empty string, no password is required.
  string ssh_obfuscated_password = 8;
  // The private key to login the server. If it's empty string, we will use the system default private key from os.Getenv("SSH_AUTH_SOCK").
  string ssh_obfuscated_private_key = 9;

  // PKCS#8 private key in PEM format. If it's empty string, no private key is required.
  // Used for authentication when connecting to the data source.
  string authentication_private_key_obfuscated = 10;

  DataSourceExternalSecret external_secret = 11;
}
