syntax = "proto3";

package bytebase.store;

option go_package = "generated-go/store";

// IssuePayloadApproval is a part of the payload of an issue.
// IssuePayloadApproval records the approval template used and the approval history.
message IssuePayloadApproval {
  message Approver {
    enum Status {
      STATUS_UNSPECIFIED = 0;
      PENDING = 1;
      APPROVED = 2;
    }
    // The new status.
    Status status = 1;

    // The principal id of the approver.
    int32 principal_id = 2;
  }

  repeated ApprovalTemplate approval_templates = 1;
  repeated Approver approvers = 2;

  // If the value is `false`, it means that the backend is still finding matching approval templates.
  // If `true`, other fields are available.
  bool approval_finding_done = 3;

  string approval_finding_error = 4;
}

message ApprovalTemplate {
  ApprovalFlow flow = 1;
  string title = 2;
  string description = 3;
  int32 creator_id = 4;
}

message ApprovalFlow {
  repeated ApprovalStep steps = 1;
}

message ApprovalStep {
  // Type of the ApprovalStep
  // ALL means every node must be approved to proceed.
  // ANY means approving any node will proceed.
  enum Type {
    TYPE_UNSPECIFIED = 0;
    ALL = 1;
    ANY = 2;
  }
  Type type = 1;

  repeated ApprovalNode nodes = 2;
}

message ApprovalNode {
  // Type of the ApprovalNode.
  // type determines who should approve this node.
  // ANY_IN_GROUP means the ApprovalNode can be approved by an user from our predefined user group.
  // See GroupValue below for the predefined user groups.
  enum Type {
    TYPE_UNSPECIFIED = 0;
    ANY_IN_GROUP = 1;
  }
  Type type = 1;

  // GroupValue is used if ApprovalNode Type is ANY_IN_GROUP
  // The predefined user groups are:
  // - WORKSPACE_OWNER
  // - WORKSPACE_DBA
  // - PROJECT_OWNER
  // - PROJECT_MEMBER
  enum GroupValue {
    GROUP_VALUE_UNSPECIFILED = 0;
    WORKSPACE_OWNER = 1;
    WORKSPACE_DBA = 2;
    PROJECT_OWNER = 3;
    PROJECT_MEMBER = 4;
  }
  oneof payload {
    GroupValue group_value = 2;
  }
}
