syntax = "proto3";

package bytebase.store;

import "store/common.proto";
import "store/instance_change_history.proto";

option go_package = "generated-go/store";

message PreUpdateBackupDetail {
  // The database for keeping the backup data.
  // Format: instances/{instance}/databases/{database}
  string database = 1;
}

message PlanCheckRunConfig {
  int32 sheet_uid = 1;
  ChangeDatabaseType change_database_type = 2;
  int32 instance_uid = 3;
  string database_name = 4;
  optional int64 database_group_uid = 5 [deprecated = true];

  map<string, string> ghost_flags = 6;

  // If set, a backup of the modified data will be created automatically before any changes are applied.
  optional PreUpdateBackupDetail pre_update_backup_detail = 7;

  enum ChangeDatabaseType {
    CHANGE_DATABASE_TYPE_UNSPECIFIED = 0;
    DDL = 1;
    DML = 2;
    SDL = 3;
    DDL_GHOST = 4;
  }
}

message PlanCheckRunResult {
  repeated Result results = 1;
  string error = 2;

  message Result {
    enum Status {
      STATUS_UNSPECIFIED = 0;
      ERROR = 1;
      WARNING = 2;
      SUCCESS = 3;
    }
    Status status = 1;
    string title = 2;
    string content = 3;
    int32 code = 4;

    oneof report {
      SqlSummaryReport sql_summary_report = 5;
      SqlReviewReport sql_review_report = 6;
    }
    message SqlSummaryReport {
      int32 code = 1;
      // statement_types are the types of statements that are found in the sql.
      repeated string statement_types = 2;
      int32 affected_rows = 3;
      ChangedResources changed_resources = 4;
    }
    message SqlReviewReport {
      int32 line = 1;
      int32 column = 2;
      string detail = 3;
      // Code from sql review.
      int32 code = 4;
      // 1-based Position of the SQL statement.
      // To supersede `line` and `column` above.
      Position start_position = 8;
      Position end_position = 9;
    }
  }
}
