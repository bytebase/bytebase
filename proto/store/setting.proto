syntax = "proto3";

package bytebase.store;

import "google/api/expr/v1alpha1/syntax.proto";
import "google/type/expr.proto";
import "store/approval.proto";
import "store/common.proto";
import "store/database.proto";

option go_package = "generated-go/store";

message WorkspaceProfileSetting {
  // The URL user visits Bytebase.
  //
  // The external URL is used for:
  // 1. Constructing the correct callback URL when configuring the VCS provider. The callback URL points to the frontend.
  // 2. Creating the correct webhook endpoint when configuring the project GitOps workflow. The webhook endpoint points to the backend.
  string external_url = 1;

  // Disallow self-service signup, users can only be invited by the owner.
  bool disallow_signup = 2;

  // Require 2FA for all users.
  bool require_2fa = 3;

  // outbound_ip_list is the outbound IP for Bytebase instance in SaaS mode.
  repeated string outbound_ip_list = 4;

  // The webhook URL for the GitOps workflow.
  string gitops_webhook_url = 5;
}

message AgentPluginSetting {
  // The URL for the agent API.
  string url = 1;

  // The token for the agent.
  string token = 2;
}

message WorkspaceApprovalSetting {
  message Rule {
    google.api.expr.v1alpha1.ParsedExpr expression = 1;
    ApprovalTemplate template = 2;
    google.type.Expr condition = 3;
  }
  repeated Rule rules = 1;
}

message ExternalApprovalSetting {
  message Node {
    // A unique identifier for a node in UUID format.
    // We will also include the id in the message sending to the external relay service to identify the node.
    string id = 1;
    // The title of the node.
    string title = 2;
    // The external endpoint for the relay service, e.g. "http://hello:1234".
    string endpoint = 3;
  }
  repeated Node nodes = 1;
}

message SMTPMailDeliverySetting {
  // The SMTP server address.
  string server = 1;

  // The SMTP server port.
  int32 port = 2;

  // We support three types of SMTP encryption: NONE, STARTTLS, and SSL/TLS.
  enum Encryption {
    ENCRYPTION_UNSPECIFIED = 0;
    ENCRYPTION_NONE = 1;
    ENCRYPTION_STARTTLS = 2;
    ENCRYPTION_SSL_TLS = 3;
  }

  // The SMTP server encryption.
  Encryption encryption = 3;

  // The CA, KEY, and CERT for the SMTP server.
  string ca = 4;
  string key = 5;
  string cert = 6;

  // We support four types of SMTP authentication: NONE, PLAIN, LOGIN, and CRAM-MD5.
  enum Authentication {
    AUTHENTICATION_UNSPECIFIED = 0;
    AUTHENTICATION_NONE = 1;
    AUTHENTICATION_PLAIN = 2;
    AUTHENTICATION_LOGIN = 3;
    AUTHENTICATION_CRAM_MD5 = 4;
  }
  Authentication authentication = 7;
  string username = 8;
  string password = 9;

  // The sender email address.
  string from = 10;
}

message SchemaTemplateSetting {
  message FieldTemplate {
    string id = 1;

    Engine engine = 2;

    string category = 3;

    ColumnMetadata column = 4;
  }

  repeated FieldTemplate field_templates = 1;

  // TODO: support table_templates
}
