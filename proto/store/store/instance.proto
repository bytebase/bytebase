syntax = "proto3";

package bytebase.store;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "store/common.proto";

option go_package = "generated-go/store";

// Instance is the proto for instances.
message Instance {
  string title = 1;
  Engine engine = 2;
  bool activation = 3;
  string version = 4;
  string external_link = 5;

  repeated DataSource data_sources = 6;

  // How often the instance is synced.
  google.protobuf.Duration sync_interval = 7;

  // The maximum number of connections.
  // The default is 10 if the value is unset or zero.
  int32 maximum_connections = 8;

  // Enable sync for following databases.
  // Default empty, means sync all schemas & databases.
  repeated string sync_databases = 9;

  // The lower_case_table_names config for MySQL instances.
  // It is used to determine whether the table names and database names are case sensitive.
  int32 mysql_lower_case_table_names = 10;

  google.protobuf.Timestamp last_sync_time = 11;

  repeated InstanceRole roles = 12;
}

// InstanceRole is the API message for instance role.
message InstanceRole {
  // The role name.
  string name = 1;

  // The connection count limit for this role.
  optional int32 connection_limit = 2;

  // The expiration for the role's password.
  optional string valid_until = 3;

  // The role attribute.
  // For PostgreSQL, it containt super_user, no_inherit, create_role, create_db, can_login, replication and bypass_rls. Docs: https://www.postgresql.org/docs/current/role-attributes.html
  // For MySQL, it's the global privileges as GRANT statements, which means it only contains "GRANT ... ON *.* TO ...". Docs: https://dev.mysql.com/doc/refman/8.0/en/grant.html
  optional string attribute = 4;
}

message DataSource {
  string id = 1;
  DataSourceType type = 2;
  string username = 3;
  string password = 37;
  string obfuscated_password = 4;
  // Use SSL to connect to the data source. By default, we use system default SSL configuration.
  bool use_ssl = 30;
  string ssl_ca = 38;
  string obfuscated_ssl_ca = 5;
  string ssl_cert = 39;
  string obfuscated_ssl_cert = 6;
  string ssl_key = 40;
  string obfuscated_ssl_key = 7;
  string host = 8;
  string port = 9;
  string database = 10;

  // srv, authentication_database and replica_set are used for MongoDB.
  // srv is a boolean flag that indicates whether the host is a DNS SRV record.
  bool srv = 11;
  // authentication_database is the database name to authenticate against, which stores the user credentials.
  string authentication_database = 12;
  // replica_set is used for MongoDB replica set.
  string replica_set = 25;

  // sid and service_name are used for Oracle.
  string sid = 13;
  string service_name = 14;
  // SSH related
  // The hostname of the SSH server agent.
  string ssh_host = 15;
  // The port of the SSH server agent. It's 22 typically.
  string ssh_port = 16;
  // The user to login the server.
  string ssh_user = 17;
  // The password to login the server. If it's empty string, no password is required.
  string ssh_password = 41;
  string obfuscated_ssh_password = 18;
  // The private key to login the server. If it's empty string, we will use the system default private key from os.Getenv("SSH_AUTH_SOCK").
  string ssh_private_key = 42;
  string obfuscated_ssh_private_key = 19;
  // PKCS#8 private key in PEM format. If it's empty string, no private key is required.
  // Used for authentication when connecting to the data source.
  string authentication_private_key = 43;
  string obfuscated_authentication_private_key = 20;

  DataSourceExternalSecret external_secret = 21;

  enum AuthenticationType {
    AUTHENTICATION_UNSPECIFIED = 0;
    PASSWORD = 1;
    GOOGLE_CLOUD_SQL_IAM = 2;
    AWS_RDS_IAM = 3;
    AZURE_IAM = 4;
  }
  AuthenticationType authentication_type = 22;

  message ClientSecretCredential {
    string tenant_id = 1;
    string client_id = 2;
    string client_secret = 3;
    string obfuscated_client_secret = 4;
  }
  oneof iam_extension {
    ClientSecretCredential client_secret_credential = 23;
  }

  SASLConfig sasl_config = 24;

  message Address {
    string host = 1;
    string port = 2;
  }
  // additional_addresses is used for MongoDB replica set.
  repeated Address additional_addresses = 26;

  // direct_connection is used for MongoDB to dispatch all the operations to the node specified in the connection string.
  bool direct_connection = 27;

  // region is the location of where the DB is, works for AWS RDS. For example, us-east-1.
  string region = 28;

  // warehouse_id is used by Databricks.
  string warehouse_id = 29;

  // master_name is the master name used by connecting redis-master via redis sentinel.
  string master_name = 31;

  // master_username and master_obfuscated_password are master credentials used by redis sentinel mode.
  string master_username = 32;
  string master_password = 44;
  string obfuscated_master_password = 33;

  enum RedisType {
    REDIS_TYPE_UNSPECIFIED = 0;
    STANDALONE = 1;
    SENTINEL = 2;
    CLUSTER = 3;
  }
  RedisType redis_type = 34;
  // Cluster is the cluster name for the data source. Used by CockroachDB.
  string cluster = 35;

  // Extra connection parameters for the database connection.
  // For PostgreSQL HA, this can be used to set target_session_attrs=read-write
  map<string, string> extra_connection_parameters = 36;
}

message SASLConfig {
  oneof mechanism {
    KerberosConfig krb_config = 1;
  }
}

message KerberosConfig {
  string primary = 1;
  string instance = 2;
  string realm = 3;
  bytes keytab = 4;
  string kdc_host = 5;
  string kdc_port = 6;
  string kdc_transport_protocol = 7;
}

enum DataSourceType {
  DATA_SOURCE_UNSPECIFIED = 0;
  ADMIN = 1;
  READ_ONLY = 2;
}

message DataSourceExternalSecret {
  enum SecretType {
    SAECRET_TYPE_UNSPECIFIED = 0;
    // ref: https://developer.hashicorp.com/vault/api-docs/secret/kv/kv-v2
    VAULT_KV_V2 = 1;
    // ref: https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
    AWS_SECRETS_MANAGER = 2;
    // ref: https://cloud.google.com/secret-manager/docs
    GCP_SECRET_MANAGER = 3;
  }
  SecretType secret_type = 1;
  string url = 2;

  enum AuthType {
    AUTH_TYPE_UNSPECIFIED = 0;
    // ref: https://developer.hashicorp.com/vault/docs/auth/token
    TOKEN = 1;
    // ref: https://developer.hashicorp.com/vault/docs/auth/approle
    VAULT_APP_ROLE = 2;
  }
  AuthType auth_type = 3;

  message AppRoleAuthOption {
    string role_id = 1;
    // the secret id for the role without ttl.
    string secret_id = 2;

    enum SecretType {
      SECRET_TYPE_UNSPECIFIED = 0;
      PLAIN = 1;
      ENVIRONMENT = 2;
    }

    SecretType type = 3;

    // The path where the approle auth method is mounted.
    string mount_path = 4;
  }

  oneof auth_option {
    AppRoleAuthOption app_role = 4;
    string token = 5;
  }

  // engine name is the name for secret engine.
  string engine_name = 6;
  // the secret name in the engine to store the password.
  string secret_name = 7;
  // the key name for the password.
  string password_key_name = 8;
}
