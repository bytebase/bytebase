syntax = "proto3";

package bytebase.store;

option go_package = "generated-go/store";

// Label represents a categorization tag that can be applied to issues.
message Label {
  // The display text of the label.
  string value = 1;
  // The color for the label in hex format (e.g., "#FF0000").
  string color = 2;
  // Optional group name for organizing related labels.
  string group = 3;
}

// Project contains settings and configuration for a Bytebase project.
message Project {
  reserved 1;

  // Available labels that can be applied to issues in this project.
  repeated Label issue_labels = 2;
  // Force issue labels to be used when creating an issue.
  bool force_issue_labels = 3;
  // Allow modifying statement after issue is created.
  bool allow_modify_statement = 4;
  // Enable auto resolve issue.
  bool auto_resolve_issue = 5;
  // Enforce issue title created by user instead of generated by Bytebase.
  bool enforce_issue_title = 6;

  // Whether to automatically enable backup.
  bool auto_enable_backup = 7;

  // Whether to skip backup errors and continue the data migration.
  bool skip_backup_errors = 8;

  // Whether to enable the database tenant mode for PostgreSQL.
  // If enabled, the issue will be created with the prepend "set role <db_owner>" statement.
  bool postgres_database_tenant_mode = 9;

  // Whether to allow the issue creator to self-approve the issue.
  bool allow_self_approval = 10;

  // Configuration for automatic retry on task execution failures.
  ExecutionRetryPolicy execution_retry_policy = 11;

  // ExecutionRetryPolicy defines retry behavior for failed task executions.
  message ExecutionRetryPolicy {
    // The maximum number of retry attempts for lock timeout errors.
    int32 maximum_retries = 1;
  }

  // The maximum number of databases to sample during CI data validation.
  // If not specified, sampling is disabled, resulting in a full validation.
  int32 ci_sampling_size = 12;

  // The maximum number of parallel tasks to run during the rollout.
  int32 parallel_tasks_per_rollout = 13;

  // Labels are key-value pairs that can be attached to the project.
  // For example, { "environment": "production", "team": "backend" }
  map<string, string> labels = 14;

  // Whether to enforce SQL review checks to pass before issue creation.
  // If enabled, issues cannot be created when SQL review finds errors.
  bool enforce_sql_review = 15;
}
