// Code generated by protoc-gen-equal-go. DO NOT EDIT.
// source: store/plan.proto

package store

func (x *PlanConfig_Spec) Equal(y *PlanConfig_Spec) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Id != y.Id {
		return false
	}
	if !x.GetCreateDatabaseConfig().Equal(y.GetCreateDatabaseConfig()) {
		return false
	}
	if !x.GetChangeDatabaseConfig().Equal(y.GetChangeDatabaseConfig()) {
		return false
	}
	if !x.GetExportDataConfig().Equal(y.GetExportDataConfig()) {
		return false
	}
	return true
}

func (x *PlanConfig_CreateDatabaseConfig) Equal(y *PlanConfig_CreateDatabaseConfig) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Target != y.Target {
		return false
	}
	if x.Database != y.Database {
		return false
	}
	if x.Table != y.Table {
		return false
	}
	if x.CharacterSet != y.CharacterSet {
		return false
	}
	if x.Collation != y.Collation {
		return false
	}
	if x.Cluster != y.Cluster {
		return false
	}
	if x.Owner != y.Owner {
		return false
	}
	if x.Environment != y.Environment {
		return false
	}
	return true
}

func (x *PlanConfig_ChangeDatabaseConfig) Equal(y *PlanConfig_ChangeDatabaseConfig) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.Targets) != len(y.Targets) {
		return false
	}
	for i := 0; i < len(x.Targets); i++ {
		if x.Targets[i] != y.Targets[i] {
			return false
		}
	}
	if x.Sheet != y.Sheet {
		return false
	}
	if x.Release != y.Release {
		return false
	}
	if x.Type != y.Type {
		return false
	}
	if len(x.GhostFlags) != len(y.GhostFlags) {
		return false
	}
	for k := range x.GhostFlags {
		_, ok := y.GhostFlags[k]
		if !ok {
			return false
		}
		if x.GhostFlags[k] != y.GhostFlags[k] {
			return false
		}
	}
	if x.EnablePriorBackup != y.EnablePriorBackup {
		return false
	}
	return true
}

func (x *PlanConfig_ExportDataConfig) Equal(y *PlanConfig_ExportDataConfig) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.Targets) != len(y.Targets) {
		return false
	}
	for i := 0; i < len(x.Targets); i++ {
		if x.Targets[i] != y.Targets[i] {
			return false
		}
	}
	if x.Sheet != y.Sheet {
		return false
	}
	if x.Format != y.Format {
		return false
	}
	if p, q := x.Password, y.Password; (p == nil && q != nil) || (p != nil && (q == nil || *p != *q)) {
		return false
	}
	return true
}

func (x *PlanConfig_Deployment_DatabaseGroupMapping) Equal(y *PlanConfig_Deployment_DatabaseGroupMapping) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.DatabaseGroup != y.DatabaseGroup {
		return false
	}
	if len(x.Databases) != len(y.Databases) {
		return false
	}
	for i := 0; i < len(x.Databases); i++ {
		if x.Databases[i] != y.Databases[i] {
			return false
		}
	}
	return true
}

func (x *PlanConfig_Deployment) Equal(y *PlanConfig_Deployment) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.Environments) != len(y.Environments) {
		return false
	}
	for i := 0; i < len(x.Environments); i++ {
		if x.Environments[i] != y.Environments[i] {
			return false
		}
	}
	if len(x.DatabaseGroupMappings) != len(y.DatabaseGroupMappings) {
		return false
	}
	for i := 0; i < len(x.DatabaseGroupMappings); i++ {
		if !x.DatabaseGroupMappings[i].Equal(y.DatabaseGroupMappings[i]) {
			return false
		}
	}
	return true
}

func (x *PlanConfig) Equal(y *PlanConfig) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.Specs) != len(y.Specs) {
		return false
	}
	for i := 0; i < len(x.Specs); i++ {
		if !x.Specs[i].Equal(y.Specs[i]) {
			return false
		}
	}
	if !x.Deployment.Equal(y.Deployment) {
		return false
	}
	return true
}
