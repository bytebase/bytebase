// Code generated by protoc-gen-equal-go. DO NOT EDIT.
// source: store/project.proto

package store

func (x *Label) Equal(y *Label) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Value != y.Value {
		return false
	}
	if x.Color != y.Color {
		return false
	}
	if x.Group != y.Group {
		return false
	}
	return true
}

func (x *Project_ExecutionRetryPolicy) Equal(y *Project_ExecutionRetryPolicy) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.MaximumRetries != y.MaximumRetries {
		return false
	}
	return true
}

func (x *Project) Equal(y *Project) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.IssueLabels) != len(y.IssueLabels) {
		return false
	}
	for i := 0; i < len(x.IssueLabels); i++ {
		if !x.IssueLabels[i].Equal(y.IssueLabels[i]) {
			return false
		}
	}
	if x.ForceIssueLabels != y.ForceIssueLabels {
		return false
	}
	if x.AllowModifyStatement != y.AllowModifyStatement {
		return false
	}
	if x.AutoResolveIssue != y.AutoResolveIssue {
		return false
	}
	if x.EnforceIssueTitle != y.EnforceIssueTitle {
		return false
	}
	if x.AutoEnableBackup != y.AutoEnableBackup {
		return false
	}
	if x.SkipBackupErrors != y.SkipBackupErrors {
		return false
	}
	if x.PostgresDatabaseTenantMode != y.PostgresDatabaseTenantMode {
		return false
	}
	if x.AllowSelfApproval != y.AllowSelfApproval {
		return false
	}
	if !x.ExecutionRetryPolicy.Equal(y.ExecutionRetryPolicy) {
		return false
	}
	if x.CiSamplingSize != y.CiSamplingSize {
		return false
	}
	if x.ParallelTasksPerRollout != y.ParallelTasksPerRollout {
		return false
	}
	if len(x.Labels) != len(y.Labels) {
		return false
	}
	for k := range x.Labels {
		_, ok := y.Labels[k]
		if !ok {
			return false
		}
		if x.Labels[k] != y.Labels[k] {
			return false
		}
	}
	if x.EnforceSqlReview != y.EnforceSqlReview {
		return false
	}
	return true
}
