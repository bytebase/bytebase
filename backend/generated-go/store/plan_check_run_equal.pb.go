// Code generated by protoc-gen-equal-go. DO NOT EDIT.
// source: store/plan_check_run.proto

package store

func (x *PlanCheckRunConfig) Equal(y *PlanCheckRunConfig) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.SheetUid != y.SheetUid {
		return false
	}
	if x.ChangeDatabaseType != y.ChangeDatabaseType {
		return false
	}
	if x.InstanceId != y.InstanceId {
		return false
	}
	if x.DatabaseName != y.DatabaseName {
		return false
	}
	if p, q := x.DatabaseGroupUid, y.DatabaseGroupUid; (p == nil && q != nil) || (p != nil && (q == nil || *p != *q)) {
		return false
	}
	if len(x.GhostFlags) != len(y.GhostFlags) {
		return false
	}
	for k := range x.GhostFlags {
		_, ok := y.GhostFlags[k]
		if !ok {
			return false
		}
		if x.GhostFlags[k] != y.GhostFlags[k] {
			return false
		}
	}
	if x.EnablePriorBackup != y.EnablePriorBackup {
		return false
	}
	return true
}

func (x *PlanCheckRunResult_Result_SqlSummaryReport) Equal(y *PlanCheckRunResult_Result_SqlSummaryReport) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.StatementTypes) != len(y.StatementTypes) {
		return false
	}
	for i := 0; i < len(x.StatementTypes); i++ {
		if x.StatementTypes[i] != y.StatementTypes[i] {
			return false
		}
	}
	if x.AffectedRows != y.AffectedRows {
		return false
	}
	if !x.ChangedResources.Equal(y.ChangedResources) {
		return false
	}
	return true
}

func (x *PlanCheckRunResult_Result_SqlReviewReport) Equal(y *PlanCheckRunResult_Result_SqlReviewReport) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if !x.StartPosition.Equal(y.StartPosition) {
		return false
	}
	if !x.EndPosition.Equal(y.EndPosition) {
		return false
	}
	return true
}

func (x *PlanCheckRunResult_Result) Equal(y *PlanCheckRunResult_Result) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Status != y.Status {
		return false
	}
	if x.Title != y.Title {
		return false
	}
	if x.Content != y.Content {
		return false
	}
	if x.Code != y.Code {
		return false
	}
	if !x.GetSqlSummaryReport().Equal(y.GetSqlSummaryReport()) {
		return false
	}
	if !x.GetSqlReviewReport().Equal(y.GetSqlReviewReport()) {
		return false
	}
	return true
}

func (x *PlanCheckRunResult) Equal(y *PlanCheckRunResult) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.Results) != len(y.Results) {
		return false
	}
	for i := 0; i < len(x.Results); i++ {
		if !x.Results[i].Equal(y.Results[i]) {
			return false
		}
	}
	if x.Error != y.Error {
		return false
	}
	return true
}
