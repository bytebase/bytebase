// Code generated by protoc-gen-equal-go. DO NOT EDIT.
// source: store/approval.proto

package store

func (x *IssuePayloadApproval_Approver) Equal(y *IssuePayloadApproval_Approver) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Status != y.Status {
		return false
	}
	if x.PrincipalId != y.PrincipalId {
		return false
	}
	return true
}

func (x *IssuePayloadApproval) Equal(y *IssuePayloadApproval) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.ApprovalTemplates) != len(y.ApprovalTemplates) {
		return false
	}
	for i := 0; i < len(x.ApprovalTemplates); i++ {
		if !x.ApprovalTemplates[i].Equal(y.ApprovalTemplates[i]) {
			return false
		}
	}
	if len(x.Approvers) != len(y.Approvers) {
		return false
	}
	for i := 0; i < len(x.Approvers); i++ {
		if !x.Approvers[i].Equal(y.Approvers[i]) {
			return false
		}
	}
	if x.ApprovalFindingDone != y.ApprovalFindingDone {
		return false
	}
	if x.ApprovalFindingError != y.ApprovalFindingError {
		return false
	}
	if x.RiskLevel != y.RiskLevel {
		return false
	}
	return true
}

func (x *ApprovalTemplate) Equal(y *ApprovalTemplate) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if !x.Flow.Equal(y.Flow) {
		return false
	}
	if x.Title != y.Title {
		return false
	}
	if x.Description != y.Description {
		return false
	}
	return true
}

func (x *ApprovalFlow) Equal(y *ApprovalFlow) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.Steps) != len(y.Steps) {
		return false
	}
	for i := 0; i < len(x.Steps); i++ {
		if !x.Steps[i].Equal(y.Steps[i]) {
			return false
		}
	}
	return true
}

func (x *ApprovalStep) Equal(y *ApprovalStep) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Type != y.Type {
		return false
	}
	if len(x.Nodes) != len(y.Nodes) {
		return false
	}
	for i := 0; i < len(x.Nodes); i++ {
		if !x.Nodes[i].Equal(y.Nodes[i]) {
			return false
		}
	}
	return true
}

func (x *ApprovalNode) Equal(y *ApprovalNode) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Type != y.Type {
		return false
	}
	if x.Role != y.Role {
		return false
	}
	return true
}
