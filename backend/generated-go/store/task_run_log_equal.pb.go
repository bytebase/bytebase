// Code generated by protoc-gen-equal-go. DO NOT EDIT.
// source: store/task_run_log.proto

package store

func (x *TaskRunLog_SchemaDumpStart) Equal(y *TaskRunLog_SchemaDumpStart) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	return true
}

func (x *TaskRunLog_SchemaDumpEnd) Equal(y *TaskRunLog_SchemaDumpEnd) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Error != y.Error {
		return false
	}
	return true
}

func (x *TaskRunLog_CommandExecute) Equal(y *TaskRunLog_CommandExecute) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.CommandIndexes) != len(y.CommandIndexes) {
		return false
	}
	for i := 0; i < len(x.CommandIndexes); i++ {
		if x.CommandIndexes[i] != y.CommandIndexes[i] {
			return false
		}
	}
	if x.Statement != y.Statement {
		return false
	}
	return true
}

func (x *TaskRunLog_CommandResponse) Equal(y *TaskRunLog_CommandResponse) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if len(x.CommandIndexes) != len(y.CommandIndexes) {
		return false
	}
	for i := 0; i < len(x.CommandIndexes); i++ {
		if x.CommandIndexes[i] != y.CommandIndexes[i] {
			return false
		}
	}
	if x.Error != y.Error {
		return false
	}
	if x.AffectedRows != y.AffectedRows {
		return false
	}
	if len(x.AllAffectedRows) != len(y.AllAffectedRows) {
		return false
	}
	for i := 0; i < len(x.AllAffectedRows); i++ {
		if x.AllAffectedRows[i] != y.AllAffectedRows[i] {
			return false
		}
	}
	return true
}

func (x *TaskRunLog_DatabaseSyncStart) Equal(y *TaskRunLog_DatabaseSyncStart) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	return true
}

func (x *TaskRunLog_DatabaseSyncEnd) Equal(y *TaskRunLog_DatabaseSyncEnd) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Error != y.Error {
		return false
	}
	return true
}

func (x *TaskRunLog_TaskRunStatusUpdate) Equal(y *TaskRunLog_TaskRunStatusUpdate) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Status != y.Status {
		return false
	}
	return true
}

func (x *TaskRunLog_TransactionControl) Equal(y *TaskRunLog_TransactionControl) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Type != y.Type {
		return false
	}
	if x.Error != y.Error {
		return false
	}
	return true
}

func (x *TaskRunLog_PriorBackupStart) Equal(y *TaskRunLog_PriorBackupStart) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	return true
}

func (x *TaskRunLog_PriorBackupEnd) Equal(y *TaskRunLog_PriorBackupEnd) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if !x.PriorBackupDetail.Equal(y.PriorBackupDetail) {
		return false
	}
	if x.Error != y.Error {
		return false
	}
	return true
}

func (x *TaskRunLog_RetryInfo) Equal(y *TaskRunLog_RetryInfo) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Error != y.Error {
		return false
	}
	if x.RetryCount != y.RetryCount {
		return false
	}
	if x.MaximumRetries != y.MaximumRetries {
		return false
	}
	return true
}

func (x *TaskRunLog_ComputeDiffStart) Equal(y *TaskRunLog_ComputeDiffStart) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	return true
}

func (x *TaskRunLog_ComputeDiffEnd) Equal(y *TaskRunLog_ComputeDiffEnd) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Error != y.Error {
		return false
	}
	return true
}

func (x *TaskRunLog) Equal(y *TaskRunLog) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Type != y.Type {
		return false
	}
	if x.DeployId != y.DeployId {
		return false
	}
	if !x.SchemaDumpStart.Equal(y.SchemaDumpStart) {
		return false
	}
	if !x.SchemaDumpEnd.Equal(y.SchemaDumpEnd) {
		return false
	}
	if !x.CommandExecute.Equal(y.CommandExecute) {
		return false
	}
	if !x.CommandResponse.Equal(y.CommandResponse) {
		return false
	}
	if !x.DatabaseSyncStart.Equal(y.DatabaseSyncStart) {
		return false
	}
	if !x.DatabaseSyncEnd.Equal(y.DatabaseSyncEnd) {
		return false
	}
	if !x.TaskRunStatusUpdate.Equal(y.TaskRunStatusUpdate) {
		return false
	}
	if !x.TransactionControl.Equal(y.TransactionControl) {
		return false
	}
	if !x.PriorBackupStart.Equal(y.PriorBackupStart) {
		return false
	}
	if !x.PriorBackupEnd.Equal(y.PriorBackupEnd) {
		return false
	}
	if !x.RetryInfo.Equal(y.RetryInfo) {
		return false
	}
	if !x.ComputeDiffStart.Equal(y.ComputeDiffStart) {
		return false
	}
	if !x.ComputeDiffEnd.Equal(y.ComputeDiffEnd) {
		return false
	}
	return true
}
