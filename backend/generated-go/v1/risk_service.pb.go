// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: v1/risk_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	expr "google.golang.org/genproto/googleapis/type/expr"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The source of the database change for risk assessment.
type Risk_Source int32

const (
	Risk_SOURCE_UNSPECIFIED Risk_Source = 0
	// Data Definition Language statements (CREATE, ALTER, DROP, etc.).
	Risk_DDL Risk_Source = 1
	// Data Manipulation Language statements (INSERT, UPDATE, DELETE, etc.).
	Risk_DML Risk_Source = 2
	// Database creation operations.
	Risk_CREATE_DATABASE Risk_Source = 3
	// Data export operations.
	Risk_DATA_EXPORT Risk_Source = 6
	// Role access requests.
	Risk_REQUEST_ROLE Risk_Source = 7
)

// Enum value maps for Risk_Source.
var (
	Risk_Source_name = map[int32]string{
		0: "SOURCE_UNSPECIFIED",
		1: "DDL",
		2: "DML",
		3: "CREATE_DATABASE",
		6: "DATA_EXPORT",
		7: "REQUEST_ROLE",
	}
	Risk_Source_value = map[string]int32{
		"SOURCE_UNSPECIFIED": 0,
		"DDL":                1,
		"DML":                2,
		"CREATE_DATABASE":    3,
		"DATA_EXPORT":        6,
		"REQUEST_ROLE":       7,
	}
)

func (x Risk_Source) Enum() *Risk_Source {
	p := new(Risk_Source)
	*p = x
	return p
}

func (x Risk_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Risk_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_risk_service_proto_enumTypes[0].Descriptor()
}

func (Risk_Source) Type() protoreflect.EnumType {
	return &file_v1_risk_service_proto_enumTypes[0]
}

func (x Risk_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Risk_Source.Descriptor instead.
func (Risk_Source) EnumDescriptor() ([]byte, []int) {
	return file_v1_risk_service_proto_rawDescGZIP(), []int{6, 0}
}

type ListRisksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRisksRequest) Reset() {
	*x = ListRisksRequest{}
	mi := &file_v1_risk_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRisksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRisksRequest) ProtoMessage() {}

func (x *ListRisksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_risk_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRisksRequest.ProtoReflect.Descriptor instead.
func (*ListRisksRequest) Descriptor() ([]byte, []int) {
	return file_v1_risk_service_proto_rawDescGZIP(), []int{0}
}

type ListRisksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Risks         []*Risk                `protobuf:"bytes,1,rep,name=risks,proto3" json:"risks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRisksResponse) Reset() {
	*x = ListRisksResponse{}
	mi := &file_v1_risk_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRisksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRisksResponse) ProtoMessage() {}

func (x *ListRisksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_risk_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRisksResponse.ProtoReflect.Descriptor instead.
func (*ListRisksResponse) Descriptor() ([]byte, []int) {
	return file_v1_risk_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListRisksResponse) GetRisks() []*Risk {
	if x != nil {
		return x.Risks
	}
	return nil
}

type CreateRiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The risk to create.
	Risk          *Risk `protobuf:"bytes,1,opt,name=risk,proto3" json:"risk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRiskRequest) Reset() {
	*x = CreateRiskRequest{}
	mi := &file_v1_risk_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRiskRequest) ProtoMessage() {}

func (x *CreateRiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_risk_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRiskRequest.ProtoReflect.Descriptor instead.
func (*CreateRiskRequest) Descriptor() ([]byte, []int) {
	return file_v1_risk_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRiskRequest) GetRisk() *Risk {
	if x != nil {
		return x.Risk
	}
	return nil
}

type GetRiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the risk to retrieve.
	// Format: risks/{risk}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRiskRequest) Reset() {
	*x = GetRiskRequest{}
	mi := &file_v1_risk_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRiskRequest) ProtoMessage() {}

func (x *GetRiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_risk_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRiskRequest.ProtoReflect.Descriptor instead.
func (*GetRiskRequest) Descriptor() ([]byte, []int) {
	return file_v1_risk_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetRiskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateRiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The risk to update.
	//
	// The risk's `name` field is used to identify the risk to update.
	// Format: risks/{risk}
	Risk *Risk `protobuf:"bytes,1,opt,name=risk,proto3" json:"risk,omitempty"`
	// The list of fields to update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// If set to true, and the risk is not found, a new risk will be created.
	// In this situation, `update_mask` is ignored.
	AllowMissing  bool `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRiskRequest) Reset() {
	*x = UpdateRiskRequest{}
	mi := &file_v1_risk_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRiskRequest) ProtoMessage() {}

func (x *UpdateRiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_risk_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRiskRequest.ProtoReflect.Descriptor instead.
func (*UpdateRiskRequest) Descriptor() ([]byte, []int) {
	return file_v1_risk_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRiskRequest) GetRisk() *Risk {
	if x != nil {
		return x.Risk
	}
	return nil
}

func (x *UpdateRiskRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateRiskRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type DeleteRiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the risk to delete.
	// Format: risks/{risk}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRiskRequest) Reset() {
	*x = DeleteRiskRequest{}
	mi := &file_v1_risk_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRiskRequest) ProtoMessage() {}

func (x *DeleteRiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_risk_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRiskRequest.ProtoReflect.Descriptor instead.
func (*DeleteRiskRequest) Descriptor() ([]byte, []int) {
	return file_v1_risk_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRiskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Risk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Format: risks/{risk}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The source of the operation being assessed for risk.
	Source Risk_Source `protobuf:"varint,3,opt,name=source,proto3,enum=bytebase.v1.Risk_Source" json:"source,omitempty"`
	// The title of the risk rule.
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// The risk level assigned when this rule matches.
	Level RiskLevel `protobuf:"varint,5,opt,name=level,proto3,enum=bytebase.v1.RiskLevel" json:"level,omitempty"`
	// Whether the risk rule is active.
	Active bool `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	// The condition that is associated with the risk.
	// The syntax and semantics of CEL are documented at https://github.com/google/cel-spec
	//
	// All supported variables:
	// statement.affected_rows: affected row count in the DDL/DML, support "==", "!=", "<", "<=", ">", ">=" operations.
	// statement.table_rows: table row count number, support "==", "!=", "<", "<=", ">", ">=" operations.
	// resource.environment_id: the environment resource id, support "==", "!=", "in [xx]", "!(in [xx])" operations.
	// resource.project_id: the project resource id, support "==", "!=", "in [xx]", "!(in [xx])", "contains()", "matches()", "startsWith()", "endsWith()" operations.
	// resource.db_engine: the database engine type, support "==", "!=", "in [xx]", "!(in [xx])" operations. Check the Engine enum for the values.
	// statement.sql_type: the SQL type, support "==", "!=", "in [xx]", "!(in [xx])" operations.
	//
	//	when the risk source is DDL, check https://github.com/bytebase/bytebase/blob/main/frontend/src/plugins/cel/types/values.ts#L70 for supported values.
	//	when the risk source is DML, check https://github.com/bytebase/bytebase/blob/main/frontend/src/plugins/cel/types/values.ts#L71 for supported values.
	//
	// resource.database_name: the database name, support "==", "!=", "in [xx]", "!(in [xx])", "contains()", "matches()", "startsWith()", "endsWith()" operations.
	// resource.schema_name: the schema name, support "==", "!=", "in [xx]", "!(in [xx])", "contains()", "matches()", "startsWith()", "endsWith()" operations.
	// resource.table_name: the table name, support "==", "!=", "in [xx]", "!(in [xx])", "contains()", "matches()", "startsWith()", "endsWith()" operations.
	// statement.text: the SQL statement, support "contains()", "matches()", "startsWith()", "endsWith()" operations.
	// request.expiration_days: the role expiration days for the request, support "==", "!=", "<", "<=", ">", ">=" operations.
	// request.role: the request role full name, support "==", "!=", "in [xx]", "!(in [xx])", "contains()", "matches()", "startsWith()", "endsWith()" operations.
	//
	// When the risk source is DDL/DML, support following variables:
	// statement.affected_rows
	// statement.table_rows
	// resource.environment_id
	// resource.project_id
	// resource.db_engine
	// statement.sql_type
	// resource.database_name
	// resource.schema_name
	// resource.table_name
	// statement.text
	//
	// When the risk source is CREATE_DATABASE, support following variables:
	// resource.environment_id
	// resource.project_id
	// resource.db_engine
	// resource.database_name
	//
	// When the risk source is DATA_EXPORT, support following variables:
	// resource.environment_id
	// resource.project_id
	// resource.db_engine
	// resource.database_name
	// resource.schema_name
	// resource.table_name
	//
	// When the risk source is REQUEST_ROLE, support following variables:
	// resource.project_id
	// request.expiration_days
	// request.role
	Condition     *expr.Expr `protobuf:"bytes,8,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Risk) Reset() {
	*x = Risk{}
	mi := &file_v1_risk_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk) ProtoMessage() {}

func (x *Risk) ProtoReflect() protoreflect.Message {
	mi := &file_v1_risk_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk.ProtoReflect.Descriptor instead.
func (*Risk) Descriptor() ([]byte, []int) {
	return file_v1_risk_service_proto_rawDescGZIP(), []int{6}
}

func (x *Risk) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Risk) GetSource() Risk_Source {
	if x != nil {
		return x.Source
	}
	return Risk_SOURCE_UNSPECIFIED
}

func (x *Risk) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Risk) GetLevel() RiskLevel {
	if x != nil {
		return x.Level
	}
	return RiskLevel_RISK_LEVEL_UNSPECIFIED
}

func (x *Risk) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Risk) GetCondition() *expr.Expr {
	if x != nil {
		return x.Condition
	}
	return nil
}

var File_v1_risk_service_proto protoreflect.FileDescriptor

const file_v1_risk_service_proto_rawDesc = "" +
	"\n" +
	"\x15v1/risk_service.proto\x12\vbytebase.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x16google/type/expr.proto\x1a\x13v1/annotation.proto\x1a\x0fv1/common.proto\"\x12\n" +
	"\x10ListRisksRequest\"<\n" +
	"\x11ListRisksResponse\x12'\n" +
	"\x05risks\x18\x01 \x03(\v2\x11.bytebase.v1.RiskR\x05risks\"?\n" +
	"\x11CreateRiskRequest\x12*\n" +
	"\x04risk\x18\x01 \x01(\v2\x11.bytebase.v1.RiskB\x03\xe0A\x02R\x04risk\"?\n" +
	"\x0eGetRiskRequest\x12-\n" +
	"\x04name\x18\x01 \x01(\tB\x19\xe0A\x02\xfaA\x13\n" +
	"\x11bytebase.com/RiskR\x04name\"\xa6\x01\n" +
	"\x11UpdateRiskRequest\x12*\n" +
	"\x04risk\x18\x01 \x01(\v2\x11.bytebase.v1.RiskB\x03\xe0A\x02R\x04risk\x12@\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\x03\xe0A\x02R\n" +
	"updateMask\x12#\n" +
	"\rallow_missing\x18\x03 \x01(\bR\fallowMissing\"B\n" +
	"\x11DeleteRiskRequest\x12-\n" +
	"\x04name\x18\x01 \x01(\tB\x19\xe0A\x02\xfaA\x13\n" +
	"\x11bytebase.com/RiskR\x04name\"\xf1\x02\n" +
	"\x04Risk\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x06source\x18\x03 \x01(\x0e2\x18.bytebase.v1.Risk.SourceR\x06source\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12,\n" +
	"\x05level\x18\x05 \x01(\x0e2\x16.bytebase.v1.RiskLevelR\x05level\x12\x16\n" +
	"\x06active\x18\a \x01(\bR\x06active\x12/\n" +
	"\tcondition\x18\b \x01(\v2\x11.google.type.ExprR\tcondition\"j\n" +
	"\x06Source\x12\x16\n" +
	"\x12SOURCE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03DDL\x10\x01\x12\a\n" +
	"\x03DML\x10\x02\x12\x13\n" +
	"\x0fCREATE_DATABASE\x10\x03\x12\x0f\n" +
	"\vDATA_EXPORT\x10\x06\x12\x10\n" +
	"\fREQUEST_ROLE\x10\a:$\xeaA!\n" +
	"\x11bytebase.com/Risk\x12\frisks/{risk}J\x04\b\x02\x10\x032\x9a\x05\n" +
	"\vRiskService\x12u\n" +
	"\tListRisks\x12\x1d.bytebase.v1.ListRisksRequest\x1a\x1e.bytebase.v1.ListRisksResponse\")\xdaA\x00\x8a\xea0\rbb.risks.list\x90\xea0\x01\x82\xd3\xe4\x93\x02\v\x12\t/v1/risks\x12z\n" +
	"\n" +
	"CreateRisk\x12\x1e.bytebase.v1.CreateRiskRequest\x1a\x11.bytebase.v1.Risk\"9\xdaA\x04risk\x8a\xea0\x0fbb.risks.create\x90\xea0\x01\x98\xea0\x01\x82\xd3\xe4\x93\x02\x11:\x04risk\"\t/v1/risks\x12q\n" +
	"\aGetRisk\x12\x1b.bytebase.v1.GetRiskRequest\x1a\x11.bytebase.v1.Risk\"6\xdaA\x04name\x8a\xea0\rbb.risks.list\x90\xea0\x01\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/{name=risks/*}\x12\xa7\x01\n" +
	"\n" +
	"UpdateRisk\x12\x1e.bytebase.v1.UpdateRiskRequest\x1a\x11.bytebase.v1.Risk\"f\xdaA\x10risk,update_mask\x8a\xea0\x0fbb.risks.update\x90\xea0\x01\x98\xea0\x01\xa2\xea0\x0fbb.risks.create\x82\xd3\xe4\x93\x02\x1f:\x04risk2\x17/v1/{risk.name=risks/*}\x12{\n" +
	"\n" +
	"DeleteRisk\x12\x1e.bytebase.v1.DeleteRiskRequest\x1a\x16.google.protobuf.Empty\"5\x8a\xea0\x0fbb.risks.delete\x90\xea0\x01\x98\xea0\x01\x82\xd3\xe4\x93\x02\x14*\x12/v1/{name=risks/*}B\xa6\x01\n" +
	"\x0fcom.bytebase.v1B\x10RiskServiceProtoP\x01Z4github.com/bytebase/bytebase/backend/generated-go/v1\xa2\x02\x03BXX\xaa\x02\vBytebase.V1\xca\x02\vBytebase\\V1\xe2\x02\x17Bytebase\\V1\\GPBMetadata\xea\x02\fBytebase::V1b\x06proto3"

var (
	file_v1_risk_service_proto_rawDescOnce sync.Once
	file_v1_risk_service_proto_rawDescData []byte
)

func file_v1_risk_service_proto_rawDescGZIP() []byte {
	file_v1_risk_service_proto_rawDescOnce.Do(func() {
		file_v1_risk_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_risk_service_proto_rawDesc), len(file_v1_risk_service_proto_rawDesc)))
	})
	return file_v1_risk_service_proto_rawDescData
}

var file_v1_risk_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_risk_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_v1_risk_service_proto_goTypes = []any{
	(Risk_Source)(0),              // 0: bytebase.v1.Risk.Source
	(*ListRisksRequest)(nil),      // 1: bytebase.v1.ListRisksRequest
	(*ListRisksResponse)(nil),     // 2: bytebase.v1.ListRisksResponse
	(*CreateRiskRequest)(nil),     // 3: bytebase.v1.CreateRiskRequest
	(*GetRiskRequest)(nil),        // 4: bytebase.v1.GetRiskRequest
	(*UpdateRiskRequest)(nil),     // 5: bytebase.v1.UpdateRiskRequest
	(*DeleteRiskRequest)(nil),     // 6: bytebase.v1.DeleteRiskRequest
	(*Risk)(nil),                  // 7: bytebase.v1.Risk
	(*fieldmaskpb.FieldMask)(nil), // 8: google.protobuf.FieldMask
	(RiskLevel)(0),                // 9: bytebase.v1.RiskLevel
	(*expr.Expr)(nil),             // 10: google.type.Expr
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_v1_risk_service_proto_depIdxs = []int32{
	7,  // 0: bytebase.v1.ListRisksResponse.risks:type_name -> bytebase.v1.Risk
	7,  // 1: bytebase.v1.CreateRiskRequest.risk:type_name -> bytebase.v1.Risk
	7,  // 2: bytebase.v1.UpdateRiskRequest.risk:type_name -> bytebase.v1.Risk
	8,  // 3: bytebase.v1.UpdateRiskRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 4: bytebase.v1.Risk.source:type_name -> bytebase.v1.Risk.Source
	9,  // 5: bytebase.v1.Risk.level:type_name -> bytebase.v1.RiskLevel
	10, // 6: bytebase.v1.Risk.condition:type_name -> google.type.Expr
	1,  // 7: bytebase.v1.RiskService.ListRisks:input_type -> bytebase.v1.ListRisksRequest
	3,  // 8: bytebase.v1.RiskService.CreateRisk:input_type -> bytebase.v1.CreateRiskRequest
	4,  // 9: bytebase.v1.RiskService.GetRisk:input_type -> bytebase.v1.GetRiskRequest
	5,  // 10: bytebase.v1.RiskService.UpdateRisk:input_type -> bytebase.v1.UpdateRiskRequest
	6,  // 11: bytebase.v1.RiskService.DeleteRisk:input_type -> bytebase.v1.DeleteRiskRequest
	2,  // 12: bytebase.v1.RiskService.ListRisks:output_type -> bytebase.v1.ListRisksResponse
	7,  // 13: bytebase.v1.RiskService.CreateRisk:output_type -> bytebase.v1.Risk
	7,  // 14: bytebase.v1.RiskService.GetRisk:output_type -> bytebase.v1.Risk
	7,  // 15: bytebase.v1.RiskService.UpdateRisk:output_type -> bytebase.v1.Risk
	11, // 16: bytebase.v1.RiskService.DeleteRisk:output_type -> google.protobuf.Empty
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_v1_risk_service_proto_init() }
func file_v1_risk_service_proto_init() {
	if File_v1_risk_service_proto != nil {
		return
	}
	file_v1_annotation_proto_init()
	file_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_risk_service_proto_rawDesc), len(file_v1_risk_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_risk_service_proto_goTypes,
		DependencyIndexes: file_v1_risk_service_proto_depIdxs,
		EnumInfos:         file_v1_risk_service_proto_enumTypes,
		MessageInfos:      file_v1_risk_service_proto_msgTypes,
	}.Build()
	File_v1_risk_service_proto = out.File
	file_v1_risk_service_proto_goTypes = nil
	file_v1_risk_service_proto_depIdxs = nil
}
