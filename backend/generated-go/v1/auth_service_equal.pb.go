// Code generated by protoc-gen-equal-go. DO NOT EDIT.
// source: v1/auth_service.proto

package v1

func (x *LoginRequest) Equal(y *LoginRequest) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Email != y.Email {
		return false
	}
	if x.Password != y.Password {
		return false
	}
	if x.Web != y.Web {
		return false
	}
	if x.IdpName != y.IdpName {
		return false
	}
	if !x.IdpContext.Equal(y.IdpContext) {
		return false
	}
	if p, q := x.OtpCode, y.OtpCode; (p == nil && q != nil) || (p != nil && (q == nil || *p != *q)) {
		return false
	}
	if p, q := x.RecoveryCode, y.RecoveryCode; (p == nil && q != nil) || (p != nil && (q == nil || *p != *q)) {
		return false
	}
	if p, q := x.MfaTempToken, y.MfaTempToken; (p == nil && q != nil) || (p != nil && (q == nil || *p != *q)) {
		return false
	}
	return true
}

func (x *IdentityProviderContext) Equal(y *IdentityProviderContext) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if !x.GetOauth2Context().Equal(y.GetOauth2Context()) {
		return false
	}
	if !x.GetOidcContext().Equal(y.GetOidcContext()) {
		return false
	}
	return true
}

func (x *OAuth2IdentityProviderContext) Equal(y *OAuth2IdentityProviderContext) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Code != y.Code {
		return false
	}
	return true
}

func (x *OIDCIdentityProviderContext) Equal(y *OIDCIdentityProviderContext) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	return true
}

func (x *LoginResponse) Equal(y *LoginResponse) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	if x.Token != y.Token {
		return false
	}
	if p, q := x.MfaTempToken, y.MfaTempToken; (p == nil && q != nil) || (p != nil && (q == nil || *p != *q)) {
		return false
	}
	if x.RequireResetPassword != y.RequireResetPassword {
		return false
	}
	if !x.User.Equal(y.User) {
		return false
	}
	return true
}

func (x *LogoutRequest) Equal(y *LogoutRequest) bool {
	if x == y {
		return true
	}
	if x == nil || y == nil {
		return x == nil && y == nil
	}
	return true
}
