- statement: |-
    CREATE TABLE public.pokesv1 (foo int, bar varchar);
    INSERT INTO public.pokesv1 VALUES (1, '1');
    CREATE TABLE public.pokes (foo int);
    CREATE TABLE pokesv2 (foo int, bar varchar);
  want:
    - status: WARN
      code: 310
      title: naming.fully-qualified
      content: "unqualified object name: 'pokesv2'"
      line: 4

- statement: |-
    CREATE SEQUENCE public.seq;
    CREATE SEQUENCE seq;
    DROP SEQUENCE public.seq 
  want:
    - status: WARN
      code: 310
      title: naming.fully-qualified
      content: "unqualified object name: 'seq'"
      line: 2

- statement: |-
    CREATE TRIGGER test_trigger
    AFTER INSERT ON pokesv1
    FOR EACH ROW
    EXECUTE PROCEDURE trigger_function();
    INSERT INTO bbdev.public.pokesv1 VALUES (1, '1');
  want:
    - status: WARN
      code: 310
      title: naming.fully-qualified
      content: "unqualified object name: 'pokesv1'"
      line: 4

- statement: DROP TRIGGER test_trigger ON public.pokes;
  want:
    - status: SUCCESS
      code: 0
      title: "OK"

- statement: |-
    CREATE TABLE public.pokesv1 (foo int, bar varchar);
    ALTER TABLE pokesv1 RENAME TO pokesv2;
  want:
    - status: WARN
      code: 310
      title: naming.fully-qualified
      content: "unqualified object name: 'pokesv1'"
      line: 2

- statement: |-
    CREATE TABLE public.pokesv1 (foo int);
    INSERT INTO pokesv1(foo) VALUES (1);
    INSERT INTO public.pokesv1 VALUES (2);
  want:
    - status: WARN
      code: 310
      title: naming.fully-qualified
      content: "unqualified object name: 'pokesv1'"
      line: 2

- statement: |-
    CREATE TABLE public.pokesv1 (foo int);
    UPDATE public.pokesv1 SET foo = 1 WHERE 1=1;
    UPDATE public.pokesv1 SET foo = 2 WHERE foo=1;
    UPDATE pokesv1 SET foo = 1 WHERE 1=1;
    UPDATE public.pokesv1 SET foo = 1 WHERE 1 > 1;
  want:
    - status: WARN
      code: 310
      title: naming.fully-qualified
      content: "unqualified object name: 'pokesv1'"
      line: 4

- statement: |-
    CREATE TABLE public.pokes (foo int); 
    SELECT * FROM (SELECT (foo) FROM pokes) AS foo;
  want:
    - status: WARN
      code: 310
      title: naming.fully-qualified
      content: "unqualified object name: 'pokes'"
      line: 2

- statement: |-
    CREATE TABLE public.pokes (foo int);
    WITH foo1 AS (SELECT * FROM public.pokes) 
    SELECT * FROM foo1;
  want:
    - status: SUCCESS
      code: 0
      title: OK