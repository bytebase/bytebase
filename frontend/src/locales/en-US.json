{
  "common": {
    "when": "When",
    "view": "View",
    "you": "you",
    "general": "General",
    "slack": "Slack",
    "discord": "Discord",
    "teams": "Teams",
    "dingtalk": "DingTalk",
    "feishu": "Feishu",
    "wecom": "WeCom",
    "custom": "Custom",
    "im": "IM",
    "overview": "Overview",
    "migration-history": "Migration History",
    "webhook": "Webhook",
    "webhooks": "Webhooks",
    "key": "Key",
    "workflow": "Workflow",
    "unread": "Unread",
    "read": "Read",
    "inbox": "Inbox",
    "activity": "Activity",
    "activities": "Activities",
    "sign-in": "Sign in",
    "sign-up": "Sign up",
    "email": "Email",
    "username": "Username",
    "password": "Password",
    "activate": "Activate",
    "save": "Save",
    "cancel": "Cancel",
    "comment": "Comment",
    "home": "Home",
    "setting": "Setting",
    "settings": "Settings",
    "project": "Project",
    "projects": "Projects",
    "default-project": "Default Project",
    "visit-default-project": "@:common.visit @:common.default-project",
    "help": "Help",
    "database": "Database",
    "databases": "Databases",
    "description": "Description",
    "instance": "Instance",
    "instances": "Instances",
    "environment": "Environment",
    "environments": "Environments",
    "environment-name": "Environment Name",
    "bookmark": "Bookmark",
    "bookmarks": "Bookmarks",
    "quick-action": "Quick Action",
    "archive": "Archive",
    "quickstart": "Quickstart",
    "logout": "Logout",
    "close": "Close",
    "latest": "Latest",
    "error": "Error",
    "canceled": "Canceled",
    "approval": "Approval",
    "approve": "Approve",
    "done": "Done",
    "create": "Create",
    "run": "Run",
    "retry": "Retry",
    "skip": "Skip",
    "reopen": "Reopen",
    "dismiss": "Dismiss",
    "back": "Back",
    "next": "Next",
    "edit": "Edit",
    "update": "Update",
    "updated": "Updated",
    "visit": "Visit",
    "role": {
      "dba": "DBA",
      "owner": "Owner",
      "developer": "Developer",
      "member": "Member"
    },
    "assignee": "Assignee",
    "revert": "Revert",
    "apply": "Apply",
    "reorder": "Reorder",
    "id": "ID",
    "name": "Name",
    "creator": "Creator",
    "version": "Version",
    "issue": "Issue",
    "issues": "Issues",
    "duration": "Duration",
    "created-at": "Created",
    "updated-at": "Updated",
    "commit": "Commit",
    "statement": "Statement",
    "sql-statement": "SQL statement",
    "snapshot": "Snapshot",
    "status": "Status",
    "stage": "Stage",
    "task": "Task",
    "tasks": "Tasks",
    "sql": "SQL",
    "unassigned": "Unassigned",
    "new": "New",
    "add": "Add",
    "confirm-and-add": "Confirm and add",
    "confirm-and-update": "Confirm and update",
    "query": "Query",
    "transfer": "Transfer",
    "migration": "Migration",
    "schema": "Schema",
    "anomalies": "Anomalies",
    "do-not-show-again": "Do not show again",
    "backups": "Backups",
    "detail": "Detail",
    "type": "Type",
    "language": "Language",
    "repository": "Repository",
    "change": "Change",
    "branch": "Branch",
    "config-guide": "config guide",
    "required-placeholder": "required placeholder",
    "optional-placeholder": "optional placeholder",
    "optional-directory-wildcard": "optional directory wildcard",
    "sensitive-placeholder": "sensitive - write only",
    "enabled": "enabled",
    "default": "default",
    "version-control": "Version Control",
    "restore": "Restore",
    "detailed-guide": "detailed guide",
    "workspace": "workspace",
    "application": "Application",
    "confirm": "Confirm",
    "coming-later": "Coming later",
    "learn-more": "Learn more",
    "schema-version": "Schema version",
    "time": "Time",
    "manual": "Manual",
    "automatic": "Automatic",
    "Default": "Default",
    "definition": "Definition",
    "empty": "Empty",
    "connecting": "Connecting...",
    "creating": "Creating...",
    "updating": "Updating...",
    "Address": "Address",
    "User": "User",
    "assigned": "Assigned",
    "subscribed": "Subscribed",
    "created": "Created",
    "label": "Label",
    "labels": "Labels",
    "mode": "Mode",
    "roletype": "Role Type",
    "readonly": "readonly",
    "user": "User",
    "added-time": "Added time",
    "data-source": "Data Source",
    "grant": "Grant",
    "admin": "Admin",
    "read-only": "Read-only",
    "connection-string": "Connection string",
    "agents": "Agents",
    "billings": "Billings",
    "all": "All",
    "deployment-config": "Deployment Config",
    "by": "by",
    "ok": "OK",
    "share": "Share",
    "others": "Others",
    "or": "or",
    "export": "Export",
    "tips": "Tips",
    "template": "Template",
    "delete": "Delete",
    "history": "History",
    "loading": "Loading",
    "from": "from",
    "copy": "Copy",
    "copied": "Copied",
    "manage": "Manage",
    "table": "Table",
    "search": "Search",
    "warning": "Warning",
    "edited": "edited",
    "preview": "Preview",
    "file-selector": {
      "type-limit": "Only support {extension} file",
      "size-limit": "File size should less than {size} MiB"
    },
    "no-data": "No data",
    "visibility": "Visibility",
    "star": "Star",
    "unstar": "Unstar",
    "starred": "Starred",
    "duplicate": "Duplicate",
    "clear-search": "Clear search",
    "enable": "Enable",
    "disable": "Disable",
    "view-doc": "View doc",
    "backup-and-restore": "Backup and restore",
    "write-only": "write only",
    "pitr": "PITR",
    "fix": "Fix",
    "go-now": "Go now",
    "sync-now": "Sync Now",
    "show-help": "Show help",
    "success": "Succeed",
    "load-more": "Load more",
    "access-denied": "Access denied",
    "no": "No",
    "yes": "Yes",
    "advanced": "Advanced",
    "restart": "Restart",
    "want-help": "Want help",
    "operation": "Operation",
    "rollback": "Rollback"
  },
  "error-page": {
    "go-back-home": "Go back home"
  },
  "anomaly-center": "Anomaly Center",
  "kbar": {
    "recently-visited": "Recently Visited",
    "navigation": "Navigation",
    "help": {
      "navigate": "to navigate",
      "perform": "to perform",
      "close": "to close",
      "back": "to back"
    },
    "options": {
      "placeholder": "Type a command or search…"
    },
    "preferences": {
      "common": "Preferences",
      "change-language": "Change Language…"
    }
  },
  "task": {
    "checking": "Checking...",
    "run-task": "Run checks",
    "check-result": {
      "title": "Check result for {name}"
    },
    "check-type": {
      "fake": "Fake",
      "syntax": "Syntax",
      "compatibility": "Compatibility",
      "connection": "Connection",
      "migration-schema": "Migration schema",
      "sql-review": "SQL review",
      "earliest-allowed-time": "Earliest allowed time",
      "ghost-sync": "gh-ost sync",
      "statement-type": "Statement type",
      "lgtm": "LGTM",
      "pitr": "PITR"
    },
    "earliest-allowed-time-hint": "'@:{'common.when'}' specifies the expected execution timing for this task. If this field is not specified, the task will be executed once it has passed all other gating criteria.",
    "earliest-allowed-time-unset": "Unset",
    "comment": "Comment",
    "invoker": "Invoker",
    "started": "Started",
    "ended": "Ended",
    "view-migration": "View migration",
    "view-migration-history": "View migration history",
    "status": {
      "running": "Running",
      "failed": "Failed",
      "canceled": "Canceled",
      "success": "Success",
      "warn": "Warning",
      "error": "Error"
    },
    "earliest-allowed-time-no-modify": "You cannot modify this field because you are not the issue assignee or it's not pending to run.",
    "type": {
      "bb-task-database-schema-update-ghost-sync": "Sync data",
      "bb-task-database-schema-update-ghost-cutover": "Switch tables",
      "bb-task-database-schema-update-ghost-drop-original-table": "Drop original table"
    },
    "progress": {
      "completed-units": "Completed {units}",
      "total-units": "Total {units}",
      "eta": "ETA",
      "units": {
        "unit": "units",
        "row": "rows"
      },
      "counting": "Counting"
    },
    "n-similar-tasks": "({count} similar tasks)",
    "mark-as-done": "Mark as done",
    "mark-as-done-modal-title": "Mark task [{name}] as done?"
  },
  "banner": {
    "demo-intro": "This is a demo version of Bytebase.",
    "demo-intro-readonly": "This is a demo version of Bytebase in read-only mode.",
    "update-license": "Update license",
    "license-expires": "Your license for {plan} has expired on {expireAt}.",
    "trial-expires": "Your free trial for {plan} will expire in {days} days on {expireAt}.",
    "extend-trial": "Extend trialing time",
    "action": "Deploy yours in 5 seconds",
    "debug": "Debug mode is active, you can disable Debug mode via the top-right profile dropdown.",
    "readonly": "Bytebase is in readonly mode. You can still view the console, but any change attempt will fail.",
    "external-url": "Bytebase has not configured --external-url",
    "configure-now": "Configure now"
  },
  "intro": {
    "doc": "doc",
    "issue": "issue",
    "quickstart": "quickstart"
  },
  "bbkit": {
    "common": {
      "ok": "OK",
      "cancel": "Cancel",
      "back": "Back",
      "next": "Next",
      "finish": "Finish",
      "step": "Step"
    },
    "attention": {
      "default": "Attention needed"
    }
  },
  "settings": {
    "sidebar": {
      "account": "Account",
      "profile": "Profile",
      "workspace": "Workspace",
      "general": "General",
      "members": "Members",
      "im-integration": "IM Integration",
      "version-control": "Version Control",
      "subscription": "Subscription",
      "labels": "Labels",
      "debug-log": "Debug Log",
      "sensitive-data": "Sensitive Data",
      "access-control": "Access Control",
      "audit-log": "Audit Log"
    },
    "profile": {
      "email": "Email",
      "role": "Role",
      "password": "Password",
      "password-confirm": "Confirm",
      "password-confirm-placeholder": "Confirm new password",
      "password-mismatch": "mismatch",
      "subscription": "(Upgrade to enable role management)"
    },
    "members": {
      "active": "Active members",
      "inactive": "Inactive members",
      "helper": "Add or invite by email address",
      "add-more": "+ Add more",
      "add": "Add",
      "invites": "Send Invites",
      "invited": "Invited",
      "yourself": "You",
      "upgrade": "Upgrade to enable role management",
      "select-role": "Select role",
      "not-assigned": "Not assigned",
      "table": {
        "account": "Account",
        "role": "Role",
        "update-time": "Updated Time",
        "granted-time": "Granted Time"
      },
      "action": {
        "deactivate": "Deactivate",
        "deactivate-confirm-title": "Are you sure to deactivate",
        "deactivate-confirm-description": "You can still reactivate later",
        "reactivate": "Reactivate",
        "reactivate-confirm-title": "Are you sure to reactivate"
      },
      "tooltip": {
        "upgrade": "Upgrade to enable role management",
        "not-allow-edit": "Only Owner can change the role",
        "not-allow-remove": "Cannot remove the last Owner",
        "project-role-provider-gitlab": "Mapped from the {rawRole} role in the corresponding GitLab project.",
        "cannot-change-role-of-systembot": "Cannot change the role of system bot"
      },
      "toggle-role-provider": {
        "title": "Are you sure?"
      },
      "change-role-provider-to-vcs": {
        "content": "Turning on VCS sync will replace all existing members with the members from the corresponding VCS project.\nThe existing members will become inactive. You can turn off VCS sync to restore those members.",
        "emphasize": "Please be noticed that this function requires all project members from the VCS have a public email set."
      },
      "change-role-provider-to-bytebase": {
        "content": "You are about to restore the following members. All existing members synced from VCS will be removed."
      },
      "system-bot": "System Bot",
      "service-account": "Service Account",
      "copy-service-key": "Copy Service Key",
      "reset-service-key": "Reset Service Key",
      "reset-service-key-alert": "This action cannot be undone. The old key will stop working immediately. Are you sure you want to reset this service key?",
      "service-key-copied": "Service Key copied to clipboard, please keep it in secret.",
      "create-as-service-account": "Create as service account"
    },
    "im-integration": {
      "enable": "Enable",
      "description": "Allow users to approve issues from IM directly.",
      "feishu-updated-tip": "Successfully updated the Feishu integration"
    },
    "general": {
      "workspace": {
        "branding": "Branding",
        "only-owner-can-edit": "Only workspace owner can update the branding.",
        "logo": "Logo",
        "logo-aspect": "The suggested logo size should be in 5:2 aspect ratio (e.g 100 x 40).",
        "select-logo": "Upload a file",
        "drag-logo": "or drag here",
        "logo-upload-tip": "{extension} up to {size} MiB",
        "logo-upload-succeed": "Successfully updated the logo"
      }
    },
    "sensitive-data": {
      "description": "The query result of the following columns is displayed as \"******\". \nYou can mark more columns as sensitive data on the table details page.",
      "remove-sensitive-column-tips": "Expose this column?"
    },
    "access-control": {
      "description": "Allow developers to execute queries for the following databases in the protected environments from SQL Editor.",
      "add-rule": "Add rule",
      "remove-policy-tips": "Remove this rule?"
    }
  },
  "activity": {
    "name": "Name",
    "comment": "Comment",
    "created": "Created",
    "invoker": "Invoker",
    "type": {
      "issue-create": "create issue",
      "comment-create": "create comment",
      "issue-field-update": "update issue field",
      "issue-status-update": "update issue status",
      "pipeline-task-status-update": "update issue task status",
      "pipeline-task-file-commit": "commit file",
      "pipeline-task-statement-update": "SQL update",
      "member-create": "create member",
      "member-role-update": "update role",
      "member-activate": "activate member",
      "member-deactivate": "deactivate member",
      "project-repository-push": "repository push event",
      "project-database-transfer": "database transfer",
      "project-member-create": "add project member",
      "project-member-delete": "delete project member",
      "project-member-role-update": "change project member role",
      "pipeline-task-earliest-allowed-time-update": "update earliest allowed time",
      "database-recovery-pitr-done": "restore database to point in time",
      "external-approval-rejected": "external approval rejected"
    },
    "sentence": {
      "created-issue": "created issue",
      "commented": "commented",
      "reassigned-issue": "reassigned issue from {oldName} to {newName}",
      "assigned-issue": "assigned issue to {newName}",
      "unassigned-issue": "unassigned issue from {oldName}",
      "invalid-assignee-update": "invalid assignee update",
      "changed-description": "changed description",
      "changed-from-to": "changed {name} from \"{oldValue}\" to \"{newValue}\"",
      "unset-from": "unset {name} from \"{oldValue}\"",
      "set-to": "set {name} to \"{newValue}\"",
      "changed-update": "changed {name} update",
      "reopened-issue": "reopened issue",
      "resolved-issue": "resolved issue",
      "canceled-issue": "canceled issue",
      "empty": "",
      "changed": "changed",
      "updated": "updated",
      "canceled": "canceled",
      "approved": "approved",
      "started": "started",
      "completed": "completed",
      "failed": "failed",
      "task-name": " task {name}",
      "committed-to-at": "committed {file} to {branch}{'@'}{repo}",
      "dismissed-stale-approval": "dismissed stale approvals of {task}",
      "external-approval-rejected": "rejected external approval from {imName} of stage \"{stageName}\""
    },
    "subject-prefix": {
      "task": "Task"
    },
    "n-similar-activities": "({count} similar activity) | ({count} similar activities)"
  },
  "issue": {
    "waiting-approval": "Waiting Approval",
    "opened-by-at": "opened by {creator} at {time}",
    "commit-by-at": "commit {id} {title} by {author} at {time}",
    "status-transition": {
      "modal": {
        "resolve": "Resolve issue?",
        "cancel": "Cancel this entire issue?",
        "reopen": "Reopen issue?",
        "title": "{action} {type} [{name}]?",
        "action-to-stage": "{action} stage ({n} tasks)"
      },
      "dropdown": {
        "resolve": "Resolve issue",
        "cancel": "Cancel issue",
        "reopen": "Reopen issue"
      },
      "form": {
        "note": "Note",
        "placeholder": "(Optional) Add a note..."
      }
    },
    "subscribe": "Subscribe",
    "unsubscribe": "Unsubscribe",
    "subscriber": "No subscribers | 1 subscriber | {n} subscribers",
    "apply-to-other-tasks": "Apply to other tasks",
    "add-sql-statement": "Add SQL statement...",
    "optional-add-sql-statement": "(Optional) Add SQL statement...",
    "edit-description": "Edit description",
    "add-some-description": "Add some description...",
    "add-a-comment": "Add a comment",
    "edit-comment": "Edit comment",
    "leave-a-comment": "Leave a comment...",
    "view-commit": "View commit",
    "search-issue-name": "Search issue name",
    "table": {
      "open": "Open",
      "closed": "Closed",
      "status": "Status",
      "project": "Project",
      "name": "Name",
      "environment": "Environment",
      "db": "DB",
      "progress": "Progress",
      "updated": "Updated",
      "assignee": "Assignee"
    },
    "stage-select": {
      "active": "{name} (active)"
    },
    "not-allowed-to-single-database-in-tenant-mode": "Can't {operation} to single database in tenant mode",
    "migration-mode": {
      "title": "Migration mode",
      "normal": {
        "title": "Normal migration (for normal-sized table)",
        "description": "Perform schema change directly on the target table. A lock will be held during the entire migration."
      },
      "online": {
        "title": "Online migration (for large-sized table)",
        "description": "Based on gh-ost. For large tables, it can reduce the table lock duration from hours to seconds {link}."
      }
    },
    "new-issue": "@:common.new @:common.issue",
    "format-on-save": "Format on save",
    "action-to-current-stage": "{action} current stage",
    "edit-sql-statement-in-vcs": "This project has enabled VCS based version control. Please modify the SQL file in the corresponding Git repository, and commit it to create a new issue.",
    "edit-sql-statement": "Edit SQL statement",
    "upload-sql": "Upload SQL",
    "override-current-statement": "Override current SQL statement",
    "upload-sql-file-max-size-exceeded": "Max file size ({size}) exceeded.",
    "waiting-earliest-allowed-time": "Will run after {time}",
    "batch-transition": {
      "not-allowed-tips": "Some of selected issues cannot be {operation}",
      "resolve": "Resolve",
      "resolved": "resolved",
      "cancel": "Cancel",
      "cancelled": "cancelled",
      "reopen": "Reopen",
      "reopened": "reopened",
      "action-n-issues": "{action} {n} issue | {action} {n} issues",
      "successfully-updated-n-issues": "Successfully updated {n} issue | Successfully updated {n} issues"
    },
    "sql-hint": {
      "change-will-apply-to-all-tasks-in-tenant-mode": "The change will be applied to all tasks",
      "dont-apply-to-database-in-baseline-migration": "This is a baseline migration and Bytebase won't apply the SQL to the database, it will only record a baseline history",
      "snowflake": "Use <<schema>>.<<table>> to specify a Snowflake table"
    },
    "rollback-from": "This task rollbacks from {link}.",
    "issue-link-with-task": "Issue {issue} - task {task}",
    "assignee-attention": {
      "send-approval-request-successfully": "Send a {im} approval request successfully",
      "needs-attention": "Needs attention",
      "click-to-mark": "Click to mark it as \"Needs attention\""
    }
  },
  "alter-schema": {
    "vcs-enabled": "This project has enabled VCS based version control and selecting database below will navigate you to the corresponding Git repository to initiate the change process.",
    "vcs-info": "VCS enabled. Selecting this will navigate you to the corresponding Git repository to initiate the change process.",
    "alter-single-db": "Alter single database",
    "alter-multiple-db": "Manual Selection",
    "alter-multiple-db-info": "For each environment, you can select multiple databases to alter their schemas or just skip that environment. This allows you to compose a single pipeline to propagate changes across multiple environments.",
    "alter-db-group": "By Deployment Config",
    "no-databases-in-project": "No databases in this project. Click New DB or Transfer in DB to add databases."
  },
  "quick-action": {
    "create-db": "Create database",
    "choose-db": "Choose database",
    "new-db": "New DB",
    "add-instance": "@:common.add @:common.instance",
    "create-instance": "@:common.create @:common.instance",
    "manage-user": "Manage User",
    "add-environment": "@:common.add @:common.environment",
    "create-environment": "@:common.create @:common.environment",
    "new-project": "@:common.new @:common.project",
    "create-project": "@:common.create @:common.project",
    "edit-data": "Edit Data",
    "troubleshoot": "Troubleshoot",
    "sync-schema": "Sync Schema",
    "transfer-in-db": "Transfer in DB",
    "request-db": "Request DB",
    "from-unassigned-databases": "From unassigned databases",
    "from-projects": "From projects",
    "transfer-in-db-title": "Transfer in database",
    "default-db-hint": "Bytebase periodically syncs the instance schema. Newly synced databases are first placed in the default project.",
    "transfer-in-db-alert": "Are you sure to transfer \"{ dbName }\" into our project?",
    "unassigned-db-hint": "Bytebase periodically syncs the instance schema. Newly synced databases are first placed in unassigned databases."
  },
  "create-db": {
    "new-database-name": "New database name",
    "database-owner-name": "Database owner name",
    "cluster": "Cluster",
    "reserved-db-error": "{databaseName} is a reserved name",
    "generated-database-name": "Generated database name",
    "db-name-generated-by-template": "Generated by template \"{template}\"",
    "input-label-value": "Input {key}"
  },
  "db": {
    "encoding": "Encoding",
    "character-set": "Character set",
    "collation": "Collation",
    "select": "Select database",
    "select-instance-first": "Select instance first",
    "select-environment-first": "Select environment first",
    "tables": "Tables",
    "views": "Views",
    "extensions": "Extensions",
    "parent": "Parent",
    "last-successful-sync": "Last successful sync",
    "sync-status": "Sync status",
    "failed-to-sync-schema-for-database-database-value-name": "Failed to sync schema for database '{0}'.",
    "successfully-synced-schema-for-database-database-value-name": "Successfully synced schema for database '{0}'."
  },
  "instance": {
    "select": "Select instance",
    "select-database-user": "Select database user",
    "new-database": "New Database",
    "syncing": "Syncing ...",
    "create-migration-schema": "Create migration schema",
    "missing-migration-schema": "Missing migration schema",
    "unable-to-connect-instance-to-check-migration-schema": "Unable to connect instance to check migration schema",
    "bytebase-relies-on-migration-schema-to-manage-version-control-based-schema-migration-for-databases-belonged-to-this-instance": "Bytebase relies on migration schema to record database schema migration on this instance. Without setting up the migration schema, you cannot alter schema or change data for any databases on the instance.",
    "please-contact-your-dba-to-configure-it": "Please contact your DBA to configure it.",
    "please-check-the-instance-connection-info-is-correct": "Please check the instance connection info is correct.",
    "users": "Users",
    "successfully-archived-instance-updatedinstance-name": "Successfully archived instance '{0}'.",
    "successfully-restored-instance-updatedinstance-name": "Successfully restored instance '{0}'.",
    "failed-to-create-migration-schema-for-instance-instance-value-name": "Failed to create migration schema for instance '{0}'.",
    "successfully-created-migration-schema-for-instance-value-name": "Successfully created migration schema for '{0}'.",
    "failed-to-sync-schema-for-instance-instance-value-name": "Failed to sync schema for instance '{0}'.",
    "successfully-synced-schema-for-instance-instance-value-name": "Successfully synced schema for instance '{0}'.",
    "archive-this-instance": "Archive this instance",
    "archive-instance-instance-name": "Archive instance '{0}'?",
    "archived-instances-will-not-be-shown-on-the-normal-interface-you-can-still-restore-later-from-the-archive-page": "Archived instances will not be shown on the normal interface. You can still restore later from the Archive page.",
    "restore-this-instance": "Restore this instance",
    "restore": "Restore",
    "restore-instance-instance-name-to-normal-state": "Restore instance '{0}' to normal state?",
    "account-name": "Account name",
    "account": "Account",
    "name": "Name",
    "host-or-socket": "Host or Socket",
    "your-snowflake-account-name": "your Snowflake account name",
    "port": "Port",
    "instance-name": "Instance Name",
    "instance-name-unique": "The instance name should be unique.",
    "snowflake-web-console": "Snowflake Web Console",
    "external-link": "External Link",
    "web-console": "Web Console",
    "connection-info": "Connection info",
    "show-how-to-create": "Show how to create",
    "below-is-an-example-to-create-user-bytebase-with-password": "Below is an example to create user 'bytebase{'@'}%' with password",
    "your_db_pwd": "YOUR_DB_PWD",
    "no-read-only-data-source-warn": "The instance has not configured read-only connection, please consider adding one.",
    "sentence": {
      "host": {
        "snowflake": "e.g. host.docker.internal {'|'} <<ip>> {'|'} <<local socket>>"
      },
      "proxy": {
        "snowflake": "For proxy server, append {'@'}PROXY_HOST and specify PROXY_PORT in the port"
      },
      "console": {
        "snowflake": "The external console URL managing this instance (e.g. AWS RDS console, your in-house DB instance console)"
      },
      "create-admin-user": "This is the connection user used by Bytebase to perform DDL and DML (non-SELECT) operations.",
      "create-readonly-user": "This is the connection used by Bytebase to perform read-only operations such as SELECT query.",
      "create-user-example": {
        "snowflake": {
          "user": "bytebase{'@'}%",
          "password": "YOUR_DB_PWD",
          "template": "Below is an example to create user 'bytebase' with password {password} for {warehouse} and grant the user with the needed privileges."
        },
        "mysql": {
          "password": "YOUR_DB_PWD",
          "user": "bytebase{'@'}%",
          "template": "Below is an example to create user {user} with password {password} and grant the user with the needed privileges."
        },
        "clickhouse": {
          "template": "Below is an example to create user 'bytebase' with password {password} and grant the user with the needed privileges. First you need to enable ClickHouse SQL-driven workflow {link} and then run the following query to create the user.",
          "sql-driven-workflow": "SQL-driven workflow"
        },
        "postgresql": {
          "warn": "If the connecting instance is managed by the cloud provider, then SUPERUSER is not available and you should create the user via that provider's admin console. The created user will have provider specific semi-SUPERUSER privileges. You should grant Bytebase privileges with 'GRANT role_name TO bytebase;' for all existing roles, otherwise Bytebase may not access existing databases or tables.",
          "template": "Below is an example to create user 'bytebase' with password {password} and grant the user with the needed privileges. If the connecting instance is self-hosted, then you can grant SUPERUSER."
        }
      }
    },
    "no-password": "No password",
    "password-write-only": "YOUR_DB_PWD - write only",
    "test-connection": "Test Connection",
    "ignore-and-create": "Ignore and create",
    "add-a-postgresql-sample-instance": "Add a PostgreSQL sample instance instead",
    "successfully-created-postgresql-instance": "Successfully created a PostgreSQL sample instance and filled connection info.",
    "connection-info-seems-to-be-incorrect": "Connection info seems to be incorrect",
    "new-instance": "New Instance",
    "unable-to-connect": "Bytebase is unable to connect the instance. We recommend you to review the connection info again. But it's OK to ignore this warning for now. You can still fix the connection info from the instance detail page after creation.\n\nError detail: {0}",
    "successfully-created-instance-createdinstance-name": "Successfully created instance '{0}'.",
    "successfully-updated-instance-instance-name": "Successfully updated instance '{0}'.",
    "copy-grant-statement": "CREATE USER and GRANT statements copied to clipboard. Paste to your {engine} client to apply.",
    "successfully-connected-instance": "Successfully connected instance.",
    "failed-to-connect-instance": "Failed to connect instance.",
    "failed-to-connect-instance-localhost": "Failed to connect instance.\nIf you run Bytebase with Docker, please try \"host.docker.internal\" for the host address.",
    "search-instance-name": "Search instance name",
    "grants": "Grants"
  },
  "environment": {
    "select": "Select environment",
    "archive": "Archive this environment",
    "archive-info": "Archived environment will not be shown on the normal interface. You can still restore later from the Archive page.",
    "create": "Create Environment",
    "restore": "Restore this environment",
    "successfully-updated-environment": "Successfully updated environment '{name}'.",
    "protected": "Protected",
    "disable-auto-backup": {
      "self": "Disable database automatic backup",
      "content": "Disabling automatic backup policy is not applied retroactively.\nAre you sure about applying to all databases in this environment?"
    }
  },
  "quick-start": {
    "bookmark-an-issue": "Bookmark an issue",
    "add-a-comment": "Add a comment",
    "visit-project": "@:common.visit @:common.projects",
    "visit-instance": "@:common.visit @:common.instances",
    "visit-database": "@:common.visit @:common.databases",
    "visit-environment": "@:common.visit @:common.environments",
    "add-a-member": "Add a member",
    "use-kbar": "Use kbar ({shortcut})",
    "notice": {
      "title": "Quickstart guide dismissed",
      "desc": "You can still bring it back later from the top right menu"
    }
  },
  "auth": {
    "sign-up": {
      "title": "Register your account",
      "admin-title": "Setup {account}",
      "admin-account": "admin account",
      "create-admin-account": "Create admin account",
      "confirm-password": "Confirm Password",
      "confirm-password-placeholder": "Confirm password",
      "password-mismatch": "mismatch",
      "existing-user": "Already have an account?",
      "accept-terms-and-policy": "I accept Bytebase's {terms} and {policy}",
      "terms-of-service": "Terms of Service",
      "privacy-policy": "Privacy Policy"
    },
    "sign-in": {
      "title": "Sign in to your account",
      "forget-password": "Forgot your password?",
      "new-user": "New to Bytebase?",
      "demo-note": "Please use demo account to sign in",
      "gitlab": "Login with GitLab",
      "github": "Login with GitHub",
      "3rd-party-auth-demo": "Third-party authentication is disabled in Demo mode",
      "gitlab-oauth": "Reach to your Admin to enable GitLab login"
    },
    "password-forget": {
      "title": "Forgot your password?",
      "content": "Please contact your Bytebase Admin to reset your password.",
      "return-to-sign-in": "Return to Sign in"
    },
    "password-forgot": "Forgot Password",
    "password-reset": {
      "title": "Reset your password",
      "content": "Enter your email address and we will send you a password reset link",
      "send-reset-link": "Send reset link",
      "return-to-sign-in": "Return to Sign in"
    },
    "activate": {
      "title": "Activate your {type} account"
    }
  },
  "policy": {
    "approval": {
      "name": "Approval Policy",
      "tip": "The policy is applied to issues retroactively.",
      "info": "For updating schema on the existing database, this setting controls whether the task requires manual approval.",
      "manual": "Require manual approval",
      "manual-info": "Tasks will only be executed after being manually approved.",
      "auto": "Skip manual approval",
      "auto-info": "Tasks will be approved and executed automatically if all task checks pass.",
      "assignee-group": {
        "workspace-owner-or-dba": "Require approval from DBA or workspace owner.",
        "project-owner": "Require approval from project owner."
      }
    },
    "backup": {
      "name": "Database backup schedule policy",
      "tip": "The policy is not applied retroactively.",
      "not-enforced": "Not enforced",
      "not-enforced-info": "No backup schedule is enforced.",
      "daily": "Daily backup",
      "daily-info": "Enforce every database to backup daily.",
      "weekly": "Weekly backup",
      "weekly-info": "Enforce every database to backup weekly."
    },
    "environment-tier": {
      "name": "Environment tier",
      "description": "The environment will appear differently from other environments.{newline}Developers cannot execute any query on this environment's databases \nusing SQL Editor by default. ",
      "mark-env-as-protected": "Mark as protected environment"
    }
  },
  "migration-history": {
    "self": "Migration History",
    "select": "Select version",
    "workflow": "Workflow",
    "commit-info": "by {author} at {time}",
    "no-schema-change": "this migration has no schema change",
    "schema-drift": "Schema drift",
    "schema-drift-detected": "A schema drift was detected.",
    "view-drift": "View drift",
    "before-left-schema-choice": "Compare the schema",
    "left-schema-choice-prev-history-schema": "after prev migration",
    "left-schema-choice-current-history-schema-prev": "before this migration",
    "after-left-schema-choice": "and after this migration",
    "show-diff": "Show diff",
    "left-vs-right": "Prev {prevLink} vs This version",
    "schema-snapshot-after-migration": "The schema snapshot recorded after applying this migration",
    "current-schema-empty": "Current schema is empty",
    "list-limit": "For database having migration history, we list up to 5 most recent histories below. You can click the database name to view all histories.",
    "no-history-in-project": "Do not find migration history from any database in this project.",
    "recording-info": "Migration history is recorded whenever the database schema is altered.",
    "establish-baseline": "Establish new baseline",
    "refreshing-history": "Refreshing history ...",
    "config-instance": "Config instance",
    "establish-baseline-description": "Bytebase will use the current schema as the new baseline. This would reconcile the actual schema state with the recorded schema state in Bytebase and fix the reported schema drift. You should only do this if the current schema does reflect the desired state.",
    "establish-database-baseline": "Establish \"{name}\" baseline",
    "instance-missing-migration-schema": "Missing migration history schema on instance \"{name}\".",
    "instance-bad-connection": "Unable to connect instance \"{name}\" to retrieve migration history.",
    "contact-dba": "Please contact your DBA to config it"
  },
  "database": {
    "select": "Select database",
    "the-list-might-be-out-of-date-and-is-refreshed-roughly-every-10-minutes": "The list might be out of date and is refreshed roughly every 10 minutes",
    "no-anomalies-detected": "No anomalies detected",
    "sync-status": "Sync status",
    "last-successful-sync": "Last successful sync",
    "search-database-name": "Search database name",
    "search-database": "Search database",
    "restored-from": "Restored from ",
    "database-name-is-restored-from-another-database-backup": "{0} is restored from another database backup",
    "database-backup": "database backup",
    "transfer-project": "Transfer Project",
    "alter-schema": "Alter Schema",
    "alter-schema-in-vcs": "Alter Schema in VCS",
    "change-data": "Change Data",
    "change-data-in-vcs": "Change Data in VCS",
    "successfully-transferred-updateddatabase-name-to-project-updateddatabase-project-name": "Successfully transferred '{0}' to project '{1}'.",
    "backup-name": "Backup name",
    "create-backup": "Create backup",
    "automatic-x-backup": "Automatic {freq} backup",
    "automatic-backup": "Automatic backup",
    "disable-automatic-backup": "Disable automatic backup",
    "backuppolicy-backup-enforced-and-cant-be-disabled": "{0} backup enforced and can't be disabled",
    "backup-policy": {
      "DAILY": "DAILY",
      "WEEKLY": "WEEKLY"
    },
    "an-http-post-request-will-be-sent-to-it-after-a-successful-backup": "An HTTP POST request will be sent to it after a successful backup.",
    "backup-info": {
      "template": "Backup will be taken on every {dayOrWeek} at {time}. Backup data will be kept for {retentionDays} days."
    },
    "week": {
      "Sunday": "Sunday",
      "Monday": "Monday",
      "Tuesday": "Tuesday",
      "Wednesday": "Wednesday",
      "Thursday": "Thursday",
      "Friday": "Friday",
      "Saturday": "Saturday",
      "day": "day"
    },
    "enable-backup": "Enable backup",
    "backup-now": "Backup now",
    "create-a-manual-backup": "Create a manual backup",
    "disabled": "Disabled",
    "enabled": "Enabled",
    "action-automatic-backup-for-database-props-database-name": "{0} automatic backup for database '{1}'.",
    "updated-backup-webhook-url-for-database-props-database-name": "Updated backup webhook URL for database '{0}'.",
    "last-sync-status": "Last sync status",
    "last-sync-status-long": "Last sync status {0} at {1}",
    "version-control-enabled": "Version control enabled",
    "restore-backup": "Restore backup '{0}' to a new database",
    "nullable": "Nullable",
    "restore": "Restore",
    "backup": {
      "enabled": "enabled",
      "disabled": "disabled"
    },
    "expression": "Expression",
    "position": "Position",
    "unique": "Unique",
    "visible": "Visible",
    "comment": "Comment",
    "engine": "Engine",
    "row-count-estimate": "Row count estimate",
    "data-size": "Data size",
    "index-size": "Index size",
    "column": "Column",
    "columns": "Columns",
    "indexes": "Indexes",
    "row-count-est": "Row count est.",
    "incorrect-project-warning": "SQL editor can only query databases in projects available to the user. You should first transfer this database into a project.",
    "go-to-transfer": "Go to transfer",
    "pitr": {
      "restore": "@:common.restore @:common.database",
      "no-available-backup": "No available backup",
      "point-in-time": "Point in time",
      "help-info": "Restore the database state to a point in time. {link}.",
      "minimum-supported-engine-and-version": "{engine} >= {min_version} required",
      "restore-to-point-in-time": "Restore to point in time",
      "no-earlier-than": "Restore point-in-time cannot be earlier than [{earliest}] (the earliest available backup).",
      "no-later-than-now": "Restore point-in-time cannot be later than now.",
      "will-overwrite-current-database": "Will overwrite current database",
      "restore-before-last-migration": "Restore to the point before last migration",
      "restore-before-last-migration-help-info": "@:{'database.pitr.restore-before-last-migration'}. {link}.",
      "restore-to": "Restore",
      "restore-to-new-db": " To new database",
      "restore-to-in-place": "In place"
    },
    "show-reserved-tables": "Show Bytebase reserved tables",
    "show-reserved-databases": "Show Bytebase reserved databases",
    "backup-setting": {
      "schedule": {
        "disabled": "Disabled",
        "weekly": "Every week",
        "daily": "Every day"
      },
      "form": {
        "schedule": "Schedule",
        "day-of-week": "Day of week",
        "time-of-day": "Time of day",
        "retention-period": "Retention period(days)"
      }
    },
    "backup-policy-violation": "Backup policy violation",
    "synced-at": "Synced at {time}",
    "not-found-last-successful-sync-was": "Not found, last successful sync was {time}",
    "view-unassigned-databases": "View unassigned databases",
    "unassigned-databases": "Unassigned databases",
    "restore-database": "Restore database",
    "selected-n-databases": "{n} database selected | {n} databases selected",
    "sync-schema": {
      "title": "Synchronize Schema",
      "select-project": "Step 1. Select project",
      "select-schema": "Step 2. Select schema",
      "select-database": "Step 3. Apply to database",
      "schema-diff": "The diff",
      "synchronize-statements": "The DDL statements",
      "synchronize-statements-description": "You can further edit the generated DDL statements.",
      "select-schema-and-target-database-tip": "Please select the schema and database first.",
      "no-difference-tip": "No diff found.",
      "more-version": "more...",
      "character-sets-diff-found": "There are differences between character sets.",
      "preview-issue": "Preview issue"
    },
    "sensitive": "Sensitive",
    "access-denied": "You don't have the permission to access this database."
  },
  "repository": {
    "branch-observe-file-change": "The branch where Bytebase observes the file change.",
    "branch-specify-tip": "Tips: You can use empty branch to receive changes from all branches.",
    "base-directory": "Base directory",
    "base-directory-description": "The root directory where Bytebase observes the file change. If empty, then it observes the entire repository.",
    "file-path-template": "File path template",
    "file-path-template-description": "Bytebase only observes the file path name matching the template pattern relative to the base directory.",
    "file-path-example-schema-migration": "File path example for schema migration type",
    "file-path-example-data-migration": "File path example for data migration type",
    "schema-path-template": "Schema path template",
    "schema-writeback-description": "When specified, after each migration, Bytebase will write the latest schema to the schema path relative to the base directory in the same branch as the original commit triggering the migration. Leave empty if you don't want Bytebase to do this.",
    "schema-writeback-protected-branch": "Make sure the changed branch is not protected or allow repository maintainer to push to that protected branch.",
    "if-specified": "If specified",
    "schema-path-example": "Schema path example",
    "sheet-path-template": "Sheet path template",
    "sheet-path-template-description": "Bytebase only observes files with pathnames matching the template pattern relative to the base directory. The matched files will be synchronized to the SQL Editor for usage there.",
    "sql-review-ci": "SQL Review CI",
    "sql-review-ci-enable": "Enable SQL Review CI",
    "sql-review-ci-enable-gitlab": "Enable SQL Review CI via GitLab CI",
    "sql-review-ci-enable-github": "Enable SQL Review CI via GitHub Action",
    "sql-review-ci-description": "Bytebase will create a {pr} to set up the SQL review CI in your repository. After the setup, in every {pr}, the SQL review policy will check against changed files matching the \"{pathTemplate}\".",
    "sql-review-ci-setup": "Setup SQL Review CI",
    "sql-review-ci-setup-failed": "Failed to setup SQL Review CI",
    "sql-review-ci-setup-pr": "Review the {pr}",
    "merge-request": "merge request",
    "pull-request": "pull request",
    "sql-review-ci-loading-modal": "We're preparing the {pr} to set up the SQL review CI. Once set up, you will be redirected to the {pr} page.",
    "sql-review-ci-setup-modal": "We have created a {pr} for your repository to set up the SQL review CI. Please review and merge the {pr}.",
    "sql-review-ci-remove": "Remove SQL Review CI",
    "sql-review-ci-remove-modal": "SQL Review CI is disabled. You can remove the {vcs} file from {repository}.",
    "sql-review-ci-restore-modal": "Once you restore to the UI workflow, the SQL review CI will be disabled for your repository. You can remove the {vcs} file from {repository}.",
    "git-provider": "Git provider",
    "version-control-status": "@.capitalize:common.version-control is {status}",
    "version-control-description-file-path": "Database migration scripts are stored in {fullPath}. To make schema changes, a developer would create a migration script matching file path pattern {fullPathTemplate}.",
    "version-control-description-branch": "After the script is review approved and merged into the {branch} branch, Bytebase will automatically kicks off the pipeline to apply the new schema change.",
    "version-control-description-description-schema-path": "After applying the schema change, Bytebase will also write the latest schema to the specified schema path location {schemaPathTemplate}.",
    "restore-to-ui-workflow": "Restore to UI workflow",
    "restore-ui-workflow-description": "When using the UI workflow, the developer submits a SQL review ticket directly from Bytebase console and waits for the assigned DBA or peer developer to review. Bytebase applies the SQL change after review approved.",
    "restore-ui-workflow-success": "Successfully restored to UI workflow",
    "update-version-control-config-success": "Successfully updated @:common.version-control config",
    "setup-wizard-guide": "If you encounter errors during the process, please refer to our {guide}",
    "add-git-provider": "Add Git provider",
    "choose-git-provider": "Choose Git provider",
    "select-repository": "Select repository",
    "configure-deploy": "Configure deploy",
    "choose-git-provider-description": "Choose the Git provider where your database schema scripts (.sql) are hosted. When you push the changed script to the Git repository, Bytebase will automatically create a pipeline to apply the schema change to the database.",
    "choose-git-provider-visit-workspace": "Visit {workspace} setting to add more Git providers.",
    "choose-git-provider-contact-workspace-owner": "Contact your Bytebase owner if you want other Git providers to appear here. Bytebase currently supports self-host GitLab EE/CE, and plan to add GitLab.com, and GitHub Enterprise later.",
    "select-repository-attention-gitlab": "Bytebase only lists GitLab projects granting you at least the 'Maintainer' role, which allows to configure the project webhook to observe the code push event.",
    "select-repository-attention-github": "Bytebase only lists GitHub repositories you have admin permissions, which allows to configure the repository webhook to observe the code push event.",
    "select-repository-search": "Search repository",
    "linked": "Linked repositories",
    "role-provider": "Project role provider",
    "role-provider-description": "Bytebase will sync members from the selected provider and replace the existing members in the project."
  },
  "workflow": {
    "current-workflow": "Current workflow",
    "ui-workflow": "UI workflow",
    "ui-workflow-description": "Classic SQL Review workflow where the developer submits a SQL review ticket directly from Bytebase and waits for the assigned DBA or peer developer to review. Bytebase applies the SQL schema change after review approved.",
    "gitops-workflow": "GitOps workflow",
    "gitops-workflow-description": "Database migration scripts are stored in a git repository. To make schema changes, a developer would create a migration script and submit for review in the corresponding VCS such as GitLab. After the script is approved and merged into the configured branch, Bytebase will automatically kicks off the task to apply the new schema change.",
    "configure-gitops": "Configure GitOps",
    "configure-gitops-success": "Successfully enabled GitOps workflow for {project}",
    "change-gitops-success": "Successfully changed repository for {project}"
  },
  "anomaly": {
    "attention-title": "Anomaly detection",
    "attention-desc": "Bytebase periodically scans the managed resources and list the detected anomalies here. The list is refreshed roughly every 10 minutes.",
    "table-search-placeholder": "Search {type} or environment",
    "table-placeholder": "Hooray, no {type} anomaly detected!",
    "tooltip": "{env} has {criticalCount} CRITICAL, {highCount} HIGH and {mediumCount} MEDIUM anomalies",
    "types": {
      "connection-failure": "Connection failure",
      "missing-migration-schema": "Missing migration schema",
      "backup-enforcement-violation": "Backup enforcement violation",
      "missing-backup": "Missing backup",
      "schema-drift": "Schema drift"
    },
    "action": {
      "check-instance": "Check instance",
      "view-backup": "View backup",
      "configure-backup": "Configure backup",
      "view-diff": "View diff"
    },
    "last-seen": "Last seen",
    "first-seen": "First seen"
  },
  "project": {
    "dashboard": {
      "modal": {
        "title": "How to setup '@:{'common.project'}' ?",
        "content": "Bytebase project is similar to the project concept in other common dev tools.\n\nA project has its own members, and every issue and database always belongs to a single project.\n\nA project can also be configured to link to a repository to enable version control workflow.",
        "cancel": "Dismiss",
        "confirm": "Do not show again"
      },
      "search-bar-placeholder": "Search project name"
    },
    "table": {
      "key": "@:common.key",
      "name": "@:common.name",
      "created-at": "Created At"
    },
    "create-modal": {
      "project-name": "@:common.project @:common.name",
      "key": "@:common.key",
      "key-hint": "(Uppercase letters identifying your project)",
      "cancel": "@:common.cancel",
      "confirm": "@:common.create",
      "success-prompt": "Successfully created project {name}."
    },
    "overview": {
      "view-all": "View all",
      "view-all-closed": "View all closed",
      "recent-activity": "Recent @.lower:{'common.activities'}",
      "in-progress": "In progress",
      "recently-closed": "Recently Closed",
      "info-slot-content": "Bytebase periodically syncs the instance schema. Newly synced databases are first placed here. User should transfer them to the proper application project.",
      "no-db-prompt": "No database belongs to this project. You can add database by clicking {newDb} or {transferInDb} from the top action bar."
    },
    "webhook": {
      "success-created-prompt": "Successfully created webhook {name}.",
      "success-updated-prompt": "Successfully updated webhook {name}.",
      "success-deleted-prompt": "Successfully deleted webhook {name}.",
      "success-tested-prompt": "Test webhook event OK.",
      "fail-tested-title": "Test webhook event failed.",
      "add-a-webhook": "Add a webhook",
      "create-webhook": "Create webhook",
      "last-updated-by": "Last updated by",
      "destination": "Destination",
      "webhook-url": "Webhook url",
      "triggering-activity": "Triggering activities",
      "test-webhook": "Test Webhook",
      "no-webhook": {
        "title": "No webhook configured for this project.",
        "content": "Configure webhooks to let Bytebase post notification to the external systems on various events."
      },
      "creation": {
        "title": "Create webhook",
        "desc": "Create the corresponding webhook for the {destination} channel receiving the message.",
        "how-to-protect": "If you want to use keyword list to protect the webhook, you can add \"Bytebase\" to that list.",
        "view-doc": "View {destination}'s doc"
      },
      "deletion": {
        "btn-text": "Delete this webhook"
      },
      "activity-item": {
        "issue-creation": {
          "title": "Issue creation",
          "label": "When new issue has been created"
        },
        "issue-status-change": {
          "title": "Issue status change",
          "label": "When issue status has changed"
        },
        "issue-task-status-change": {
          "title": "Issue task status change",
          "label": "When issue's enclosing task status has changed"
        },
        "issue-info-change": {
          "title": "Issue info change",
          "label": "When issue info (e.g. assignee, title, description) has changed"
        },
        "issue-comment-creation": {
          "title": "Issue comment creation",
          "label": "When new issue comment has been created"
        }
      }
    },
    "settings": {
      "success-updated": "Project settings updated successfully.",
      "success-member-added-prompt": "Successfully added {name} to the project.",
      "success-member-deleted-prompt": "Successfully revoked {name} access from the project.",
      "member-placeholder": "Select user",
      "manage-member": "Manage members",
      "add-member": "Add member",
      "owner": "@.upper:common.role.owner",
      "developer": "@.upper:common.role.developer",
      "archive": {
        "title": "Archive project",
        "description": "Archived project will not be shown on the normal interface. You can still restore later from the Archive page.",
        "btn-text": "Archive this @.lower:{'common.project'}"
      },
      "restore": {
        "title": "Restore project",
        "btn-text": "Restore this @.lower:{'common.project'}"
      },
      "sync-from-vcs": "Sync from VCS",
      "success-member-sync-prompt": "Sync member from VCS Succeeded",
      "view-vcs-member": "View members in VCS",
      "switch-role-provider-to-bytebase-success-prompt": "Successfully turning off VCS project membership sync.",
      "schema-change-type": "Schema change type",
      "select-schema-change-type-ddl": "Migration-based",
      "select-schema-change-type-sdl": "State-based",
      "schema-path-template-sdl-description": "The schema file that contains the desired state of the database schema. Bytebase creates new migrations for any discrepancy found between the desired state and the actual database schema."
    },
    "mode": {
      "standard": "Standard",
      "tenant": "Tenant"
    },
    "db-name-template": "Tenant Database Name Template",
    "select": "Select project",
    "lgtm-check": {
      "self": "LGTM check",
      "disabled": "Skip LGTM check",
      "project-member": "Require LGTM from project members",
      "project-owner": "Require LGTM from project owner"
    },
    "successfully-updated-db-name-template": "Successfully updated database name template."
  },
  "inbox": {
    "mark-all-as-read": "Mark all as read",
    "view-older": "View older"
  },
  "version-control": {
    "setting": {
      "description": "Bytebase supports GitOps workflow where database migration scripts are stored in the version control system (VCS), and newly created migration scripts will automatically trigger the corresponding database change. Bytebase owners manage all the applicable VCSs here, so that project owners can link the projects with their Git repositories from these VCSs.",
      "description-highlight": "Once configured, Bytebase will enable third party login via your configured VCSs under paid subscription.",
      "add-git-provider": {
        "self": "Add a Git provider",
        "description": "Before any project can enable GitOps workflow, Bytebase first needs to integrate with the corresponding version control system (VCS) by registering as an OAuth application in that VCS. Below are the steps to configure this, you can also follow our {guide}.",
        "gitlab-self-host": "GitLab self-host",
        "gitlab-self-host-admin-requirement": "You need to be an Admin of your chosen GitLab instance to configure this. Otherwise, you need to ask your GitLab instance Admin to register Bytebase as a GitLab instance-wide OAuth application, then provide you that Application ID and Secret to fill at the 'OAuth application info' step.",
        "github-com-admin-requirement": "You need to be an admin of your chosen GitHub organization to configure this. Otherwise, you need to ask your GitHub organization admin to register Bytebase as a GitHub organization-wide OAuth application, then provide you that Application ID and Secret to fill at the 'OAuth application info' step.",
        "oauth-info-correct": "Verified OAuth info is correct",
        "check-oauth-info-match": "Please make sure Secret matches the one from your GitLab instance Application.",
        "add-success": "Successfully added Git provider {vcs}",
        "choose": "Choose Git provider",
        "gitlab-self-host-ce-ee": "Self-host GitLab Enterprise Edition (EE) or Community Edition (CE)",
        "basic-info": {
          "self": "Basic info",
          "gitlab-instance-url": "GitLab instance URL",
          "gitlab-instance-url-label": "The VCS instance URL. Make sure this instance and Bytebase are network reachable from each other.",
          "github-instance-url": "GitHub instance URL",
          "instance-url-error": "Instance URL must begin with https:// or http://",
          "display-name": "Display name",
          "display-name-label": "An optional display name to help identifying among different configs using the same Git provider."
        },
        "oauth-info": {
          "self": "OAuth application info",
          "gitlab-register-oauth-application": "Register Bytebase as a GitLab instance-wide OAuth application.",
          "gitlab-login-as-admin": "Login as an Admin user to the GitLab instance. The account must be an Admin of the entire GitLab instance (it has a wrench icon on the top bar).",
          "gitlab-visit-admin-page": "Go to the Admin page by clicking the wrench icon, then navigate to \"Applications\" section and click \"New application\" button.",
          "gitlab-paste-oauth-info": "Paste the Application ID and Secret from that just created application into fields below.",
          "github-register-oauth-application": "Register Bytebase as a GitHub organization-wide OAuth application.",
          "github-login-as-admin": "Login as an organization admin user to the GitHub.com. The account must be an organization admin of the GitHub organization (able to access the organization Settings page).",
          "github-visit-admin-page": "Go to the Settings page, then navigate to \"Developer settings > OAuth Apps\" section and click \"Register an application\" button.",
          "github-paste-oauth-info": "Paste the Client ID and Client secret from that just created application into fields below.",
          "copy-homepage-url": "Homepage URL copied to clipboard. Paste to the corresponding field on the OAuth application form.",
          "copy-redirect-uri": "Redirect URI copied to clipboard. Paste to the corresponding field on the OAuth application form.",
          "direct-link": "Direct link",
          "create-oauth-app": "Create your Bytebase OAuth application with the following info.",
          "gitlab-application-id-error": "Application ID must be a 64-character alphanumeric string",
          "gitlab-secret-error": "Secret must be a 64-character alphanumeric string",
          "github-application-id-error": "Application ID must be a 20-character alphanumeric string",
          "github-secret-error": "Secret must be a 40-character alphanumeric string"
        },
        "confirm": {
          "confirm-info": "Confirm the info",
          "confirm-description": "After creation, this Git provider can be chosen under the project dashboard \"Version Control\" tab by the project owner."
        }
      },
      "git-provider": {
        "gitlab-application-id-label": "Application ID for the registered GitLab instance-wide OAuth application.",
        "view-in-gitlab": "View in GitLab",
        "secret-label-gitlab": "Secret for the registered GitLab instance-wide OAuth application.",
        "github-application-id-label": "Client ID for the registered GitHub organization-wide OAuth application.",
        "secret-label-github": "Client secret for the registered GitHub organization-wide OAuth application.",
        "delete": "To delete this provider, unlink all repositories first."
      }
    }
  },
  "archive": {
    "archived": "Archived",
    "project-search-bar-placeholder": "Search @.lower:{'common.project'} name",
    "instance-search-bar-placeholder": "Search @.lower:{'common.instance'} name",
    "environment-search-bar-placeholder": "Search @.lower:{'common.environment'} name"
  },
  "deployment-config": {
    "stage-n": "Stage {n}",
    "add-selector": "Add selector",
    "update-success": "Successfully updated deployment config.",
    "this-is-example-deployment-config": "This is the deployment config example. You need to edit and save it.",
    "n-databases": "{n} database | {n} databases",
    "selectors": "Selectors",
    "add-stage": "Add stage",
    "confirm-to-revert": "Confirm to revert your editing?",
    "name-placeholder": "Stage name...",
    "error": {
      "at-least-one-stage": "At least 1 stage",
      "stage-name-required": "Stage name is required",
      "at-least-one-selector": "At least 1 selector in each stage",
      "env-in-selector-required": "\"Environment in\" is required in each stage",
      "env-selector-must-has-one-value": "\"Environment in\" must has exactly one value",
      "key-required": "Key is required",
      "values-required": "Values are required"
    },
    "project-has-no-deployment-config": "This project has no deployment config yet. Please {go} first.",
    "go-and-config": "Go and config",
    "wont-be-deployed-explanation": "These databases won't be deployed, since they hit none of the selectors.",
    "wont-be-deployed": "Won't be deployed",
    "pipeline-generated-from-deployment-config": "The deployment pipeline is generated according to the project's {deployment_config}.",
    "preview-deployment-pipeline": "Preview Deployment Pipeline",
    "select-database-group": "Select database group"
  },
  "data-source": {
    "role-type": "Role Type",
    "successfully-deleted-data-source-name": "Successfully deleted data source '{0}'.",
    "create-data-source": "Create data source",
    "data-source-list": "Data source list",
    "all-data-source": "All data source",
    "search-name": "Search name",
    "search-name-database": "Search name, database",
    "successfully-created-data-source-datasource-name": "Successfully created data source '{0}'.",
    "select-database-first": "Select database first",
    "select-data-source": "Select data source",
    "search-user": "Search user",
    "user-list": "User list",
    "revoke-access": "Are you sure to revoke '{0}' access from '{1}'?",
    "grant-data-source": "Grant data source",
    "grant-database": "Grant database",
    "requested-issue": "Requested issue",
    "successfully-revoked-member-principal-name-access-from-props-datasource-name": "Successfully revoked '{0}' access from '{1}'.",
    "your-issue-id-e-g-1234": "Your issue id (e.g. 1234)",
    "member-principal-name-already-exists": "{0} already exists",
    "successfully-granted-datasource-name-to-addedmember-principal-name": "Successfully granted '{0}' to '{1}'.",
    "we-also-linked-the-granted-database-to-the-requested-issue-linkedissue-name": "We also linked the granted database to the requested issue '{0}'.",
    "new-data-source": "New data source",
    "connection-name-string-copied-to-clipboard": "{0} string copied to clipboard.",
    "jdbc-cant-connect-to-socket-database-value-instance-host": "JDBC can't connect to socket {0} ",
    "ssl-type": {
      "ca": "@:{'data-source.ssl.ca-cert'}",
      "ca-and-key-and-cert": "@:{'data-source.ssl.ca-cert'} + @:{'data-source.ssl.client-key'} + @:{'data-source.ssl.client-cert'}",
      "none": "None"
    },
    "ssl": {
      "ca-cert": "CA Certificate",
      "client-key": "Client Key",
      "client-cert": "Client Certificate"
    },
    "ssl-connection": "SSL Connection",
    "read-replica-host": "Read-replica Host",
    "read-replica-port": "Read-replica Port",
    "delete-read-only-data-source": "Delete read-only data source"
  },
  "setting": {
    "project": {
      "description": "This is the Admin project panel listing all projects in Bytebase."
    },
    "label": {
      "key": "Key",
      "values": "Values",
      "value-placeholder": "Label value..."
    }
  },
  "sql-editor": {
    "self": "SQL Editor",
    "select-connection": "Please select connections",
    "search-databases": "Search Databases",
    "search-results": "Search Results",
    "loading-databases": "Loading Databases...",
    "close-pane": "Close Pane",
    "loading-data": "Loading Data...",
    "table-empty-placeholder": "Click Run to execute the query.",
    "no-rows-found": "No rows found",
    "download-as-csv": "Download as CSV",
    "download-as-json": "Download as JSON",
    "only-select-allowed": "Only {select} statements are allowed to execute.",
    "want-to-action": "If you want to {want}, click the {action} button and submit an issue.",
    "table-schema-placeholder": "Select a table to see its schema",
    "notify-empty-statement": "Please input your SQL statements in the editor",
    "notify-multiple-statements": "Multiple SQL statements detected. SQL Editor only executes the first statement. You can select another statement and execute it individually.",
    "goto-alter-schema-hint": "Please select a database connection from the top of the editor",
    "notify-invalid-sql-statement": "Invalid SQL statement.",
    "can-not-execute-query": "Cannot execute query when loading data.",
    "rows": "row | rows",
    "no-history-found": "No history found",
    "no-sheet-found": "No sheet found",
    "search-history": "Search History",
    "search-sheets": "Search Sheets",
    "hint-tips": {
      "confirm-to-delete-this-history": "Confirm to delete this history?",
      "confirm-to-close-unsaved-sheet": {
        "title": "Close the unsaved sheet?",
        "content": "Close the sheet and lose any unsaved data?"
      }
    },
    "please-input-the-tab-label": "Please input the tab label!",
    "copy-code": "Copy code",
    "notify": {
      "copy-code-succeed": "Copy code succeed",
      "copy-share-link": "The share link was copied to Clipboard.",
      "sheet-is-read-only": "The shared sheet is read-only."
    },
    "view-all-tabs": "View all Tabs",
    "sheet": "Sheet",
    "sheets": "Sheets",
    "connection-holder": "Click nodes on the left panel to get started",
    "link-access": "Link access",
    "private": "Private",
    "private-desc": "Only you can access this sheet",
    "project-desc": "Both sheet OWNER and project OWNER can read/write, and project DEVELOPER can read",
    "public": "Public",
    "public-desc": "Sheet OWNER can read/write, and all others can read",
    "create-read-only-data-source": "Go to create",
    "go-back": "Go Back",
    "save-sheet": "Save Sheet",
    "save-sheet-input-placeholder": "Please input a sheet name",
    "untitled-sheet": "Untitled Sheet",
    "format": "Format",
    "sql-review-result": "SQL review result",
    "alter-table": "Alter table",
    "visualize-explain": "Visualize Explain",
    "sql-execute-in-protected-environment": "The SQL statement below will be executed in a protected environment.",
    "rows-upper-limit": "reached the limit of query results",
    "tab-mode": {
      "readonly": "Read-only",
      "admin": "Admin"
    },
    "close-sheet": "Close sheet",
    "connect": "Connect",
    "connect-in-admin-mode": "Connect in admin mode",
    "admin-mode": {
      "self": "Admin mode"
    }
  },
  "schema-editor": {
    "self": "Schema Editor",
    "use-tips": "Click a database/table to start.",
    "preview-issue": "Preview issue",
    "sync-sql-from-schema-editor": "Sync SQL from Schema Editor",
    "raw-sql": "Raw SQL",
    "actions": {
      "create-table": "New table",
      "rename": "Rename",
      "drop-table": "Drop table",
      "restore": "Restore",
      "add-column": "Add column",
      "drop-column": "Drop column",
      "sql-preview": "SQL Preview",
      "reset": "Reset",
      "save": "Save"
    },
    "database": {
      "name": "Name",
      "row-count": "Row count",
      "data-size": "Data size",
      "engine": "Engine",
      "collation": "Collation",
      "comment": "Comment"
    },
    "table-list": "Table List",
    "table": {
      "name": "Table Name"
    },
    "column-list": "Column List",
    "column": {
      "name": "Name",
      "type": "Type",
      "default": "Default",
      "comment": "Comment",
      "not-null": "Not Null"
    },
    "nothing-changed": "Nothing changed",
    "message": {
      "invalid-table-name": "Invalid table name",
      "duplicated-table-name": "Duplicated table name",
      "invalid-column-name": "Invalid column name",
      "duplicated-column-name": "Duplicated column name",
      "invalid-column-type": "Invalid column type"
    },
    "confirm-to-close": {
      "title": "Confirm to close",
      "description": "Are you sure you want to close the panel? Your changes will be lost."
    },
    "tenant-mode-tips": "Changes will be applied to all selected tenant databases after clicking \"Preview issue\"."
  },
  "label": {
    "empty-label-value": "<Empty Value>",
    "no-label": "No labels",
    "error": {
      "key-necessary": "Key is required",
      "value-necessary": "Value is required",
      "key-duplicated": "Duplicated keys",
      "value-duplicated": "Duplicated values",
      "max-length-exceeded": "Length cannot exceed {len} characters",
      "max-label-count-exceeded": "Cannot exceed {count} labels",
      "cannot-edit-reserved-label": "Cannot edit reserved label \"{key}\""
    },
    "placeholder": {
      "select-key": "Select key...",
      "select-value": "Select value...",
      "select-values": "Select values..."
    },
    "setting": {
      "description": "A label is a key-value pair that helps you identify the tenant for a database. {link}."
    },
    "db-name-template-tips": "If your tenant databases follow a naming template, you can specify it here. Otherwise, please uncheck the box. {link}.",
    "confirm-change": "Are you sure to change '{label}' ?",
    "parsed-from-template": "Parsed from {name} by template {template}.",
    "cannot-transfer-template-not-match": "Database '{name}' cannot be transferred to this project. Since its name doesn't match the template {template}."
  },
  "oauth": {
    "unknown-event": "Unexpected event type, OAuth failed."
  },
  "subscription": {
    "description": "You can upload your Bytebase license to unlock team/enterprise features.",
    "upload-license": "Upload license",
    "upgrade-trial-button": "Upgrade trial",
    "start-n-days-trial": "Start {days} days trial",
    "successfully-start-trial": "Successfully start free trial for {days} days",
    "successfully-upgrade-trial": "Successfully upgrade free trial to {plan}",
    "require-subscription": "This feature requires {requiredPlan}, please purchase Bytebase license to unlock this feature.",
    "required-plan-with-trial": "This feature requires {requiredPlan}, but {startTrial}.",
    "trial-for-plan": "You can start a free trial for {plan} with {days} days - no credit card required",
    "trial-for-days": "You can start a free trial for {days} days - no credit card required",
    "upgrade-trial": "You can upgrade your free trial to this plan",
    "update": {
      "success": {
        "title": "Successfully updated license",
        "description": "Premium features in subscription plan unlocked."
      },
      "failure": {
        "title": "Failed to update license",
        "description": "Please check if your license is valid."
      }
    },
    "features": {
      "bb-feature-task-schedule-time": {
        "title": "Set task schedule time",
        "desc": "Set task schedule time allows you to set a specific time to run your tasks."
      },
      "bb-feature-instance-count": {
        "title": "Instance count limit",
        "desc": "You have reached the maximum instance count limit. Please upgrade to get more instance quota.",
        "remaining": "Your total instance quota is {total}, only have {count} instance remained.",
        "runoutof": "Your have run out of your {total} instance quota.",
        "upgrade": "@:{'subscription.upgrade'} to get more instance quota."
      },
      "bb-feature-multi-tenancy": {
        "title": "Multi-tenancy",
        "desc": "Intelligent database management for tenants using identical schemas."
      },
      "bb-feature-approval-policy": {
        "title": "Approval policy",
        "desc": "Approval policy controls whether the schema change task requires manual approval."
      },
      "bb-feature-backup-policy": {
        "title": "Backup policy",
        "desc": "Backup policy will auto-backup your database based on the schedule."
      },
      "bb-feature-environment-tier-policy": {
        "title": "Environment tier",
        "desc": "Mark environment as protected."
      },
      "bb-feature-sensitive-data": {
        "title": "Sensitive data",
        "desc": "Mark table columns as sensitive data and the query result of them will be displayed as \"******\"."
      },
      "bb-feature-access-control": {
        "title": "Access control",
        "desc": "Change query permission for databases in the protected environments."
      },
      "bb-feature-lgtm": {
        "title": "LGTM check",
        "desc": "Check if the issue has an \"LGTM\" comment."
      },
      "bb-feature-im-approval": {
        "title": "IM Approval",
        "desc": "Approval issue with IM integration."
      },
      "bb-feature-sql-review": {
        "title": "SQL review policy",
        "desc": "Customize the SQL review policy for different environments, can only use limited rules in the free plan."
      },
      "bb-feature-vcs-sql-review": {
        "title": "SQL Review in GitOps workflow",
        "desc": "Add the SQL Review CI to your VCS repository pipeline. SQL Review will be triggered in the pull request for changed SQL files."
      },
      "bb-feature-rbac": {
        "title": "Role management",
        "desc": "Role management can assign a particular role (e.g. DBA) to a member."
      },
      "bb-feature-schema-drift": {
        "title": "Schema drift",
        "desc": "@:{'subscription.upgrade'} to unlock schema drift auto-detection"
      },
      "bb-feature-3rd-party-auth": {
        "title": "3rd party authentication & authorization",
        "desc": "Bytebase supports 3rd-party authentication & authorization based on your VCS configuration.",
        "login": "@:{'subscription.upgrade'} to unlock this feature"
      },
      "bb-feature-branding": {
        "title": "Branding",
        "desc": "Customize the logo."
      },
      "bb-feature-online-migration": {
        "title": "Online migration",
        "desc": "Based on gh-ost. For large tables, it can reduce the table lock duration from hours to seconds."
      },
      "bb-feature-disaster-recovery-pitr": {
        "title": "Point-in-Time-Recovery (PITR)",
        "desc": "Restore the database state to a point in time."
      },
      "bb-feature-sync-schema-all-versions": {
        "title": "Synchronize schema all versions",
        "desc": "Select any arbitrary migration version from the base database and synchronize it to the target database."
      },
      "bb-feature-read-replica-connection": {
        "title": "Read replica connection",
        "desc": "Connect to a read replica for the read-only data source."
      }
    }
  },
  "sheet": {
    "self": "Sheets",
    "my-sheets": "My Sheets",
    "shared-with-me": "Shared with me",
    "starred": "Starred",
    "actions": {
      "sync-from-vcs": "Sync from VCS"
    },
    "hint-tips": {
      "confirm-to-sync-sheet": "Confirm to sync sheets?",
      "confirm-to-delete-this-sheet": "Confirm to delete this sheet?",
      "confirm-to-duplicate-sheet": "Confirm to duplicate this sheet?"
    }
  },
  "engine": {
    "mysql": "MySQL",
    "common": "Common"
  },
  "sql-review": {
    "title": "SQL Review",
    "description": "SQL review policy can define different set of SQL lint rules for the respective environments. It helps teams to adopt SQL best practice and enforce schema consistency across different databases. Whenever you attempt a DDL/DML change or use SQL Editor to query data, the query will be checked against the configured SQL review policy.",
    "disabled": "Disabled",
    "no-policy-set": "No SQL review policy",
    "create-policy": "Create policy",
    "duplicate-policy": "Duplicate SQL Review Policy",
    "configure-policy": "Configure policy",
    "search-rule-name": "Search rule name",
    "policy-removed": "Successfully removed the review policy.",
    "policy-created": "Successfully created the review policy.",
    "policy-updated": "Successfully updated the review policy.",
    "policy-duplicated": "Successfully duplicated the review policy.",
    "rules": "Rules",
    "filter": "Filter",
    "no-permission": "Only DBA or Owner has permission to create or update review policy.",
    "disable": "Disable",
    "enable": "Enable",
    "delete": "Delete SQL review policy",
    "input-then-press-enter": "Input the value then press enter to add",
    "not-available-for-free": "Rule is not available for {plan}",
    "create": {
      "breadcrumb": "Create SQL review policy",
      "basic-info": {
        "name": "Basic info",
        "display-name": "Display name",
        "display-name-placeholder": "The review policy name",
        "display-name-default": "SQL review policy",
        "display-name-label": "A display name to help identifying among different review policies.",
        "environments": "Environments",
        "environments-label": "Apply the review policy to the selected environments. One environment can only link one policy.",
        "environments-select": "Select environments",
        "no-linked-environments": "No linked environment",
        "no-available-environment": "No available environment",
        "no-available-environment-desc": "No available environment. One environment can only link one SQL review policy.",
        "choose-template": "Choose template"
      },
      "configure-rule": {
        "name": "Configure rule",
        "change-template": "Change the template",
        "confirm-override-title": "Confirm change",
        "confirm-override-description": "Your rules will be overridden"
      },
      "preview": {
        "name": "Preview"
      }
    }
  },
  "debug-log": {
    "title": "Debug Log",
    "no-logs": "No debug logs",
    "count-of-logs": "Fetched latest {count} log(s) from server.",
    "debug-log-detail": "Debug Log Details",
    "table": {
      "record-ts": "Time",
      "method": "Method",
      "request-path": "Request path",
      "role": "Role",
      "error": "Error",
      "stack-trace": "Stack trace",
      "empty": "<Empty>",
      "operation": {
        "operation": "Operation",
        "view-details": "View Details",
        "copy": "Copy",
        "copy-all": "Copy All",
        "copied": "Copied!",
        "export": "Export"
      }
    }
  },
  "audit-log": {
    "no-logs": "No audit logs",
    "audit-log-detail": "Audit Log Details",
    "table": {
      "created-ts": "Time",
      "created-time": "Created Time",
      "updated-time": "Updated Time",
      "creator": "Creator",
      "type": "Audit Type",
      "level": "Audit Level",
      "comment": "Comment",
      "payload": "Payload",
      "empty": "<Empty>",
      "view-details": "View Details"
    },
    "type": {
      "member-create": "Create Member",
      "member-role-update": "Update Member Role",
      "member-activate": "Activate Member",
      "member-deactivate": "Deactivate Member",
      "database-transfer": "Transfer Database"
    }
  },
  "onboarding-guide": {
    "create-database-guide": {
      "let-add-a-instance": "Let's add an instance",
      "go-to-project-list-page": "Go to project list page",
      "click-new-project": "Click \"New Project\" to create a project",
      "click-new-database": "Click \"New Database\" to create a database",
      "click-approve": "Click \"Approve\" to execute the change",
      "wait-issue-finished": "Waiting for the change to be finished...",
      "back-to-home": "Back to Home",
      "finished-dialog": {
        "you-have-done": "You have completed:",
        "add-an-instance": "Add an instance",
        "create-a-project": "Create a project",
        "create-an-issue": "Create an issue",
        "create-a-new-database": "Create a new database",
        "keep-going-with-bytebase": "Keep going with Bytebase!"
      }
    }
  }
}
