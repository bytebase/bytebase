// @generated by protoc-gen-es v2.5.2
// @generated from file v1/database_group_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../buf/validate/validate_pb";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_google_api_client } from "../google/api/client_pb";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb";
import { file_google_api_resource } from "../google/api/resource_pb";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import { file_google_type_expr } from "../google/type/expr_pb";
import { file_v1_annotation } from "./annotation_pb";

/**
 * Describes the file v1/database_group_service.proto.
 */
export const file_v1_database_group_service = /*@__PURE__*/
  fileDesc("Ch92MS9kYXRhYmFzZV9ncm91cF9zZXJ2aWNlLnByb3RvEgtieXRlYmFzZS52MSJ3ChlMaXN0RGF0YWJhc2VHcm91cHNSZXF1ZXN0EiwKBnBhcmVudBgBIAEoCUIc4EEC+kEWChRieXRlYmFzZS5jb20vUHJvamVjdBIsCgR2aWV3GAIgASgOMh4uYnl0ZWJhc2UudjEuRGF0YWJhc2VHcm91cFZpZXciUQoaTGlzdERhdGFiYXNlR3JvdXBzUmVzcG9uc2USMwoPZGF0YWJhc2VfZ3JvdXBzGAEgAygLMhouYnl0ZWJhc2UudjEuRGF0YWJhc2VHcm91cCJ5ChdHZXREYXRhYmFzZUdyb3VwUmVxdWVzdBIwCgRuYW1lGAEgASgJQiLgQQL6QRwKGmJ5dGViYXNlLmNvbS9EYXRhYmFzZUdyb3VwEiwKBHZpZXcYAiABKA4yHi5ieXRlYmFzZS52MS5EYXRhYmFzZUdyb3VwVmlldyK1AQoaQ3JlYXRlRGF0YWJhc2VHcm91cFJlcXVlc3QSLAoGcGFyZW50GAEgASgJQhzgQQL6QRYKFGJ5dGViYXNlLmNvbS9Qcm9qZWN0EjcKDmRhdGFiYXNlX2dyb3VwGAIgASgLMhouYnl0ZWJhc2UudjEuRGF0YWJhc2VHcm91cEID4EECEhkKEWRhdGFiYXNlX2dyb3VwX2lkGAMgASgJEhUKDXZhbGlkYXRlX29ubHkYBCABKAginQEKGlVwZGF0ZURhdGFiYXNlR3JvdXBSZXF1ZXN0EjcKDmRhdGFiYXNlX2dyb3VwGAEgASgLMhouYnl0ZWJhc2UudjEuRGF0YWJhc2VHcm91cEID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzaxIVCg1hbGxvd19taXNzaW5nGAMgASgIIk4KGkRlbGV0ZURhdGFiYXNlR3JvdXBSZXF1ZXN0EjAKBG5hbWUYASABKAlCIuBBAvpBHAoaYnl0ZWJhc2UuY29tL0RhdGFiYXNlR3JvdXAimAIKDURhdGFiYXNlR3JvdXASDAoEbmFtZRgBIAEoCRIcCgV0aXRsZRgCIAEoCUIN4EECukgHcgUQARjIARIoCg1kYXRhYmFzZV9leHByGAMgASgLMhEuZ29vZ2xlLnR5cGUuRXhwchJDChFtYXRjaGVkX2RhdGFiYXNlcxgEIAMoCzIjLmJ5dGViYXNlLnYxLkRhdGFiYXNlR3JvdXAuRGF0YWJhc2VCA+BBAxoYCghEYXRhYmFzZRIMCgRuYW1lGAEgASgJOlLqQU8KGmJ5dGViYXNlLmNvbS9EYXRhYmFzZUdyb3VwEjFwcm9qZWN0cy97cHJvamVjdH0vZGF0YWJhc2VHcm91cHMve2RhdGFiYXNlR3JvdXB9KnUKEURhdGFiYXNlR3JvdXBWaWV3EiMKH0RBVEFCQVNFX0dST1VQX1ZJRVdfVU5TUEVDSUZJRUQQABIdChlEQVRBQkFTRV9HUk9VUF9WSUVXX0JBU0lDEAESHAoYREFUQUJBU0VfR1JPVVBfVklFV19GVUxMEAIy8QcKFERhdGFiYXNlR3JvdXBTZXJ2aWNlErUBChJMaXN0RGF0YWJhc2VHcm91cHMSJi5ieXRlYmFzZS52MS5MaXN0RGF0YWJhc2VHcm91cHNSZXF1ZXN0GicuYnl0ZWJhc2UudjEuTGlzdERhdGFiYXNlR3JvdXBzUmVzcG9uc2UiTtpBBnBhcmVudIrqMA9iYi5wcm9qZWN0cy5nZXSQ6jABgtPkkwIoEiYvdjEve3BhcmVudD1wcm9qZWN0cy8qfS9kYXRhYmFzZUdyb3VwcxKiAQoQR2V0RGF0YWJhc2VHcm91cBIkLmJ5dGViYXNlLnYxLkdldERhdGFiYXNlR3JvdXBSZXF1ZXN0GhouYnl0ZWJhc2UudjEuRGF0YWJhc2VHcm91cCJM2kEEbmFtZYrqMA9iYi5wcm9qZWN0cy5nZXSQ6jABgtPkkwIoEiYvdjEve25hbWU9cHJvamVjdHMvKi9kYXRhYmFzZUdyb3Vwcy8qfRLPAQoTQ3JlYXRlRGF0YWJhc2VHcm91cBInLmJ5dGViYXNlLnYxLkNyZWF0ZURhdGFiYXNlR3JvdXBSZXF1ZXN0GhouYnl0ZWJhc2UudjEuRGF0YWJhc2VHcm91cCJz2kEUcGFyZW50LGRhdGFiYXNlR3JvdXCK6jASYmIucHJvamVjdHMudXBkYXRlkOowApjqMAGC0+STAjg6DmRhdGFiYXNlX2dyb3VwIiYvdjEve3BhcmVudD1wcm9qZWN0cy8qfS9kYXRhYmFzZUdyb3VwcxL7AQoTVXBkYXRlRGF0YWJhc2VHcm91cBInLmJ5dGViYXNlLnYxLlVwZGF0ZURhdGFiYXNlR3JvdXBSZXF1ZXN0GhouYnl0ZWJhc2UudjEuRGF0YWJhc2VHcm91cCKeAdpBGmRhdGFiYXNlX2dyb3VwLHVwZGF0ZV9tYXNriuowEmJiLnByb2plY3RzLnVwZGF0ZZDqMAGY6jABouowEmJiLnByb2plY3RzLnVwZGF0ZYLT5JMCRzoOZGF0YWJhc2VfZ3JvdXAyNS92MS97ZGF0YWJhc2VfZ3JvdXAubmFtZT1wcm9qZWN0cy8qL2RhdGFiYXNlR3JvdXBzLyp9EqsBChNEZWxldGVEYXRhYmFzZUdyb3VwEicuYnl0ZWJhc2UudjEuRGVsZXRlRGF0YWJhc2VHcm91cFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiU9pBBG5hbWWK6jASYmIucHJvamVjdHMudXBkYXRlkOowAZjqMAGC0+STAigqJi92MS97bmFtZT1wcm9qZWN0cy8qL2RhdGFiYXNlR3JvdXBzLyp9Qq8BCg9jb20uYnl0ZWJhc2UudjFCGURhdGFiYXNlR3JvdXBTZXJ2aWNlUHJvdG9QAVo0Z2l0aHViLmNvbS9ieXRlYmFzZS9ieXRlYmFzZS9iYWNrZW5kL2dlbmVyYXRlZC1nby92MaICA0JYWKoCC0J5dGViYXNlLlYxygILQnl0ZWJhc2VcVjHiAhdCeXRlYmFzZVxWMVxHUEJNZXRhZGF0YeoCDEJ5dGViYXNlOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_type_expr, file_v1_annotation]);

/**
 * Describes the message bytebase.v1.ListDatabaseGroupsRequest.
 * Use `create(ListDatabaseGroupsRequestSchema)` to create a new message.
 */
export const ListDatabaseGroupsRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_database_group_service, 0);

/**
 * Describes the message bytebase.v1.ListDatabaseGroupsResponse.
 * Use `create(ListDatabaseGroupsResponseSchema)` to create a new message.
 */
export const ListDatabaseGroupsResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_database_group_service, 1);

/**
 * Describes the message bytebase.v1.GetDatabaseGroupRequest.
 * Use `create(GetDatabaseGroupRequestSchema)` to create a new message.
 */
export const GetDatabaseGroupRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_database_group_service, 2);

/**
 * Describes the message bytebase.v1.CreateDatabaseGroupRequest.
 * Use `create(CreateDatabaseGroupRequestSchema)` to create a new message.
 */
export const CreateDatabaseGroupRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_database_group_service, 3);

/**
 * Describes the message bytebase.v1.UpdateDatabaseGroupRequest.
 * Use `create(UpdateDatabaseGroupRequestSchema)` to create a new message.
 */
export const UpdateDatabaseGroupRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_database_group_service, 4);

/**
 * Describes the message bytebase.v1.DeleteDatabaseGroupRequest.
 * Use `create(DeleteDatabaseGroupRequestSchema)` to create a new message.
 */
export const DeleteDatabaseGroupRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_database_group_service, 5);

/**
 * Describes the message bytebase.v1.DatabaseGroup.
 * Use `create(DatabaseGroupSchema)` to create a new message.
 */
export const DatabaseGroupSchema = /*@__PURE__*/
  messageDesc(file_v1_database_group_service, 6);

/**
 * Describes the message bytebase.v1.DatabaseGroup.Database.
 * Use `create(DatabaseGroup_DatabaseSchema)` to create a new message.
 */
export const DatabaseGroup_DatabaseSchema = /*@__PURE__*/
  messageDesc(file_v1_database_group_service, 6, 0);

/**
 * Describes the enum bytebase.v1.DatabaseGroupView.
 */
export const DatabaseGroupViewSchema = /*@__PURE__*/
  enumDesc(file_v1_database_group_service, 0);

/**
 * View options for database group responses.
 *
 * @generated from enum bytebase.v1.DatabaseGroupView
 */
export const DatabaseGroupView = /*@__PURE__*/
  tsEnum(DatabaseGroupViewSchema);

/**
 * DatabaseGroupService manages database groups for organizing databases by criteria.
 *
 * @generated from service bytebase.v1.DatabaseGroupService
 */
export const DatabaseGroupService = /*@__PURE__*/
  serviceDesc(file_v1_database_group_service, 0);

