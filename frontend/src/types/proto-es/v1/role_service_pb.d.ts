// @generated by protoc-gen-es v2.5.2
// @generated from file v1/role_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file v1/role_service.proto.
 */
export declare const file_v1_role_service: GenFile;

/**
 * @generated from message bytebase.v1.ListRolesRequest
 */
export declare type ListRolesRequest = Message<"bytebase.v1.ListRolesRequest"> & {
  /**
   * Not used.
   * The maximum number of roles to return. The service may return fewer than
   * this value.
   * If unspecified, at most 10 reviews will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Not used.
   * A page token, received from a previous `ListRoles` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListRoles` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message bytebase.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export declare const ListRolesRequestSchema: GenMessage<ListRolesRequest>;

/**
 * @generated from message bytebase.v1.ListRolesResponse
 */
export declare type ListRolesResponse = Message<"bytebase.v1.ListRolesResponse"> & {
  /**
   * @generated from field: repeated bytebase.v1.Role roles = 1;
   */
  roles: Role[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message bytebase.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export declare const ListRolesResponseSchema: GenMessage<ListRolesResponse>;

/**
 * @generated from message bytebase.v1.CreateRoleRequest
 */
export declare type CreateRoleRequest = Message<"bytebase.v1.CreateRoleRequest"> & {
  /**
   * @generated from field: bytebase.v1.Role role = 1;
   */
  role?: Role;

  /**
   * The ID to use for the role, which will become the final component
   * of the role's resource name.
   *
   * This value should be 4-63 characters, and valid characters
   * are /[a-z][A-Z][0-9]/.
   *
   * @generated from field: string role_id = 2;
   */
  roleId: string;
};

/**
 * Describes the message bytebase.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export declare const CreateRoleRequestSchema: GenMessage<CreateRoleRequest>;

/**
 * @generated from message bytebase.v1.GetRoleRequest
 */
export declare type GetRoleRequest = Message<"bytebase.v1.GetRoleRequest"> & {
  /**
   * The name of the role to retrieve.
   * Format: roles/{role}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message bytebase.v1.GetRoleRequest.
 * Use `create(GetRoleRequestSchema)` to create a new message.
 */
export declare const GetRoleRequestSchema: GenMessage<GetRoleRequest>;

/**
 * @generated from message bytebase.v1.UpdateRoleRequest
 */
export declare type UpdateRoleRequest = Message<"bytebase.v1.UpdateRoleRequest"> & {
  /**
   * @generated from field: bytebase.v1.Role role = 1;
   */
  role?: Role;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If set to true, and the role is not found, a new role will be created.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;
};

/**
 * Describes the message bytebase.v1.UpdateRoleRequest.
 * Use `create(UpdateRoleRequestSchema)` to create a new message.
 */
export declare const UpdateRoleRequestSchema: GenMessage<UpdateRoleRequest>;

/**
 * @generated from message bytebase.v1.DeleteRoleRequest
 */
export declare type DeleteRoleRequest = Message<"bytebase.v1.DeleteRoleRequest"> & {
  /**
   * Format: roles/{role}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message bytebase.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export declare const DeleteRoleRequestSchema: GenMessage<DeleteRoleRequest>;

/**
 * @generated from message bytebase.v1.Role
 */
export declare type Role = Message<"bytebase.v1.Role"> & {
  /**
   * Format: roles/{role}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: repeated string permissions = 4;
   */
  permissions: string[];

  /**
   * @generated from field: bytebase.v1.Role.Type type = 5;
   */
  type: Role_Type;
};

/**
 * Describes the message bytebase.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export declare const RoleSchema: GenMessage<Role>;

/**
 * @generated from enum bytebase.v1.Role.Type
 */
export enum Role_Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: BUILT_IN = 1;
   */
  BUILT_IN = 1,

  /**
   * @generated from enum value: CUSTOM = 2;
   */
  CUSTOM = 2,
}

/**
 * Describes the enum bytebase.v1.Role.Type.
 */
export declare const Role_TypeSchema: GenEnum<Role_Type>;

/**
 * @generated from service bytebase.v1.RoleService
 */
export declare const RoleService: GenService<{
  /**
   * @generated from rpc bytebase.v1.RoleService.ListRoles
   */
  listRoles: {
    methodKind: "unary";
    input: typeof ListRolesRequestSchema;
    output: typeof ListRolesResponseSchema;
  },
  /**
   * @generated from rpc bytebase.v1.RoleService.GetRole
   */
  getRole: {
    methodKind: "unary";
    input: typeof GetRoleRequestSchema;
    output: typeof RoleSchema;
  },
  /**
   * @generated from rpc bytebase.v1.RoleService.CreateRole
   */
  createRole: {
    methodKind: "unary";
    input: typeof CreateRoleRequestSchema;
    output: typeof RoleSchema;
  },
  /**
   * @generated from rpc bytebase.v1.RoleService.UpdateRole
   */
  updateRole: {
    methodKind: "unary";
    input: typeof UpdateRoleRequestSchema;
    output: typeof RoleSchema;
  },
  /**
   * @generated from rpc bytebase.v1.RoleService.DeleteRole
   */
  deleteRole: {
    methodKind: "unary";
    input: typeof DeleteRoleRequestSchema;
    output: typeof EmptySchema;
  },
}>;

