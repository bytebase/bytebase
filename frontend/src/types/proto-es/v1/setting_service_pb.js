// @generated by protoc-gen-es v2.5.2
// @generated from file v1/setting_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_google_api_client } from "../google/api/client_pb";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb";
import { file_google_api_resource } from "../google/api/resource_pb";
import { file_google_protobuf_duration, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import { file_google_type_expr } from "../google/type/expr_pb";
import { file_v1_annotation } from "./annotation_pb";
import { file_v1_common } from "./common_pb";
import { file_v1_database_catalog_service } from "./database_catalog_service_pb";
import { file_v1_database_service } from "./database_service_pb";
import { file_v1_issue_service } from "./issue_service_pb";

/**
 * Describes the file v1/setting_service.proto.
 */
export const file_v1_setting_service = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_type_expr, file_v1_annotation, file_v1_common, file_v1_database_catalog_service, file_v1_database_service, file_v1_issue_service]);

/**
 * Describes the message bytebase.v1.ListSettingsRequest.
 * Use `create(ListSettingsRequestSchema)` to create a new message.
 */
export const ListSettingsRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 0);

/**
 * Describes the message bytebase.v1.ListSettingsResponse.
 * Use `create(ListSettingsResponseSchema)` to create a new message.
 */
export const ListSettingsResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 1);

/**
 * Describes the message bytebase.v1.GetSettingRequest.
 * Use `create(GetSettingRequestSchema)` to create a new message.
 */
export const GetSettingRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 2);

/**
 * Describes the message bytebase.v1.GetSettingResponse.
 * Use `create(GetSettingResponseSchema)` to create a new message.
 */
export const GetSettingResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 3);

/**
 * Describes the message bytebase.v1.UpdateSettingRequest.
 * Use `create(UpdateSettingRequestSchema)` to create a new message.
 */
export const UpdateSettingRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 4);

/**
 * Describes the message bytebase.v1.Setting.
 * Use `create(SettingSchema)` to create a new message.
 */
export const SettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 5);

/**
 * Describes the enum bytebase.v1.Setting.SettingName.
 */
export const Setting_SettingNameSchema = /*@__PURE__*/
  enumDesc(file_v1_setting_service, 5, 0);

/**
 * @generated from enum bytebase.v1.Setting.SettingName
 */
export const Setting_SettingName = /*@__PURE__*/
  tsEnum(Setting_SettingNameSchema);

/**
 * Describes the message bytebase.v1.Value.
 * Use `create(ValueSchema)` to create a new message.
 */
export const ValueSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 6);

/**
 * Describes the message bytebase.v1.AppIMSetting.
 * Use `create(AppIMSettingSchema)` to create a new message.
 */
export const AppIMSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 7);

/**
 * Describes the message bytebase.v1.AppIMSetting.Slack.
 * Use `create(AppIMSetting_SlackSchema)` to create a new message.
 */
export const AppIMSetting_SlackSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 7, 0);

/**
 * Describes the message bytebase.v1.AppIMSetting.Feishu.
 * Use `create(AppIMSetting_FeishuSchema)` to create a new message.
 */
export const AppIMSetting_FeishuSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 7, 1);

/**
 * Describes the message bytebase.v1.AppIMSetting.Wecom.
 * Use `create(AppIMSetting_WecomSchema)` to create a new message.
 */
export const AppIMSetting_WecomSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 7, 2);

/**
 * Describes the message bytebase.v1.AppIMSetting.Lark.
 * Use `create(AppIMSetting_LarkSchema)` to create a new message.
 */
export const AppIMSetting_LarkSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 7, 3);

/**
 * Describes the message bytebase.v1.AppIMSetting.DingTalk.
 * Use `create(AppIMSetting_DingTalkSchema)` to create a new message.
 */
export const AppIMSetting_DingTalkSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 7, 4);

/**
 * Describes the message bytebase.v1.WorkspaceProfileSetting.
 * Use `create(WorkspaceProfileSettingSchema)` to create a new message.
 */
export const WorkspaceProfileSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 8);

/**
 * Describes the message bytebase.v1.Announcement.
 * Use `create(AnnouncementSchema)` to create a new message.
 */
export const AnnouncementSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 9);

/**
 * Describes the enum bytebase.v1.Announcement.AlertLevel.
 */
export const Announcement_AlertLevelSchema = /*@__PURE__*/
  enumDesc(file_v1_setting_service, 9, 0);

/**
 * We support three levels of AlertLevel: INFO, WARNING, and ERROR.
 *
 * @generated from enum bytebase.v1.Announcement.AlertLevel
 */
export const Announcement_AlertLevel = /*@__PURE__*/
  tsEnum(Announcement_AlertLevelSchema);

/**
 * Describes the message bytebase.v1.WorkspaceApprovalSetting.
 * Use `create(WorkspaceApprovalSettingSchema)` to create a new message.
 */
export const WorkspaceApprovalSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 10);

/**
 * Describes the message bytebase.v1.WorkspaceApprovalSetting.Rule.
 * Use `create(WorkspaceApprovalSetting_RuleSchema)` to create a new message.
 */
export const WorkspaceApprovalSetting_RuleSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 10, 0);

/**
 * Describes the message bytebase.v1.SchemaTemplateSetting.
 * Use `create(SchemaTemplateSettingSchema)` to create a new message.
 */
export const SchemaTemplateSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 11);

/**
 * Describes the message bytebase.v1.SchemaTemplateSetting.FieldTemplate.
 * Use `create(SchemaTemplateSetting_FieldTemplateSchema)` to create a new message.
 */
export const SchemaTemplateSetting_FieldTemplateSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 11, 0);

/**
 * Describes the message bytebase.v1.SchemaTemplateSetting.ColumnType.
 * Use `create(SchemaTemplateSetting_ColumnTypeSchema)` to create a new message.
 */
export const SchemaTemplateSetting_ColumnTypeSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 11, 1);

/**
 * Describes the message bytebase.v1.SchemaTemplateSetting.TableTemplate.
 * Use `create(SchemaTemplateSetting_TableTemplateSchema)` to create a new message.
 */
export const SchemaTemplateSetting_TableTemplateSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 11, 2);

/**
 * Describes the message bytebase.v1.DataClassificationSetting.
 * Use `create(DataClassificationSettingSchema)` to create a new message.
 */
export const DataClassificationSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 12);

/**
 * Describes the message bytebase.v1.DataClassificationSetting.DataClassificationConfig.
 * Use `create(DataClassificationSetting_DataClassificationConfigSchema)` to create a new message.
 */
export const DataClassificationSetting_DataClassificationConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 12, 0);

/**
 * Describes the message bytebase.v1.DataClassificationSetting.DataClassificationConfig.Level.
 * Use `create(DataClassificationSetting_DataClassificationConfig_LevelSchema)` to create a new message.
 */
export const DataClassificationSetting_DataClassificationConfig_LevelSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 12, 0, 0);

/**
 * Describes the message bytebase.v1.DataClassificationSetting.DataClassificationConfig.DataClassification.
 * Use `create(DataClassificationSetting_DataClassificationConfig_DataClassificationSchema)` to create a new message.
 */
export const DataClassificationSetting_DataClassificationConfig_DataClassificationSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 12, 0, 1);

/**
 * Describes the message bytebase.v1.SemanticTypeSetting.
 * Use `create(SemanticTypeSettingSchema)` to create a new message.
 */
export const SemanticTypeSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 13);

/**
 * Describes the message bytebase.v1.SemanticTypeSetting.SemanticType.
 * Use `create(SemanticTypeSetting_SemanticTypeSchema)` to create a new message.
 */
export const SemanticTypeSetting_SemanticTypeSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 13, 0);

/**
 * Describes the message bytebase.v1.Algorithm.
 * Use `create(AlgorithmSchema)` to create a new message.
 */
export const AlgorithmSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 14);

/**
 * Describes the message bytebase.v1.Algorithm.FullMask.
 * Use `create(Algorithm_FullMaskSchema)` to create a new message.
 */
export const Algorithm_FullMaskSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 14, 0);

/**
 * Describes the message bytebase.v1.Algorithm.RangeMask.
 * Use `create(Algorithm_RangeMaskSchema)` to create a new message.
 */
export const Algorithm_RangeMaskSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 14, 1);

/**
 * Describes the message bytebase.v1.Algorithm.RangeMask.Slice.
 * Use `create(Algorithm_RangeMask_SliceSchema)` to create a new message.
 */
export const Algorithm_RangeMask_SliceSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 14, 1, 0);

/**
 * Describes the message bytebase.v1.Algorithm.MD5Mask.
 * Use `create(Algorithm_MD5MaskSchema)` to create a new message.
 */
export const Algorithm_MD5MaskSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 14, 2);

/**
 * Describes the message bytebase.v1.Algorithm.InnerOuterMask.
 * Use `create(Algorithm_InnerOuterMaskSchema)` to create a new message.
 */
export const Algorithm_InnerOuterMaskSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 14, 3);

/**
 * Describes the enum bytebase.v1.Algorithm.InnerOuterMask.MaskType.
 */
export const Algorithm_InnerOuterMask_MaskTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_setting_service, 14, 3, 0);

/**
 * @generated from enum bytebase.v1.Algorithm.InnerOuterMask.MaskType
 */
export const Algorithm_InnerOuterMask_MaskType = /*@__PURE__*/
  tsEnum(Algorithm_InnerOuterMask_MaskTypeSchema);

/**
 * Describes the message bytebase.v1.SQLQueryRestrictionSetting.
 * Use `create(SQLQueryRestrictionSettingSchema)` to create a new message.
 */
export const SQLQueryRestrictionSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 15);

/**
 * Describes the message bytebase.v1.SCIMSetting.
 * Use `create(SCIMSettingSchema)` to create a new message.
 */
export const SCIMSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 16);

/**
 * Describes the message bytebase.v1.PasswordRestrictionSetting.
 * Use `create(PasswordRestrictionSettingSchema)` to create a new message.
 */
export const PasswordRestrictionSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 17);

/**
 * Describes the message bytebase.v1.AISetting.
 * Use `create(AISettingSchema)` to create a new message.
 */
export const AISettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 18);

/**
 * Describes the enum bytebase.v1.AISetting.Provider.
 */
export const AISetting_ProviderSchema = /*@__PURE__*/
  enumDesc(file_v1_setting_service, 18, 0);

/**
 * @generated from enum bytebase.v1.AISetting.Provider
 */
export const AISetting_Provider = /*@__PURE__*/
  tsEnum(AISetting_ProviderSchema);

/**
 * Describes the message bytebase.v1.EnvironmentSetting.
 * Use `create(EnvironmentSettingSchema)` to create a new message.
 */
export const EnvironmentSettingSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 19);

/**
 * Describes the message bytebase.v1.EnvironmentSetting.Environment.
 * Use `create(EnvironmentSetting_EnvironmentSchema)` to create a new message.
 */
export const EnvironmentSetting_EnvironmentSchema = /*@__PURE__*/
  messageDesc(file_v1_setting_service, 19, 0);

/**
 * Describes the enum bytebase.v1.DatabaseChangeMode.
 */
export const DatabaseChangeModeSchema = /*@__PURE__*/
  enumDesc(file_v1_setting_service, 0);

/**
 * @generated from enum bytebase.v1.DatabaseChangeMode
 */
export const DatabaseChangeMode = /*@__PURE__*/
  tsEnum(DatabaseChangeModeSchema);

/**
 * @generated from service bytebase.v1.SettingService
 */
export const SettingService = /*@__PURE__*/
  serviceDesc(file_v1_setting_service, 0);

