// @generated by protoc-gen-es v2.5.2
// @generated from file v1/audit_log_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { ExportFormat } from "./common_pb";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../google/rpc/status_pb";
import type { PolicyDelta } from "./iam_policy_pb";

/**
 * Describes the file v1/audit_log_service.proto.
 */
export declare const file_v1_audit_log_service: GenFile;

/**
 * @generated from message bytebase.v1.SearchAuditLogsRequest
 */
export declare type SearchAuditLogsRequest = Message<"bytebase.v1.SearchAuditLogsRequest"> & {
  /**
   * @generated from field: string parent = 5;
   */
  parent: string;

  /**
   * The filter of the log. It should be a valid CEL expression.
   * The syntax and semantics of CEL are documented at https://github.com/google/cel-spec
   *
   * Supported filter:
   * - method: the API name, can be found in the docs, should start with "/bytebase.v1." prefix. For example "/bytebase.v1.UserService/CreateUser". Support "==" operator.
   * - severity: support "==" operator, check Severity enum in AuditLog message for values.
   * - user: the actor, should in "users/{email}" format, support "==" operator.
   * - create_time: support ">=" and "<=" operator.
   *
   * For example:
   *  - filter = "method == '/bytebase.v1.SQLService/Query'"
   *  - filter = "method == '/bytebase.v1.SQLService/Query' && severity == 'ERROR'"
   *  - filter = "method == '/bytebase.v1.SQLService/Query' && severity == 'ERROR' && user == 'users/bb@bytebase.com'"
   *  - filter = "method == '/bytebase.v1.SQLService/Query' && severity == 'ERROR' && create_time <= '2021-01-01T00:00:00Z' && create_time >= '2020-01-01T00:00:00Z'"
   *
   * @generated from field: string filter = 1;
   */
  filter: string;

  /**
   * The order by of the log.
   * Only support order by create_time.
   * For example:
   *  - order_by = "create_time asc"
   *  - order_by = "create_time desc"
   *
   * @generated from field: string order_by = 2;
   */
  orderBy: string;

  /**
   * The maximum number of logs to return.
   * The service may return fewer than this value.
   * If unspecified, at most 10 log entries will be returned.
   * The maximum value is 5000; values above 5000 will be coerced to 5000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `SearchLogs` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message bytebase.v1.SearchAuditLogsRequest.
 * Use `create(SearchAuditLogsRequestSchema)` to create a new message.
 */
export declare const SearchAuditLogsRequestSchema: GenMessage<SearchAuditLogsRequest>;

/**
 * @generated from message bytebase.v1.SearchAuditLogsResponse
 */
export declare type SearchAuditLogsResponse = Message<"bytebase.v1.SearchAuditLogsResponse"> & {
  /**
   * @generated from field: repeated bytebase.v1.AuditLog audit_logs = 1;
   */
  auditLogs: AuditLog[];

  /**
   * A token to retrieve next page of log entities.
   * Pass this value in the page_token field in the subsequent call
   * to retrieve the next page of log entities.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message bytebase.v1.SearchAuditLogsResponse.
 * Use `create(SearchAuditLogsResponseSchema)` to create a new message.
 */
export declare const SearchAuditLogsResponseSchema: GenMessage<SearchAuditLogsResponse>;

/**
 * @generated from message bytebase.v1.ExportAuditLogsRequest
 */
export declare type ExportAuditLogsRequest = Message<"bytebase.v1.ExportAuditLogsRequest"> & {
  /**
   * @generated from field: string parent = 4;
   */
  parent: string;

  /**
   * The filter of the log. It should be a valid CEL expression.
   * Check the filter field in the SearchAuditLogsRequest message.
   *
   * @generated from field: string filter = 1;
   */
  filter: string;

  /**
   * The order by of the log.
   * Only support order by create_time.
   * For example:
   *  - order_by = "create_time asc"
   *  - order_by = "create_time desc"
   *
   * @generated from field: string order_by = 2;
   */
  orderBy: string;

  /**
   * The export format.
   *
   * @generated from field: bytebase.v1.ExportFormat format = 3;
   */
  format: ExportFormat;

  /**
   * The maximum number of logs to return.
   * The service may return fewer than this value.
   * If unspecified, at most 10 log entries will be returned.
   * The maximum value is 5000; values above 5000 will be coerced to 5000.
   *
   * @generated from field: int32 page_size = 5;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ExportAuditLogs` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 6;
   */
  pageToken: string;
};

/**
 * Describes the message bytebase.v1.ExportAuditLogsRequest.
 * Use `create(ExportAuditLogsRequestSchema)` to create a new message.
 */
export declare const ExportAuditLogsRequestSchema: GenMessage<ExportAuditLogsRequest>;

/**
 * @generated from message bytebase.v1.ExportAuditLogsResponse
 */
export declare type ExportAuditLogsResponse = Message<"bytebase.v1.ExportAuditLogsResponse"> & {
  /**
   * @generated from field: bytes content = 1;
   */
  content: Uint8Array;

  /**
   * A token to retrieve next page of log entities.
   * Pass this value in the page_token field in the subsequent call
   * to retrieve the next page of log entities.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message bytebase.v1.ExportAuditLogsResponse.
 * Use `create(ExportAuditLogsResponseSchema)` to create a new message.
 */
export declare const ExportAuditLogsResponseSchema: GenMessage<ExportAuditLogsResponse>;

/**
 * @generated from message bytebase.v1.AuditLog
 */
export declare type AuditLog = Message<"bytebase.v1.AuditLog"> & {
  /**
   * The name of the log.
   * Formats:
   * - projects/{project}/auditLogs/{uid}
   * - workspaces/{workspace}/auditLogs/{uid}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Format: users/d@d.com
   *
   * @generated from field: string user = 3;
   */
  user: string;

  /**
   * e.g. `/bytebase.v1.SQLService/Query`, `bb.project.repository.push`
   *
   * @generated from field: string method = 4;
   */
  method: string;

  /**
   * @generated from field: bytebase.v1.AuditLog.Severity severity = 5;
   */
  severity: AuditLog_Severity;

  /**
   * The associated resource.
   *
   * @generated from field: string resource = 6;
   */
  resource: string;

  /**
   * JSON-encoded request.
   *
   * @generated from field: string request = 7;
   */
  request: string;

  /**
   * JSON-encoded response.
   * Some fields are omitted because they are too large or contain sensitive information.
   *
   * @generated from field: string response = 8;
   */
  response: string;

  /**
   * @generated from field: google.rpc.Status status = 9;
   */
  status?: Status;

  /**
   * service-specific data about the request, response, and other activities.
   *
   * @generated from field: google.protobuf.Any service_data = 10;
   */
  serviceData?: Any;

  /**
   * Metadata about the operation.
   *
   * @generated from field: bytebase.v1.RequestMetadata request_metadata = 11;
   */
  requestMetadata?: RequestMetadata;
};

/**
 * Describes the message bytebase.v1.AuditLog.
 * Use `create(AuditLogSchema)` to create a new message.
 */
export declare const AuditLogSchema: GenMessage<AuditLog>;

/**
 * @generated from enum bytebase.v1.AuditLog.Severity
 */
export enum AuditLog_Severity {
  /**
   * @generated from enum value: DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * @generated from enum value: DEBUG = 1;
   */
  DEBUG = 1,

  /**
   * @generated from enum value: INFO = 2;
   */
  INFO = 2,

  /**
   * @generated from enum value: NOTICE = 3;
   */
  NOTICE = 3,

  /**
   * @generated from enum value: WARNING = 4;
   */
  WARNING = 4,

  /**
   * @generated from enum value: ERROR = 5;
   */
  ERROR = 5,

  /**
   * @generated from enum value: CRITICAL = 6;
   */
  CRITICAL = 6,

  /**
   * @generated from enum value: ALERT = 7;
   */
  ALERT = 7,

  /**
   * @generated from enum value: EMERGENCY = 8;
   */
  EMERGENCY = 8,
}

/**
 * Describes the enum bytebase.v1.AuditLog.Severity.
 */
export declare const AuditLog_SeveritySchema: GenEnum<AuditLog_Severity>;

/**
 * @generated from message bytebase.v1.AuditData
 */
export declare type AuditData = Message<"bytebase.v1.AuditData"> & {
  /**
   * @generated from field: bytebase.v1.PolicyDelta policy_delta = 1;
   */
  policyDelta?: PolicyDelta;
};

/**
 * Describes the message bytebase.v1.AuditData.
 * Use `create(AuditDataSchema)` to create a new message.
 */
export declare const AuditDataSchema: GenMessage<AuditData>;

/**
 * Metadata about the request.
 *
 * @generated from message bytebase.v1.RequestMetadata
 */
export declare type RequestMetadata = Message<"bytebase.v1.RequestMetadata"> & {
  /**
   * The IP address of the caller.
   *
   * @generated from field: string caller_ip = 1;
   */
  callerIp: string;

  /**
   * The user agent of the caller.
   * This information is not authenticated and should be treated accordingly.
   *
   * @generated from field: string caller_supplied_user_agent = 2;
   */
  callerSuppliedUserAgent: string;
};

/**
 * Describes the message bytebase.v1.RequestMetadata.
 * Use `create(RequestMetadataSchema)` to create a new message.
 */
export declare const RequestMetadataSchema: GenMessage<RequestMetadata>;

/**
 * @generated from service bytebase.v1.AuditLogService
 */
export declare const AuditLogService: GenService<{
  /**
   * @generated from rpc bytebase.v1.AuditLogService.SearchAuditLogs
   */
  searchAuditLogs: {
    methodKind: "unary";
    input: typeof SearchAuditLogsRequestSchema;
    output: typeof SearchAuditLogsResponseSchema;
  },
  /**
   * @generated from rpc bytebase.v1.AuditLogService.ExportAuditLogs
   */
  exportAuditLogs: {
    methodKind: "unary";
    input: typeof ExportAuditLogsRequestSchema;
    output: typeof ExportAuditLogsResponseSchema;
  },
}>;

