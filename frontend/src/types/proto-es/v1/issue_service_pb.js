// @generated by protoc-gen-es v2.5.2
// @generated from file v1/issue_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../buf/validate/validate_pb";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_google_api_client } from "../google/api/client_pb";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb";
import { file_google_api_resource } from "../google/api/resource_pb";
import { file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_type_expr } from "../google/type/expr_pb";
import { file_v1_annotation } from "./annotation_pb";
import { file_v1_common } from "./common_pb";

/**
 * Describes the file v1/issue_service.proto.
 */
export const file_v1_issue_service = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_type_expr, file_v1_annotation, file_v1_common]);

/**
 * Describes the message bytebase.v1.GetIssueRequest.
 * Use `create(GetIssueRequestSchema)` to create a new message.
 */
export const GetIssueRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 0);

/**
 * Describes the message bytebase.v1.CreateIssueRequest.
 * Use `create(CreateIssueRequestSchema)` to create a new message.
 */
export const CreateIssueRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 1);

/**
 * Describes the message bytebase.v1.ListIssuesRequest.
 * Use `create(ListIssuesRequestSchema)` to create a new message.
 */
export const ListIssuesRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 2);

/**
 * Describes the message bytebase.v1.ListIssuesResponse.
 * Use `create(ListIssuesResponseSchema)` to create a new message.
 */
export const ListIssuesResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 3);

/**
 * Describes the message bytebase.v1.SearchIssuesRequest.
 * Use `create(SearchIssuesRequestSchema)` to create a new message.
 */
export const SearchIssuesRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 4);

/**
 * Describes the message bytebase.v1.SearchIssuesResponse.
 * Use `create(SearchIssuesResponseSchema)` to create a new message.
 */
export const SearchIssuesResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 5);

/**
 * Describes the message bytebase.v1.UpdateIssueRequest.
 * Use `create(UpdateIssueRequestSchema)` to create a new message.
 */
export const UpdateIssueRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 6);

/**
 * Describes the message bytebase.v1.BatchUpdateIssuesStatusRequest.
 * Use `create(BatchUpdateIssuesStatusRequestSchema)` to create a new message.
 */
export const BatchUpdateIssuesStatusRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 7);

/**
 * Describes the message bytebase.v1.BatchUpdateIssuesStatusResponse.
 * Use `create(BatchUpdateIssuesStatusResponseSchema)` to create a new message.
 */
export const BatchUpdateIssuesStatusResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 8);

/**
 * Describes the message bytebase.v1.ApproveIssueRequest.
 * Use `create(ApproveIssueRequestSchema)` to create a new message.
 */
export const ApproveIssueRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 9);

/**
 * Describes the message bytebase.v1.RejectIssueRequest.
 * Use `create(RejectIssueRequestSchema)` to create a new message.
 */
export const RejectIssueRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 10);

/**
 * Describes the message bytebase.v1.RequestIssueRequest.
 * Use `create(RequestIssueRequestSchema)` to create a new message.
 */
export const RequestIssueRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 11);

/**
 * Describes the message bytebase.v1.Issue.
 * Use `create(IssueSchema)` to create a new message.
 */
export const IssueSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 12);

/**
 * Describes the message bytebase.v1.Issue.Approver.
 * Use `create(Issue_ApproverSchema)` to create a new message.
 */
export const Issue_ApproverSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 12, 0);

/**
 * Describes the enum bytebase.v1.Issue.Approver.Status.
 */
export const Issue_Approver_StatusSchema = /*@__PURE__*/
  enumDesc(file_v1_issue_service, 12, 0, 0);

/**
 * The approval status of an approver.
 *
 * @generated from enum bytebase.v1.Issue.Approver.Status
 */
export const Issue_Approver_Status = /*@__PURE__*/
  tsEnum(Issue_Approver_StatusSchema);

/**
 * Describes the enum bytebase.v1.Issue.Type.
 */
export const Issue_TypeSchema = /*@__PURE__*/
  enumDesc(file_v1_issue_service, 12, 0);

/**
 * The type of issue.
 *
 * @generated from enum bytebase.v1.Issue.Type
 */
export const Issue_Type = /*@__PURE__*/
  tsEnum(Issue_TypeSchema);

/**
 * Describes the enum bytebase.v1.Issue.ApprovalStatus.
 */
export const Issue_ApprovalStatusSchema = /*@__PURE__*/
  enumDesc(file_v1_issue_service, 12, 1);

/**
 * The overall approval status for the issue.
 *
 * @generated from enum bytebase.v1.Issue.ApprovalStatus
 */
export const Issue_ApprovalStatus = /*@__PURE__*/
  tsEnum(Issue_ApprovalStatusSchema);

/**
 * Describes the message bytebase.v1.GrantRequest.
 * Use `create(GrantRequestSchema)` to create a new message.
 */
export const GrantRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 13);

/**
 * Describes the message bytebase.v1.ApprovalTemplate.
 * Use `create(ApprovalTemplateSchema)` to create a new message.
 */
export const ApprovalTemplateSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 14);

/**
 * Describes the message bytebase.v1.ApprovalFlow.
 * Use `create(ApprovalFlowSchema)` to create a new message.
 */
export const ApprovalFlowSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 15);

/**
 * Describes the message bytebase.v1.ListIssueCommentsRequest.
 * Use `create(ListIssueCommentsRequestSchema)` to create a new message.
 */
export const ListIssueCommentsRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 16);

/**
 * Describes the message bytebase.v1.ListIssueCommentsResponse.
 * Use `create(ListIssueCommentsResponseSchema)` to create a new message.
 */
export const ListIssueCommentsResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 17);

/**
 * Describes the message bytebase.v1.CreateIssueCommentRequest.
 * Use `create(CreateIssueCommentRequestSchema)` to create a new message.
 */
export const CreateIssueCommentRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 18);

/**
 * Describes the message bytebase.v1.UpdateIssueCommentRequest.
 * Use `create(UpdateIssueCommentRequestSchema)` to create a new message.
 */
export const UpdateIssueCommentRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 19);

/**
 * Describes the message bytebase.v1.IssueComment.
 * Use `create(IssueCommentSchema)` to create a new message.
 */
export const IssueCommentSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 20);

/**
 * Describes the message bytebase.v1.IssueComment.Approval.
 * Use `create(IssueComment_ApprovalSchema)` to create a new message.
 */
export const IssueComment_ApprovalSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 20, 0);

/**
 * Describes the enum bytebase.v1.IssueComment.Approval.Status.
 */
export const IssueComment_Approval_StatusSchema = /*@__PURE__*/
  enumDesc(file_v1_issue_service, 20, 0, 0);

/**
 * Approval status values.
 *
 * @generated from enum bytebase.v1.IssueComment.Approval.Status
 */
export const IssueComment_Approval_Status = /*@__PURE__*/
  tsEnum(IssueComment_Approval_StatusSchema);

/**
 * Describes the message bytebase.v1.IssueComment.IssueUpdate.
 * Use `create(IssueComment_IssueUpdateSchema)` to create a new message.
 */
export const IssueComment_IssueUpdateSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 20, 1);

/**
 * Describes the message bytebase.v1.IssueComment.StageEnd.
 * Use `create(IssueComment_StageEndSchema)` to create a new message.
 */
export const IssueComment_StageEndSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 20, 2);

/**
 * Describes the message bytebase.v1.IssueComment.TaskUpdate.
 * Use `create(IssueComment_TaskUpdateSchema)` to create a new message.
 */
export const IssueComment_TaskUpdateSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 20, 3);

/**
 * Describes the enum bytebase.v1.IssueComment.TaskUpdate.Status.
 */
export const IssueComment_TaskUpdate_StatusSchema = /*@__PURE__*/
  enumDesc(file_v1_issue_service, 20, 3, 0);

/**
 * Task status values.
 *
 * @generated from enum bytebase.v1.IssueComment.TaskUpdate.Status
 */
export const IssueComment_TaskUpdate_Status = /*@__PURE__*/
  tsEnum(IssueComment_TaskUpdate_StatusSchema);

/**
 * Describes the message bytebase.v1.IssueComment.TaskPriorBackup.
 * Use `create(IssueComment_TaskPriorBackupSchema)` to create a new message.
 */
export const IssueComment_TaskPriorBackupSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 20, 4);

/**
 * Describes the message bytebase.v1.IssueComment.TaskPriorBackup.Table.
 * Use `create(IssueComment_TaskPriorBackup_TableSchema)` to create a new message.
 */
export const IssueComment_TaskPriorBackup_TableSchema = /*@__PURE__*/
  messageDesc(file_v1_issue_service, 20, 4, 0);

/**
 * Describes the enum bytebase.v1.IssueStatus.
 */
export const IssueStatusSchema = /*@__PURE__*/
  enumDesc(file_v1_issue_service, 0);

/**
 * The status of an issue.
 *
 * @generated from enum bytebase.v1.IssueStatus
 */
export const IssueStatus = /*@__PURE__*/
  tsEnum(IssueStatusSchema);

/**
 * IssueService manages issues for tracking database changes and tasks.
 *
 * @generated from service bytebase.v1.IssueService
 */
export const IssueService = /*@__PURE__*/
  serviceDesc(file_v1_issue_service, 0);

