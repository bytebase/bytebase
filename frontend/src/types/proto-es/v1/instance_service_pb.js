// @generated by protoc-gen-es v2.5.2
// @generated from file v1/instance_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_google_api_client } from "../google/api/client_pb";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb";
import { file_google_api_resource } from "../google/api/resource_pb";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_v1_annotation } from "./annotation_pb";
import { file_v1_common } from "./common_pb";
import { file_v1_instance_role_service } from "./instance_role_service_pb";

/**
 * Describes the file v1/instance_service.proto.
 */
export const file_v1_instance_service = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_v1_annotation, file_v1_common, file_v1_instance_role_service]);

/**
 * Describes the message bytebase.v1.GetInstanceRequest.
 * Use `create(GetInstanceRequestSchema)` to create a new message.
 */
export const GetInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 0);

/**
 * Describes the message bytebase.v1.ListInstancesRequest.
 * Use `create(ListInstancesRequestSchema)` to create a new message.
 */
export const ListInstancesRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 1);

/**
 * Describes the message bytebase.v1.ListInstancesResponse.
 * Use `create(ListInstancesResponseSchema)` to create a new message.
 */
export const ListInstancesResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 2);

/**
 * Describes the message bytebase.v1.CreateInstanceRequest.
 * Use `create(CreateInstanceRequestSchema)` to create a new message.
 */
export const CreateInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 3);

/**
 * Describes the message bytebase.v1.UpdateInstanceRequest.
 * Use `create(UpdateInstanceRequestSchema)` to create a new message.
 */
export const UpdateInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 4);

/**
 * Describes the message bytebase.v1.DeleteInstanceRequest.
 * Use `create(DeleteInstanceRequestSchema)` to create a new message.
 */
export const DeleteInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 5);

/**
 * Describes the message bytebase.v1.UndeleteInstanceRequest.
 * Use `create(UndeleteInstanceRequestSchema)` to create a new message.
 */
export const UndeleteInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 6);

/**
 * Describes the message bytebase.v1.SyncInstanceRequest.
 * Use `create(SyncInstanceRequestSchema)` to create a new message.
 */
export const SyncInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 7);

/**
 * Describes the message bytebase.v1.ListInstanceDatabaseRequest.
 * Use `create(ListInstanceDatabaseRequestSchema)` to create a new message.
 */
export const ListInstanceDatabaseRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 8);

/**
 * Describes the message bytebase.v1.ListInstanceDatabaseResponse.
 * Use `create(ListInstanceDatabaseResponseSchema)` to create a new message.
 */
export const ListInstanceDatabaseResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 9);

/**
 * Describes the message bytebase.v1.SyncInstanceResponse.
 * Use `create(SyncInstanceResponseSchema)` to create a new message.
 */
export const SyncInstanceResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 10);

/**
 * Describes the message bytebase.v1.BatchSyncInstancesRequest.
 * Use `create(BatchSyncInstancesRequestSchema)` to create a new message.
 */
export const BatchSyncInstancesRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 11);

/**
 * Describes the message bytebase.v1.BatchSyncInstancesResponse.
 * Use `create(BatchSyncInstancesResponseSchema)` to create a new message.
 */
export const BatchSyncInstancesResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 12);

/**
 * Describes the message bytebase.v1.BatchUpdateInstancesRequest.
 * Use `create(BatchUpdateInstancesRequestSchema)` to create a new message.
 */
export const BatchUpdateInstancesRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 13);

/**
 * Describes the message bytebase.v1.BatchUpdateInstancesResponse.
 * Use `create(BatchUpdateInstancesResponseSchema)` to create a new message.
 */
export const BatchUpdateInstancesResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 14);

/**
 * Describes the message bytebase.v1.AddDataSourceRequest.
 * Use `create(AddDataSourceRequestSchema)` to create a new message.
 */
export const AddDataSourceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 15);

/**
 * Describes the message bytebase.v1.RemoveDataSourceRequest.
 * Use `create(RemoveDataSourceRequestSchema)` to create a new message.
 */
export const RemoveDataSourceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 16);

/**
 * Describes the message bytebase.v1.UpdateDataSourceRequest.
 * Use `create(UpdateDataSourceRequestSchema)` to create a new message.
 */
export const UpdateDataSourceRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 17);

/**
 * Describes the message bytebase.v1.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export const InstanceSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 18);

/**
 * Describes the message bytebase.v1.DataSourceExternalSecret.
 * Use `create(DataSourceExternalSecretSchema)` to create a new message.
 */
export const DataSourceExternalSecretSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 19);

/**
 * Describes the message bytebase.v1.DataSourceExternalSecret.AppRoleAuthOption.
 * Use `create(DataSourceExternalSecret_AppRoleAuthOptionSchema)` to create a new message.
 */
export const DataSourceExternalSecret_AppRoleAuthOptionSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 19, 0);

/**
 * Describes the enum bytebase.v1.DataSourceExternalSecret.AppRoleAuthOption.SecretType.
 */
export const DataSourceExternalSecret_AppRoleAuthOption_SecretTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_instance_service, 19, 0, 0);

/**
 * @generated from enum bytebase.v1.DataSourceExternalSecret.AppRoleAuthOption.SecretType
 */
export const DataSourceExternalSecret_AppRoleAuthOption_SecretType = /*@__PURE__*/
  tsEnum(DataSourceExternalSecret_AppRoleAuthOption_SecretTypeSchema);

/**
 * Describes the enum bytebase.v1.DataSourceExternalSecret.SecretType.
 */
export const DataSourceExternalSecret_SecretTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_instance_service, 19, 0);

/**
 * @generated from enum bytebase.v1.DataSourceExternalSecret.SecretType
 */
export const DataSourceExternalSecret_SecretType = /*@__PURE__*/
  tsEnum(DataSourceExternalSecret_SecretTypeSchema);

/**
 * Describes the enum bytebase.v1.DataSourceExternalSecret.AuthType.
 */
export const DataSourceExternalSecret_AuthTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_instance_service, 19, 1);

/**
 * @generated from enum bytebase.v1.DataSourceExternalSecret.AuthType
 */
export const DataSourceExternalSecret_AuthType = /*@__PURE__*/
  tsEnum(DataSourceExternalSecret_AuthTypeSchema);

/**
 * Describes the message bytebase.v1.DataSource.
 * Use `create(DataSourceSchema)` to create a new message.
 */
export const DataSourceSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 20);

/**
 * Describes the message bytebase.v1.DataSource.AzureCredential.
 * Use `create(DataSource_AzureCredentialSchema)` to create a new message.
 */
export const DataSource_AzureCredentialSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 20, 0);

/**
 * Describes the message bytebase.v1.DataSource.AWSCredential.
 * Use `create(DataSource_AWSCredentialSchema)` to create a new message.
 */
export const DataSource_AWSCredentialSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 20, 1);

/**
 * Describes the message bytebase.v1.DataSource.GCPCredential.
 * Use `create(DataSource_GCPCredentialSchema)` to create a new message.
 */
export const DataSource_GCPCredentialSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 20, 2);

/**
 * Describes the message bytebase.v1.DataSource.Address.
 * Use `create(DataSource_AddressSchema)` to create a new message.
 */
export const DataSource_AddressSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 20, 3);

/**
 * Describes the enum bytebase.v1.DataSource.AuthenticationType.
 */
export const DataSource_AuthenticationTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_instance_service, 20, 0);

/**
 * @generated from enum bytebase.v1.DataSource.AuthenticationType
 */
export const DataSource_AuthenticationType = /*@__PURE__*/
  tsEnum(DataSource_AuthenticationTypeSchema);

/**
 * Describes the enum bytebase.v1.DataSource.RedisType.
 */
export const DataSource_RedisTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_instance_service, 20, 1);

/**
 * @generated from enum bytebase.v1.DataSource.RedisType
 */
export const DataSource_RedisType = /*@__PURE__*/
  tsEnum(DataSource_RedisTypeSchema);

/**
 * Describes the message bytebase.v1.InstanceResource.
 * Use `create(InstanceResourceSchema)` to create a new message.
 */
export const InstanceResourceSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 21);

/**
 * Describes the message bytebase.v1.SASLConfig.
 * Use `create(SASLConfigSchema)` to create a new message.
 */
export const SASLConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 22);

/**
 * Describes the message bytebase.v1.KerberosConfig.
 * Use `create(KerberosConfigSchema)` to create a new message.
 */
export const KerberosConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_instance_service, 23);

/**
 * Describes the enum bytebase.v1.DataSourceType.
 */
export const DataSourceTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_instance_service, 0);

/**
 * @generated from enum bytebase.v1.DataSourceType
 */
export const DataSourceType = /*@__PURE__*/
  tsEnum(DataSourceTypeSchema);

/**
 * @generated from service bytebase.v1.InstanceService
 */
export const InstanceService = /*@__PURE__*/
  serviceDesc(file_v1_instance_service, 0);

