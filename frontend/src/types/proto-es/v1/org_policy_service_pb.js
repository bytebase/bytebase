// @generated by protoc-gen-es v2.5.2
// @generated from file v1/org_policy_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_google_api_client } from "../google/api/client_pb";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb";
import { file_google_api_resource } from "../google/api/resource_pb";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import { file_google_type_expr } from "../google/type/expr_pb";
import { file_v1_annotation } from "./annotation_pb";
import { file_v1_common } from "./common_pb";

/**
 * Describes the file v1/org_policy_service.proto.
 */
export const file_v1_org_policy_service = /*@__PURE__*/
  fileDesc("Cht2MS9vcmdfcG9saWN5X3NlcnZpY2UucHJvdG8SC2J5dGViYXNlLnYxIpMBChNDcmVhdGVQb2xpY3lSZXF1ZXN0EisKBnBhcmVudBgBIAEoCUIb4EEC+kEVEhNieXRlYmFzZS5jb20vUG9saWN5EigKBnBvbGljeRgCIAEoCzITLmJ5dGViYXNlLnYxLlBvbGljeUID4EECEiUKBHR5cGUYAyABKA4yFy5ieXRlYmFzZS52MS5Qb2xpY3lUeXBlIocBChNVcGRhdGVQb2xpY3lSZXF1ZXN0EigKBnBvbGljeRgBIAEoCzITLmJ5dGViYXNlLnYxLlBvbGljeUID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzaxIVCg1hbGxvd19taXNzaW5nGAMgASgIIkAKE0RlbGV0ZVBvbGljeVJlcXVlc3QSKQoEbmFtZRgBIAEoCUIb4EEC+kEVChNieXRlYmFzZS5jb20vUG9saWN5Ij0KEEdldFBvbGljeVJlcXVlc3QSKQoEbmFtZRgBIAEoCUIb4EEC+kEVChNieXRlYmFzZS5jb20vUG9saWN5IpsBChNMaXN0UG9saWNpZXNSZXF1ZXN0EisKBnBhcmVudBgBIAEoCUIb4EEC+kEVEhNieXRlYmFzZS5jb20vUG9saWN5EjEKC3BvbGljeV90eXBlGAIgASgOMhcuYnl0ZWJhc2UudjEuUG9saWN5VHlwZUgAiAEBEhQKDHNob3dfZGVsZXRlZBgDIAEoCEIOCgxfcG9saWN5X3R5cGUiPQoUTGlzdFBvbGljaWVzUmVzcG9uc2USJQoIcG9saWNpZXMYASADKAsyEy5ieXRlYmFzZS52MS5Qb2xpY3kilQYKBlBvbGljeRIMCgRuYW1lGAEgASgJEhsKE2luaGVyaXRfZnJvbV9wYXJlbnQYBCABKAgSJQoEdHlwZRgFIAEoDjIXLmJ5dGViYXNlLnYxLlBvbGljeVR5cGUSNAoOcm9sbG91dF9wb2xpY3kYEyABKAsyGi5ieXRlYmFzZS52MS5Sb2xsb3V0UG9saWN5SAASPQoTbWFza2luZ19ydWxlX3BvbGljeRgRIAEoCzIeLmJ5dGViYXNlLnYxLk1hc2tpbmdSdWxlUG9saWN5SAASRwoYbWFza2luZ19leGNlcHRpb25fcG9saWN5GBIgASgLMiMuYnl0ZWJhc2UudjEuTWFza2luZ0V4Y2VwdGlvblBvbGljeUgAEiwKCnRhZ19wb2xpY3kYFSABKAsyFi5ieXRlYmFzZS52MS5UYWdQb2xpY3lIABJGChhkYXRhX3NvdXJjZV9xdWVyeV9wb2xpY3kYFiABKAsyIi5ieXRlYmFzZS52MS5EYXRhU291cmNlUXVlcnlQb2xpY3lIABI5ChFxdWVyeV9kYXRhX3BvbGljeRgYIAEoCzIcLmJ5dGViYXNlLnYxLlF1ZXJ5RGF0YVBvbGljeUgAEg8KB2VuZm9yY2UYDSABKAgSOwoNcmVzb3VyY2VfdHlwZRgOIAEoDjIfLmJ5dGViYXNlLnYxLlBvbGljeVJlc291cmNlVHlwZUID4EEDOuUB6kHhAQoTYnl0ZWJhc2UuY29tL1BvbGljeRIRcG9saWNpZXMve3BvbGljeX0SJHByb2plY3RzL3twcm9qZWN0fS9wb2xpY2llcy97cG9saWN5fRIsZW52aXJvbm1lbnRzL3tlbnZpcm9ubWVudH0vcG9saWNpZXMve3BvbGljeX0SJmluc3RhbmNlcy97aW5zdGFuY2V9L3BvbGljaWVzL3twb2xpY3l9EjtpbnN0YW5jZXMve2luc3RhbmNlfS9kYXRhYmFzZXMve2RhdGFiYXNlfS9wb2xpY2llcy97cG9saWN5fUIICgZwb2xpY3lKBAgCEANKBAgXEBgivgMKDVJvbGxvdXRQb2xpY3kSEQoJYXV0b21hdGljGAEgASgIEg0KBXJvbGVzGAIgAygJEjUKCGNoZWNrZXJzGAQgASgLMiMuYnl0ZWJhc2UudjEuUm9sbG91dFBvbGljeS5DaGVja2VycxrTAgoIQ2hlY2tlcnMSHwoXcmVxdWlyZWRfaXNzdWVfYXBwcm92YWwYASABKAgSWAoWcmVxdWlyZWRfc3RhdHVzX2NoZWNrcxgCIAEoCzI4LmJ5dGViYXNlLnYxLlJvbGxvdXRQb2xpY3kuQ2hlY2tlcnMuUmVxdWlyZWRTdGF0dXNDaGVja3MacAoUUmVxdWlyZWRTdGF0dXNDaGVja3MSWAoWcGxhbl9jaGVja19lbmZvcmNlbWVudBgBIAEoDjI4LmJ5dGViYXNlLnYxLlJvbGxvdXRQb2xpY3kuQ2hlY2tlcnMuUGxhbkNoZWNrRW5mb3JjZW1lbnQiWgoUUGxhbkNoZWNrRW5mb3JjZW1lbnQSJgoiUExBTl9DSEVDS19FTkZPUkNFTUVOVF9VTlNQRUNJRklFRBAAEg4KCkVSUk9SX09OTFkQARIKCgZTVFJJQ1QQAiKqAQoPUXVlcnlEYXRhUG9saWN5EioKB3RpbWVvdXQYASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SFgoOZGlzYWJsZV9leHBvcnQYAiABKAgSGwoTbWF4aW11bV9yZXN1bHRfc2l6ZRgDIAEoAxIbChNtYXhpbXVtX3Jlc3VsdF9yb3dzGAQgASgFEhkKEWRpc2FibGVfY29weV9kYXRhGAUgASgIIpQBCg1TUUxSZXZpZXdSdWxlEgwKBHR5cGUYASABKAkSLgoFbGV2ZWwYAiABKA4yHy5ieXRlYmFzZS52MS5TUUxSZXZpZXdSdWxlTGV2ZWwSDwoHcGF5bG9hZBgDIAEoCRIjCgZlbmdpbmUYBCABKA4yEy5ieXRlYmFzZS52MS5FbmdpbmUSDwoHY29tbWVudBgFIAEoCSK7AgoWTWFza2luZ0V4Y2VwdGlvblBvbGljeRJQChJtYXNraW5nX2V4Y2VwdGlvbnMYASADKAsyNC5ieXRlYmFzZS52MS5NYXNraW5nRXhjZXB0aW9uUG9saWN5Lk1hc2tpbmdFeGNlcHRpb24azgEKEE1hc2tpbmdFeGNlcHRpb24SSwoGYWN0aW9uGAEgASgOMjsuYnl0ZWJhc2UudjEuTWFza2luZ0V4Y2VwdGlvblBvbGljeS5NYXNraW5nRXhjZXB0aW9uLkFjdGlvbhIOCgZtZW1iZXIYAyABKAkSJAoJY29uZGl0aW9uGAQgASgLMhEuZ29vZ2xlLnR5cGUuRXhwciI3CgZBY3Rpb24SFgoSQUNUSU9OX1VOU1BFQ0lGSUVEEAASCQoFUVVFUlkQARIKCgZFWFBPUlQQAiKmAQoRTWFza2luZ1J1bGVQb2xpY3kSOQoFcnVsZXMYASADKAsyKi5ieXRlYmFzZS52MS5NYXNraW5nUnVsZVBvbGljeS5NYXNraW5nUnVsZRpWCgtNYXNraW5nUnVsZRIKCgJpZBgBIAEoCRIkCgljb25kaXRpb24YAiABKAsyES5nb29nbGUudHlwZS5FeHByEhUKDXNlbWFudGljX3R5cGUYAyABKAkiaAoJVGFnUG9saWN5Ei4KBHRhZ3MYASADKAsyIC5ieXRlYmFzZS52MS5UYWdQb2xpY3kuVGFnc0VudHJ5GisKCVRhZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIuIBChVEYXRhU291cmNlUXVlcnlQb2xpY3kSVQodYWRtaW5fZGF0YV9zb3VyY2VfcmVzdHJpY3Rpb24YASABKA4yLi5ieXRlYmFzZS52MS5EYXRhU291cmNlUXVlcnlQb2xpY3kuUmVzdHJpY3Rpb24SFAoMZGlzYWxsb3dfZGRsGAIgASgIEhQKDGRpc2FsbG93X2RtbBgDIAEoCCJGCgtSZXN0cmljdGlvbhIbChdSRVNUUklDVElPTl9VTlNQRUNJRklFRBAAEgwKCEZBTExCQUNLEAESDAoIRElTQUxMT1cQAirAAQoKUG9saWN5VHlwZRIbChdQT0xJQ1lfVFlQRV9VTlNQRUNJRklFRBAAEhIKDlJPTExPVVRfUE9MSUNZEAsSEAoMTUFTS0lOR19SVUxFEAkSFQoRTUFTS0lOR19FWENFUFRJT04QChIHCgNUQUcQDRIVChFEQVRBX1NPVVJDRV9RVUVSWRAOEg4KCkRBVEFfUVVFUlkQECIECAIQAiIECAQQBCIECAYQBiIECAUQBSIECAcQByIECAwQDCIECA8QDypgChJQb2xpY3lSZXNvdXJjZVR5cGUSHQoZUkVTT1VSQ0VfVFlQRV9VTlNQRUNJRklFRBAAEg0KCVdPUktTUEFDRRABEg8KC0VOVklST05NRU5UEAISCwoHUFJPSkVDVBADKkMKElNRTFJldmlld1J1bGVMZXZlbBIVChFMRVZFTF9VTlNQRUNJRklFRBAAEgkKBUVSUk9SEAESCwoHV0FSTklORxACMvQMChBPcmdQb2xpY3lTZXJ2aWNlEqACCglHZXRQb2xpY3kSHS5ieXRlYmFzZS52MS5HZXRQb2xpY3lSZXF1ZXN0GhMuYnl0ZWJhc2UudjEuUG9saWN5It4B2kEEbmFtZYrqMA9iYi5wb2xpY2llcy5nZXSQ6jABgtPkkwK5AVoiEiAvdjEve25hbWU9cHJvamVjdHMvKi9wb2xpY2llcy8qfVomEiQvdjEve25hbWU9ZW52aXJvbm1lbnRzLyovcG9saWNpZXMvKn1aIxIhL3YxL3tuYW1lPWluc3RhbmNlcy8qL3BvbGljaWVzLyp9Wi8SLS92MS97bmFtZT1pbnN0YW5jZXMvKi9kYXRhYmFzZXMvKi9wb2xpY2llcy8qfRIVL3YxL3tuYW1lPXBvbGljaWVzLyp9EqgCCgxMaXN0UG9saWNpZXMSIC5ieXRlYmFzZS52MS5MaXN0UG9saWNpZXNSZXF1ZXN0GiEuYnl0ZWJhc2UudjEuTGlzdFBvbGljaWVzUmVzcG9uc2Ui0gHaQQCK6jAQYmIucG9saWNpZXMubGlzdJDqMAGC0+STArABWiISIC92MS97cGFyZW50PXByb2plY3RzLyp9L3BvbGljaWVzWiYSJC92MS97cGFyZW50PWVudmlyb25tZW50cy8qfS9wb2xpY2llc1ojEiEvdjEve3BhcmVudD1pbnN0YW5jZXMvKn0vcG9saWNpZXNaLxItL3YxL3twYXJlbnQ9aW5zdGFuY2VzLyovZGF0YWJhc2VzLyp9L3BvbGljaWVzEgwvdjEvcG9saWNpZXMS1QIKDENyZWF0ZVBvbGljeRIgLmJ5dGViYXNlLnYxLkNyZWF0ZVBvbGljeVJlcXVlc3QaEy5ieXRlYmFzZS52MS5Qb2xpY3kijQLaQQ1wYXJlbnQscG9saWN5iuowEmJiLnBvbGljaWVzLmNyZWF0ZZDqMAGY6jABgtPkkwLYAToGcG9saWN5Wio6BnBvbGljeSIgL3YxL3twYXJlbnQ9cHJvamVjdHMvKn0vcG9saWNpZXNaLjoGcG9saWN5IiQvdjEve3BhcmVudD1lbnZpcm9ubWVudHMvKn0vcG9saWNpZXNaKzoGcG9saWN5IiEvdjEve3BhcmVudD1pbnN0YW5jZXMvKn0vcG9saWNpZXNaNzoGcG9saWN5Ii0vdjEve3BhcmVudD1pbnN0YW5jZXMvKi9kYXRhYmFzZXMvKn0vcG9saWNpZXMiDC92MS9wb2xpY2llcxKGAwoMVXBkYXRlUG9saWN5EiAuYnl0ZWJhc2UudjEuVXBkYXRlUG9saWN5UmVxdWVzdBoTLmJ5dGViYXNlLnYxLlBvbGljeSK+AtpBEnBvbGljeSx1cGRhdGVfbWFza4rqMBJiYi5wb2xpY2llcy51cGRhdGWQ6jABmOowAYLT5JMChAI6BnBvbGljeVoxOgZwb2xpY3kyJy92MS97cG9saWN5Lm5hbWU9cHJvamVjdHMvKi9wb2xpY2llcy8qfVo1OgZwb2xpY3kyKy92MS97cG9saWN5Lm5hbWU9ZW52aXJvbm1lbnRzLyovcG9saWNpZXMvKn1aMjoGcG9saWN5MigvdjEve3BvbGljeS5uYW1lPWluc3RhbmNlcy8qL3BvbGljaWVzLyp9Wj46BnBvbGljeTI0L3YxL3twb2xpY3kubmFtZT1pbnN0YW5jZXMvKi9kYXRhYmFzZXMvKi9wb2xpY2llcy8qfTIcL3YxL3twb2xpY3kubmFtZT1wb2xpY2llcy8qfRKwAgoMRGVsZXRlUG9saWN5EiAuYnl0ZWJhc2UudjEuRGVsZXRlUG9saWN5UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSLlAdpBBG5hbWWK6jASYmIucG9saWNpZXMuZGVsZXRlkOowAZjqMAGC0+STArkBWiIqIC92MS97bmFtZT1wcm9qZWN0cy8qL3BvbGljaWVzLyp9WiYqJC92MS97bmFtZT1lbnZpcm9ubWVudHMvKi9wb2xpY2llcy8qfVojKiEvdjEve25hbWU9aW5zdGFuY2VzLyovcG9saWNpZXMvKn1aLyotL3YxL3tuYW1lPWluc3RhbmNlcy8qL2RhdGFiYXNlcy8qL3BvbGljaWVzLyp9KhUvdjEve25hbWU9cG9saWNpZXMvKn1CqwEKD2NvbS5ieXRlYmFzZS52MUIVT3JnUG9saWN5U2VydmljZVByb3RvUAFaNGdpdGh1Yi5jb20vYnl0ZWJhc2UvYnl0ZWJhc2UvYmFja2VuZC9nZW5lcmF0ZWQtZ28vdjGiAgNCWFiqAgtCeXRlYmFzZS5WMcoCC0J5dGViYXNlXFYx4gIXQnl0ZWJhc2VcVjFcR1BCTWV0YWRhdGHqAgxCeXRlYmFzZTo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_type_expr, file_v1_annotation, file_v1_common]);

/**
 * Describes the message bytebase.v1.CreatePolicyRequest.
 * Use `create(CreatePolicyRequestSchema)` to create a new message.
 */
export const CreatePolicyRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 0);

/**
 * Describes the message bytebase.v1.UpdatePolicyRequest.
 * Use `create(UpdatePolicyRequestSchema)` to create a new message.
 */
export const UpdatePolicyRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 1);

/**
 * Describes the message bytebase.v1.DeletePolicyRequest.
 * Use `create(DeletePolicyRequestSchema)` to create a new message.
 */
export const DeletePolicyRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 2);

/**
 * Describes the message bytebase.v1.GetPolicyRequest.
 * Use `create(GetPolicyRequestSchema)` to create a new message.
 */
export const GetPolicyRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 3);

/**
 * Describes the message bytebase.v1.ListPoliciesRequest.
 * Use `create(ListPoliciesRequestSchema)` to create a new message.
 */
export const ListPoliciesRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 4);

/**
 * Describes the message bytebase.v1.ListPoliciesResponse.
 * Use `create(ListPoliciesResponseSchema)` to create a new message.
 */
export const ListPoliciesResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 5);

/**
 * Describes the message bytebase.v1.Policy.
 * Use `create(PolicySchema)` to create a new message.
 */
export const PolicySchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 6);

/**
 * Describes the message bytebase.v1.RolloutPolicy.
 * Use `create(RolloutPolicySchema)` to create a new message.
 */
export const RolloutPolicySchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 7);

/**
 * Describes the message bytebase.v1.RolloutPolicy.Checkers.
 * Use `create(RolloutPolicy_CheckersSchema)` to create a new message.
 */
export const RolloutPolicy_CheckersSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 7, 0);

/**
 * Describes the message bytebase.v1.RolloutPolicy.Checkers.RequiredStatusChecks.
 * Use `create(RolloutPolicy_Checkers_RequiredStatusChecksSchema)` to create a new message.
 */
export const RolloutPolicy_Checkers_RequiredStatusChecksSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 7, 0, 0);

/**
 * Describes the enum bytebase.v1.RolloutPolicy.Checkers.PlanCheckEnforcement.
 */
export const RolloutPolicy_Checkers_PlanCheckEnforcementSchema = /*@__PURE__*/
  enumDesc(file_v1_org_policy_service, 7, 0, 0);

/**
 * @generated from enum bytebase.v1.RolloutPolicy.Checkers.PlanCheckEnforcement
 */
export const RolloutPolicy_Checkers_PlanCheckEnforcement = /*@__PURE__*/
  tsEnum(RolloutPolicy_Checkers_PlanCheckEnforcementSchema);

/**
 * Describes the message bytebase.v1.QueryDataPolicy.
 * Use `create(QueryDataPolicySchema)` to create a new message.
 */
export const QueryDataPolicySchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 8);

/**
 * Describes the message bytebase.v1.SQLReviewRule.
 * Use `create(SQLReviewRuleSchema)` to create a new message.
 */
export const SQLReviewRuleSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 9);

/**
 * Describes the message bytebase.v1.MaskingExceptionPolicy.
 * Use `create(MaskingExceptionPolicySchema)` to create a new message.
 */
export const MaskingExceptionPolicySchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 10);

/**
 * Describes the message bytebase.v1.MaskingExceptionPolicy.MaskingException.
 * Use `create(MaskingExceptionPolicy_MaskingExceptionSchema)` to create a new message.
 */
export const MaskingExceptionPolicy_MaskingExceptionSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 10, 0);

/**
 * Describes the enum bytebase.v1.MaskingExceptionPolicy.MaskingException.Action.
 */
export const MaskingExceptionPolicy_MaskingException_ActionSchema = /*@__PURE__*/
  enumDesc(file_v1_org_policy_service, 10, 0, 0);

/**
 * The action that the exception permits.
 *
 * @generated from enum bytebase.v1.MaskingExceptionPolicy.MaskingException.Action
 */
export const MaskingExceptionPolicy_MaskingException_Action = /*@__PURE__*/
  tsEnum(MaskingExceptionPolicy_MaskingException_ActionSchema);

/**
 * Describes the message bytebase.v1.MaskingRulePolicy.
 * Use `create(MaskingRulePolicySchema)` to create a new message.
 */
export const MaskingRulePolicySchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 11);

/**
 * Describes the message bytebase.v1.MaskingRulePolicy.MaskingRule.
 * Use `create(MaskingRulePolicy_MaskingRuleSchema)` to create a new message.
 */
export const MaskingRulePolicy_MaskingRuleSchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 11, 0);

/**
 * Describes the message bytebase.v1.TagPolicy.
 * Use `create(TagPolicySchema)` to create a new message.
 */
export const TagPolicySchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 12);

/**
 * Describes the message bytebase.v1.DataSourceQueryPolicy.
 * Use `create(DataSourceQueryPolicySchema)` to create a new message.
 */
export const DataSourceQueryPolicySchema = /*@__PURE__*/
  messageDesc(file_v1_org_policy_service, 13);

/**
 * Describes the enum bytebase.v1.DataSourceQueryPolicy.Restriction.
 */
export const DataSourceQueryPolicy_RestrictionSchema = /*@__PURE__*/
  enumDesc(file_v1_org_policy_service, 13, 0);

/**
 * Restriction level for admin data source access.
 *
 * @generated from enum bytebase.v1.DataSourceQueryPolicy.Restriction
 */
export const DataSourceQueryPolicy_Restriction = /*@__PURE__*/
  tsEnum(DataSourceQueryPolicy_RestrictionSchema);

/**
 * Describes the enum bytebase.v1.PolicyType.
 */
export const PolicyTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_org_policy_service, 0);

/**
 * The type of organizational policy.
 *
 * @generated from enum bytebase.v1.PolicyType
 */
export const PolicyType = /*@__PURE__*/
  tsEnum(PolicyTypeSchema);

/**
 * Describes the enum bytebase.v1.PolicyResourceType.
 */
export const PolicyResourceTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_org_policy_service, 1);

/**
 * The resource type that a policy can be attached to.
 *
 * @generated from enum bytebase.v1.PolicyResourceType
 */
export const PolicyResourceType = /*@__PURE__*/
  tsEnum(PolicyResourceTypeSchema);

/**
 * Describes the enum bytebase.v1.SQLReviewRuleLevel.
 */
export const SQLReviewRuleLevelSchema = /*@__PURE__*/
  enumDesc(file_v1_org_policy_service, 2);

/**
 * The severity level for SQL review rules.
 *
 * @generated from enum bytebase.v1.SQLReviewRuleLevel
 */
export const SQLReviewRuleLevel = /*@__PURE__*/
  tsEnum(SQLReviewRuleLevelSchema);

/**
 * OrgPolicyService manages organizational policies at various resource levels.
 *
 * @generated from service bytebase.v1.OrgPolicyService
 */
export const OrgPolicyService = /*@__PURE__*/
  serviceDesc(file_v1_org_policy_service, 0);

