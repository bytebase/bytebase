// @generated by protoc-gen-es v2.5.2
// @generated from file v1/revision_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file v1/revision_service.proto.
 */
export declare const file_v1_revision_service: GenFile;

/**
 * @generated from message bytebase.v1.ListRevisionsRequest
 */
export declare type ListRevisionsRequest = Message<"bytebase.v1.ListRevisionsRequest"> & {
  /**
   * The parent of the revisions.
   * Format: instances/{instance}/databases/{database}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of revisions to return. The service may return fewer
   * than this value. If unspecified, at most 10 revisions will be returned. The
   * maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListRevisions` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListRevisions` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool show_deleted = 4;
   */
  showDeleted: boolean;
};

/**
 * Describes the message bytebase.v1.ListRevisionsRequest.
 * Use `create(ListRevisionsRequestSchema)` to create a new message.
 */
export declare const ListRevisionsRequestSchema: GenMessage<ListRevisionsRequest>;

/**
 * @generated from message bytebase.v1.ListRevisionsResponse
 */
export declare type ListRevisionsResponse = Message<"bytebase.v1.ListRevisionsResponse"> & {
  /**
   * @generated from field: repeated bytebase.v1.Revision revisions = 1;
   */
  revisions: Revision[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message bytebase.v1.ListRevisionsResponse.
 * Use `create(ListRevisionsResponseSchema)` to create a new message.
 */
export declare const ListRevisionsResponseSchema: GenMessage<ListRevisionsResponse>;

/**
 * @generated from message bytebase.v1.CreateRevisionRequest
 */
export declare type CreateRevisionRequest = Message<"bytebase.v1.CreateRevisionRequest"> & {
  /**
   * Format: instances/{instance}/databases/{database}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The revision to create.
   *
   * @generated from field: bytebase.v1.Revision revision = 2;
   */
  revision?: Revision;
};

/**
 * Describes the message bytebase.v1.CreateRevisionRequest.
 * Use `create(CreateRevisionRequestSchema)` to create a new message.
 */
export declare const CreateRevisionRequestSchema: GenMessage<CreateRevisionRequest>;

/**
 * @generated from message bytebase.v1.BatchCreateRevisionsRequest
 */
export declare type BatchCreateRevisionsRequest = Message<"bytebase.v1.BatchCreateRevisionsRequest"> & {
  /**
   * The parent resource shared by all revisions being created.
   * Format: instances/{instance}/databases/{database}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The request message specifying the revisions to create.
   * A maximum of 100 revisions can be created in a batch.
   *
   * @generated from field: repeated bytebase.v1.CreateRevisionRequest requests = 2;
   */
  requests: CreateRevisionRequest[];
};

/**
 * Describes the message bytebase.v1.BatchCreateRevisionsRequest.
 * Use `create(BatchCreateRevisionsRequestSchema)` to create a new message.
 */
export declare const BatchCreateRevisionsRequestSchema: GenMessage<BatchCreateRevisionsRequest>;

/**
 * @generated from message bytebase.v1.BatchCreateRevisionsResponse
 */
export declare type BatchCreateRevisionsResponse = Message<"bytebase.v1.BatchCreateRevisionsResponse"> & {
  /**
   * The created revisions.
   *
   * @generated from field: repeated bytebase.v1.Revision revisions = 1;
   */
  revisions: Revision[];
};

/**
 * Describes the message bytebase.v1.BatchCreateRevisionsResponse.
 * Use `create(BatchCreateRevisionsResponseSchema)` to create a new message.
 */
export declare const BatchCreateRevisionsResponseSchema: GenMessage<BatchCreateRevisionsResponse>;

/**
 * @generated from message bytebase.v1.GetRevisionRequest
 */
export declare type GetRevisionRequest = Message<"bytebase.v1.GetRevisionRequest"> & {
  /**
   * The name of the revision.
   * Format: instances/{instance}/databases/{database}/revisions/{revision}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message bytebase.v1.GetRevisionRequest.
 * Use `create(GetRevisionRequestSchema)` to create a new message.
 */
export declare const GetRevisionRequestSchema: GenMessage<GetRevisionRequest>;

/**
 * @generated from message bytebase.v1.DeleteRevisionRequest
 */
export declare type DeleteRevisionRequest = Message<"bytebase.v1.DeleteRevisionRequest"> & {
  /**
   * The name of the revision to delete.
   * Format: instances/{instance}/databases/{database}/revisions/{revision}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message bytebase.v1.DeleteRevisionRequest.
 * Use `create(DeleteRevisionRequestSchema)` to create a new message.
 */
export declare const DeleteRevisionRequestSchema: GenMessage<DeleteRevisionRequest>;

/**
 * @generated from message bytebase.v1.Revision
 */
export declare type Revision = Message<"bytebase.v1.Revision"> & {
  /**
   * Format: instances/{instance}/databases/{database}/revisions/{revision}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Format: projects/{project}/releases/{release}
   * Can be empty.
   *
   * @generated from field: string release = 2;
   */
  release: string;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Format: users/hello@world.com
   * Can be empty.
   *
   * @generated from field: string deleter = 5;
   */
  deleter: string;

  /**
   * Can be empty.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 6;
   */
  deleteTime?: Timestamp;

  /**
   * Format: projects/{project}/releases/{release}/files/{id}
   * Can be empty.
   *
   * @generated from field: string file = 7;
   */
  file: string;

  /**
   * @generated from field: string version = 8;
   */
  version: string;

  /**
   * The sheet that holds the content.
   * Format: projects/{project}/sheets/{sheet}
   *
   * @generated from field: string sheet = 9;
   */
  sheet: string;

  /**
   * The SHA256 hash value of the sheet.
   *
   * @generated from field: string sheet_sha256 = 10;
   */
  sheetSha256: string;

  /**
   * The statement is used for preview purpose.
   *
   * @generated from field: string statement = 11;
   */
  statement: string;

  /**
   * @generated from field: int64 statement_size = 12;
   */
  statementSize: bigint;

  /**
   * The issue associated with the revision.
   * Can be empty.
   * Format: projects/{project}/issues/{issue}
   *
   * @generated from field: string issue = 13;
   */
  issue: string;

  /**
   * The task run associated with the revision.
   * Can be empty.
   * Format:
   * projects/{project}/rollouts/{rollout}/stages/{stage}/tasks/{task}/taskRuns/{taskRun}
   *
   * @generated from field: string task_run = 14;
   */
  taskRun: string;
};

/**
 * Describes the message bytebase.v1.Revision.
 * Use `create(RevisionSchema)` to create a new message.
 */
export declare const RevisionSchema: GenMessage<Revision>;

/**
 * @generated from service bytebase.v1.RevisionService
 */
export declare const RevisionService: GenService<{
  /**
   * @generated from rpc bytebase.v1.RevisionService.ListRevisions
   */
  listRevisions: {
    methodKind: "unary";
    input: typeof ListRevisionsRequestSchema;
    output: typeof ListRevisionsResponseSchema;
  },
  /**
   * @generated from rpc bytebase.v1.RevisionService.GetRevision
   */
  getRevision: {
    methodKind: "unary";
    input: typeof GetRevisionRequestSchema;
    output: typeof RevisionSchema;
  },
  /**
   * @generated from rpc bytebase.v1.RevisionService.CreateRevision
   */
  createRevision: {
    methodKind: "unary";
    input: typeof CreateRevisionRequestSchema;
    output: typeof RevisionSchema;
  },
  /**
   * @generated from rpc bytebase.v1.RevisionService.BatchCreateRevisions
   */
  batchCreateRevisions: {
    methodKind: "unary";
    input: typeof BatchCreateRevisionsRequestSchema;
    output: typeof BatchCreateRevisionsResponseSchema;
  },
  /**
   * @generated from rpc bytebase.v1.RevisionService.DeleteRevision
   */
  deleteRevision: {
    methodKind: "unary";
    input: typeof DeleteRevisionRequestSchema;
    output: typeof EmptySchema;
  },
}>;

