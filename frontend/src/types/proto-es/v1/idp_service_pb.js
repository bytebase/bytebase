// @generated by protoc-gen-es v2.5.2
// @generated from file v1/idp_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_google_api_client } from "../google/api/client_pb";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb";
import { file_google_api_resource } from "../google/api/resource_pb";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import { file_v1_annotation } from "./annotation_pb";

/**
 * Describes the file v1/idp_service.proto.
 */
export const file_v1_idp_service = /*@__PURE__*/
  fileDesc("ChR2MS9pZHBfc2VydmljZS5wcm90bxILYnl0ZWJhc2UudjEiRAoaR2V0SWRlbnRpdHlQcm92aWRlclJlcXVlc3QSJgoEbmFtZRgBIAEoCUIY4EEC+kESChBieXRlYmFzZS5jb20vSWRQIh4KHExpc3RJZGVudGl0eVByb3ZpZGVyc1JlcXVlc3QiWgodTGlzdElkZW50aXR5UHJvdmlkZXJzUmVzcG9uc2USOQoSaWRlbnRpdHlfcHJvdmlkZXJzGAEgAygLMh0uYnl0ZWJhc2UudjEuSWRlbnRpdHlQcm92aWRlciKTAQodQ3JlYXRlSWRlbnRpdHlQcm92aWRlclJlcXVlc3QSPQoRaWRlbnRpdHlfcHJvdmlkZXIYASABKAsyHS5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyQgPgQQISHAoUaWRlbnRpdHlfcHJvdmlkZXJfaWQYAiABKAkSFQoNdmFsaWRhdGVfb25seRgDIAEoCCKmAQodVXBkYXRlSWRlbnRpdHlQcm92aWRlclJlcXVlc3QSPQoRaWRlbnRpdHlfcHJvdmlkZXIYASABKAsyHS5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyQgPgQQISLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrEhUKDWFsbG93X21pc3NpbmcYAyABKAgiRwodRGVsZXRlSWRlbnRpdHlQcm92aWRlclJlcXVlc3QSJgoEbmFtZRgBIAEoCUIY4EEC+kESChBieXRlYmFzZS5jb20vSWRQIrMBChtUZXN0SWRlbnRpdHlQcm92aWRlclJlcXVlc3QSOAoRaWRlbnRpdHlfcHJvdmlkZXIYASABKAsyHS5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyEk8KDm9hdXRoMl9jb250ZXh0GAIgASgLMjUuYnl0ZWJhc2UudjEuT0F1dGgySWRlbnRpdHlQcm92aWRlclRlc3RSZXF1ZXN0Q29udGV4dEgAQgkKB2NvbnRleHQiOAooT0F1dGgySWRlbnRpdHlQcm92aWRlclRlc3RSZXF1ZXN0Q29udGV4dBIMCgRjb2RlGAEgASgJIpECChxUZXN0SWRlbnRpdHlQcm92aWRlclJlc3BvbnNlEkUKBmNsYWltcxgBIAMoCzI1LmJ5dGViYXNlLnYxLlRlc3RJZGVudGl0eVByb3ZpZGVyUmVzcG9uc2UuQ2xhaW1zRW50cnkSSgoJdXNlcl9pbmZvGAIgAygLMjcuYnl0ZWJhc2UudjEuVGVzdElkZW50aXR5UHJvdmlkZXJSZXNwb25zZS5Vc2VySW5mb0VudHJ5Gi0KC0NsYWltc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaLwoNVXNlckluZm9FbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIs4BChBJZGVudGl0eVByb3ZpZGVyEgwKBG5hbWUYASABKAkSDQoFdGl0bGUYBCABKAkSDgoGZG9tYWluGAUgASgJEi8KBHR5cGUYBiABKA4yIS5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyVHlwZRIzCgZjb25maWcYByABKAsyIy5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyQ29uZmlnOiHqQR4KEGJ5dGViYXNlLmNvbS9JZFASCmlkcHMve2lkcH1KBAgCEAMi5gEKFklkZW50aXR5UHJvdmlkZXJDb25maWcSQgoNb2F1dGgyX2NvbmZpZxgBIAEoCzIpLmJ5dGViYXNlLnYxLk9BdXRoMklkZW50aXR5UHJvdmlkZXJDb25maWdIABI+CgtvaWRjX2NvbmZpZxgCIAEoCzInLmJ5dGViYXNlLnYxLk9JRENJZGVudGl0eVByb3ZpZGVyQ29uZmlnSAASPgoLbGRhcF9jb25maWcYAyABKAsyJy5ieXRlYmFzZS52MS5MREFQSWRlbnRpdHlQcm92aWRlckNvbmZpZ0gAQggKBmNvbmZpZyKRAgocT0F1dGgySWRlbnRpdHlQcm92aWRlckNvbmZpZxIQCghhdXRoX3VybBgBIAEoCRIRCgl0b2tlbl91cmwYAiABKAkSFQoNdXNlcl9pbmZvX3VybBgDIAEoCRIRCgljbGllbnRfaWQYBCABKAkSFQoNY2xpZW50X3NlY3JldBgFIAEoCRIOCgZzY29wZXMYBiADKAkSMAoNZmllbGRfbWFwcGluZxgHIAEoCzIZLmJ5dGViYXNlLnYxLkZpZWxkTWFwcGluZxIXCg9za2lwX3Rsc192ZXJpZnkYCCABKAgSMAoKYXV0aF9zdHlsZRgJIAEoDjIcLmJ5dGViYXNlLnYxLk9BdXRoMkF1dGhTdHlsZSL/AQoaT0lEQ0lkZW50aXR5UHJvdmlkZXJDb25maWcSDgoGaXNzdWVyGAEgASgJEhEKCWNsaWVudF9pZBgCIAEoCRIVCg1jbGllbnRfc2VjcmV0GAMgASgJEg4KBnNjb3BlcxgEIAMoCRIwCg1maWVsZF9tYXBwaW5nGAUgASgLMhkuYnl0ZWJhc2UudjEuRmllbGRNYXBwaW5nEhcKD3NraXBfdGxzX3ZlcmlmeRgGIAEoCBIwCgphdXRoX3N0eWxlGAcgASgOMhwuYnl0ZWJhc2UudjEuT0F1dGgyQXV0aFN0eWxlEhoKDWF1dGhfZW5kcG9pbnQYCCABKAlCA+BBAyL3AgoaTERBUElkZW50aXR5UHJvdmlkZXJDb25maWcSDAoEaG9zdBgBIAEoCRIMCgRwb3J0GAIgASgFEhcKD3NraXBfdGxzX3ZlcmlmeRgDIAEoCBIPCgdiaW5kX2RuGAQgASgJEhUKDWJpbmRfcGFzc3dvcmQYBSABKAkSDwoHYmFzZV9kbhgGIAEoCRITCgt1c2VyX2ZpbHRlchgHIAEoCRJTChFzZWN1cml0eV9wcm90b2NvbBgIIAEoDjI4LmJ5dGViYXNlLnYxLkxEQVBJZGVudGl0eVByb3ZpZGVyQ29uZmlnLlNlY3VyaXR5UHJvdG9jb2wSMAoNZmllbGRfbWFwcGluZxgJIAEoCzIZLmJ5dGViYXNlLnYxLkZpZWxkTWFwcGluZyJPChBTZWN1cml0eVByb3RvY29sEiEKHVNFQ1VSSVRZX1BST1RPQ09MX1VOU1BFQ0lGSUVEEAASDQoJU1RBUlRfVExTEAESCQoFTERBUFMQAiJdCgxGaWVsZE1hcHBpbmcSEgoKaWRlbnRpZmllchgBIAEoCRIUCgxkaXNwbGF5X25hbWUYAiABKAkSDQoFcGhvbmUYBCABKAkSDgoGZ3JvdXBzGAUgASgJSgQIAxAEKl4KFElkZW50aXR5UHJvdmlkZXJUeXBlEiYKIklERU5USVRZX1BST1ZJREVSX1RZUEVfVU5TUEVDSUZJRUQQABIKCgZPQVVUSDIQARIICgRPSURDEAISCAoETERBUBADKlIKD09BdXRoMkF1dGhTdHlsZRIhCh1PQVVUSDJfQVVUSF9TVFlMRV9VTlNQRUNJRklFRBAAEg0KCUlOX1BBUkFNUxABEg0KCUlOX0hFQURFUhACMtwIChdJZGVudGl0eVByb3ZpZGVyU2VydmljZRKfAQoTR2V0SWRlbnRpdHlQcm92aWRlchInLmJ5dGViYXNlLnYxLkdldElkZW50aXR5UHJvdmlkZXJSZXF1ZXN0Gh0uYnl0ZWJhc2UudjEuSWRlbnRpdHlQcm92aWRlciJA2kEEbmFtZYrqMBhiYi5pZGVudGl0eVByb3ZpZGVycy5nZXSQ6jABgtPkkwITEhEvdjEve25hbWU9aWRwcy8qfRKHAQoVTGlzdElkZW50aXR5UHJvdmlkZXJzEikuYnl0ZWJhc2UudjEuTGlzdElkZW50aXR5UHJvdmlkZXJzUmVxdWVzdBoqLmJ5dGViYXNlLnYxLkxpc3RJZGVudGl0eVByb3ZpZGVyc1Jlc3BvbnNlIhfaQQCA6jABgtPkkwIKEggvdjEvaWRwcxKyAQoWQ3JlYXRlSWRlbnRpdHlQcm92aWRlchIqLmJ5dGViYXNlLnYxLkNyZWF0ZUlkZW50aXR5UHJvdmlkZXJSZXF1ZXN0Gh0uYnl0ZWJhc2UudjEuSWRlbnRpdHlQcm92aWRlciJN2kEAiuowG2JiLmlkZW50aXR5UHJvdmlkZXJzLmNyZWF0ZZDqMAGY6jABgtPkkwIdOhFpZGVudGl0eV9wcm92aWRlciIIL3YxL2lkcHMSigIKFlVwZGF0ZUlkZW50aXR5UHJvdmlkZXISKi5ieXRlYmFzZS52MS5VcGRhdGVJZGVudGl0eVByb3ZpZGVyUmVxdWVzdBodLmJ5dGViYXNlLnYxLklkZW50aXR5UHJvdmlkZXIipAHaQR1pZGVudGl0eV9wcm92aWRlcix1cGRhdGVfbWFza4rqMBtiYi5pZGVudGl0eVByb3ZpZGVycy51cGRhdGWQ6jABmOowAaLqMBtiYi5pZGVudGl0eVByb3ZpZGVycy5jcmVhdGWC0+STAjg6EWlkZW50aXR5X3Byb3ZpZGVyMiMvdjEve2lkZW50aXR5X3Byb3ZpZGVyLm5hbWU9aWRwcy8qfRKlAQoWRGVsZXRlSWRlbnRpdHlQcm92aWRlchIqLmJ5dGViYXNlLnYxLkRlbGV0ZUlkZW50aXR5UHJvdmlkZXJSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IkfaQQRuYW1liuowG2JiLmlkZW50aXR5UHJvdmlkZXJzLmRlbGV0ZZDqMAGY6jABgtPkkwITKhEvdjEve25hbWU9aWRwcy8qfRKqAQoUVGVzdElkZW50aXR5UHJvdmlkZXISKC5ieXRlYmFzZS52MS5UZXN0SWRlbnRpdHlQcm92aWRlclJlcXVlc3QaKS5ieXRlYmFzZS52MS5UZXN0SWRlbnRpdHlQcm92aWRlclJlc3BvbnNlIj2K6jAbYmIuaWRlbnRpdHlQcm92aWRlcnMudXBkYXRlkOowAYLT5JMCFDoBKiIPL3YxL2lkcHMvKjp0ZXN0QqUBCg9jb20uYnl0ZWJhc2UudjFCD0lkcFNlcnZpY2VQcm90b1ABWjRnaXRodWIuY29tL2J5dGViYXNlL2J5dGViYXNlL2JhY2tlbmQvZ2VuZXJhdGVkLWdvL3YxogIDQlhYqgILQnl0ZWJhc2UuVjHKAgtCeXRlYmFzZVxWMeICF0J5dGViYXNlXFYxXEdQQk1ldGFkYXRh6gIMQnl0ZWJhc2U6OlYxYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_field_mask, file_v1_annotation]);

/**
 * Describes the message bytebase.v1.GetIdentityProviderRequest.
 * Use `create(GetIdentityProviderRequestSchema)` to create a new message.
 */
export const GetIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 0);

/**
 * Describes the message bytebase.v1.ListIdentityProvidersRequest.
 * Use `create(ListIdentityProvidersRequestSchema)` to create a new message.
 */
export const ListIdentityProvidersRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 1);

/**
 * Describes the message bytebase.v1.ListIdentityProvidersResponse.
 * Use `create(ListIdentityProvidersResponseSchema)` to create a new message.
 */
export const ListIdentityProvidersResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 2);

/**
 * Describes the message bytebase.v1.CreateIdentityProviderRequest.
 * Use `create(CreateIdentityProviderRequestSchema)` to create a new message.
 */
export const CreateIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 3);

/**
 * Describes the message bytebase.v1.UpdateIdentityProviderRequest.
 * Use `create(UpdateIdentityProviderRequestSchema)` to create a new message.
 */
export const UpdateIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 4);

/**
 * Describes the message bytebase.v1.DeleteIdentityProviderRequest.
 * Use `create(DeleteIdentityProviderRequestSchema)` to create a new message.
 */
export const DeleteIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 5);

/**
 * Describes the message bytebase.v1.TestIdentityProviderRequest.
 * Use `create(TestIdentityProviderRequestSchema)` to create a new message.
 */
export const TestIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 6);

/**
 * Describes the message bytebase.v1.OAuth2IdentityProviderTestRequestContext.
 * Use `create(OAuth2IdentityProviderTestRequestContextSchema)` to create a new message.
 */
export const OAuth2IdentityProviderTestRequestContextSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 7);

/**
 * Describes the message bytebase.v1.TestIdentityProviderResponse.
 * Use `create(TestIdentityProviderResponseSchema)` to create a new message.
 */
export const TestIdentityProviderResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 8);

/**
 * Describes the message bytebase.v1.IdentityProvider.
 * Use `create(IdentityProviderSchema)` to create a new message.
 */
export const IdentityProviderSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 9);

/**
 * Describes the message bytebase.v1.IdentityProviderConfig.
 * Use `create(IdentityProviderConfigSchema)` to create a new message.
 */
export const IdentityProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 10);

/**
 * Describes the message bytebase.v1.OAuth2IdentityProviderConfig.
 * Use `create(OAuth2IdentityProviderConfigSchema)` to create a new message.
 */
export const OAuth2IdentityProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 11);

/**
 * Describes the message bytebase.v1.OIDCIdentityProviderConfig.
 * Use `create(OIDCIdentityProviderConfigSchema)` to create a new message.
 */
export const OIDCIdentityProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 12);

/**
 * Describes the message bytebase.v1.LDAPIdentityProviderConfig.
 * Use `create(LDAPIdentityProviderConfigSchema)` to create a new message.
 */
export const LDAPIdentityProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 13);

/**
 * Describes the enum bytebase.v1.LDAPIdentityProviderConfig.SecurityProtocol.
 */
export const LDAPIdentityProviderConfig_SecurityProtocolSchema = /*@__PURE__*/
  enumDesc(file_v1_idp_service, 13, 0);

/**
 * @generated from enum bytebase.v1.LDAPIdentityProviderConfig.SecurityProtocol
 */
export const LDAPIdentityProviderConfig_SecurityProtocol = /*@__PURE__*/
  tsEnum(LDAPIdentityProviderConfig_SecurityProtocolSchema);

/**
 * Describes the message bytebase.v1.FieldMapping.
 * Use `create(FieldMappingSchema)` to create a new message.
 */
export const FieldMappingSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 14);

/**
 * Describes the enum bytebase.v1.IdentityProviderType.
 */
export const IdentityProviderTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_idp_service, 0);

/**
 * @generated from enum bytebase.v1.IdentityProviderType
 */
export const IdentityProviderType = /*@__PURE__*/
  tsEnum(IdentityProviderTypeSchema);

/**
 * Describes the enum bytebase.v1.OAuth2AuthStyle.
 */
export const OAuth2AuthStyleSchema = /*@__PURE__*/
  enumDesc(file_v1_idp_service, 1);

/**
 * @generated from enum bytebase.v1.OAuth2AuthStyle
 */
export const OAuth2AuthStyle = /*@__PURE__*/
  tsEnum(OAuth2AuthStyleSchema);

/**
 * IdentityProviderService manages external identity providers for SSO authentication.
 *
 * @generated from service bytebase.v1.IdentityProviderService
 */
export const IdentityProviderService = /*@__PURE__*/
  serviceDesc(file_v1_idp_service, 0);

