// @generated by protoc-gen-es v2.5.2
// @generated from file v1/idp_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../buf/validate/validate_pb";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_google_api_client } from "../google/api/client_pb";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb";
import { file_google_api_resource } from "../google/api/resource_pb";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import { file_v1_annotation } from "./annotation_pb";

/**
 * Describes the file v1/idp_service.proto.
 */
export const file_v1_idp_service = /*@__PURE__*/
  fileDesc("ChR2MS9pZHBfc2VydmljZS5wcm90bxILYnl0ZWJhc2UudjEiRAoaR2V0SWRlbnRpdHlQcm92aWRlclJlcXVlc3QSJgoEbmFtZRgBIAEoCUIY4EEC+kESChBieXRlYmFzZS5jb20vSWRQIh4KHExpc3RJZGVudGl0eVByb3ZpZGVyc1JlcXVlc3QiWgodTGlzdElkZW50aXR5UHJvdmlkZXJzUmVzcG9uc2USOQoSaWRlbnRpdHlfcHJvdmlkZXJzGAEgAygLMh0uYnl0ZWJhc2UudjEuSWRlbnRpdHlQcm92aWRlciKTAQodQ3JlYXRlSWRlbnRpdHlQcm92aWRlclJlcXVlc3QSPQoRaWRlbnRpdHlfcHJvdmlkZXIYASABKAsyHS5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyQgPgQQISHAoUaWRlbnRpdHlfcHJvdmlkZXJfaWQYAiABKAkSFQoNdmFsaWRhdGVfb25seRgDIAEoCCKmAQodVXBkYXRlSWRlbnRpdHlQcm92aWRlclJlcXVlc3QSPQoRaWRlbnRpdHlfcHJvdmlkZXIYASABKAsyHS5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyQgPgQQISLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrEhUKDWFsbG93X21pc3NpbmcYAyABKAgiRwodRGVsZXRlSWRlbnRpdHlQcm92aWRlclJlcXVlc3QSJgoEbmFtZRgBIAEoCUIY4EEC+kESChBieXRlYmFzZS5jb20vSWRQIrMBChtUZXN0SWRlbnRpdHlQcm92aWRlclJlcXVlc3QSOAoRaWRlbnRpdHlfcHJvdmlkZXIYASABKAsyHS5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyEk8KDm9hdXRoMl9jb250ZXh0GAIgASgLMjUuYnl0ZWJhc2UudjEuT0F1dGgySWRlbnRpdHlQcm92aWRlclRlc3RSZXF1ZXN0Q29udGV4dEgAQgkKB2NvbnRleHQiOAooT0F1dGgySWRlbnRpdHlQcm92aWRlclRlc3RSZXF1ZXN0Q29udGV4dBIMCgRjb2RlGAEgASgJIpECChxUZXN0SWRlbnRpdHlQcm92aWRlclJlc3BvbnNlEkUKBmNsYWltcxgBIAMoCzI1LmJ5dGViYXNlLnYxLlRlc3RJZGVudGl0eVByb3ZpZGVyUmVzcG9uc2UuQ2xhaW1zRW50cnkSSgoJdXNlcl9pbmZvGAIgAygLMjcuYnl0ZWJhc2UudjEuVGVzdElkZW50aXR5UHJvdmlkZXJSZXNwb25zZS5Vc2VySW5mb0VudHJ5Gi0KC0NsYWltc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaLwoNVXNlckluZm9FbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBItgBChBJZGVudGl0eVByb3ZpZGVyEgwKBG5hbWUYASABKAkSFwoFdGl0bGUYBCABKAlCCLpIBXIDGMgBEg4KBmRvbWFpbhgFIAEoCRIvCgR0eXBlGAYgASgOMiEuYnl0ZWJhc2UudjEuSWRlbnRpdHlQcm92aWRlclR5cGUSMwoGY29uZmlnGAcgASgLMiMuYnl0ZWJhc2UudjEuSWRlbnRpdHlQcm92aWRlckNvbmZpZzoh6kEeChBieXRlYmFzZS5jb20vSWRQEgppZHBzL3tpZHB9SgQIAhADIuYBChZJZGVudGl0eVByb3ZpZGVyQ29uZmlnEkIKDW9hdXRoMl9jb25maWcYASABKAsyKS5ieXRlYmFzZS52MS5PQXV0aDJJZGVudGl0eVByb3ZpZGVyQ29uZmlnSAASPgoLb2lkY19jb25maWcYAiABKAsyJy5ieXRlYmFzZS52MS5PSURDSWRlbnRpdHlQcm92aWRlckNvbmZpZ0gAEj4KC2xkYXBfY29uZmlnGAMgASgLMicuYnl0ZWJhc2UudjEuTERBUElkZW50aXR5UHJvdmlkZXJDb25maWdIAEIICgZjb25maWcikQIKHE9BdXRoMklkZW50aXR5UHJvdmlkZXJDb25maWcSEAoIYXV0aF91cmwYASABKAkSEQoJdG9rZW5fdXJsGAIgASgJEhUKDXVzZXJfaW5mb191cmwYAyABKAkSEQoJY2xpZW50X2lkGAQgASgJEhUKDWNsaWVudF9zZWNyZXQYBSABKAkSDgoGc2NvcGVzGAYgAygJEjAKDWZpZWxkX21hcHBpbmcYByABKAsyGS5ieXRlYmFzZS52MS5GaWVsZE1hcHBpbmcSFwoPc2tpcF90bHNfdmVyaWZ5GAggASgIEjAKCmF1dGhfc3R5bGUYCSABKA4yHC5ieXRlYmFzZS52MS5PQXV0aDJBdXRoU3R5bGUi/wEKGk9JRENJZGVudGl0eVByb3ZpZGVyQ29uZmlnEg4KBmlzc3VlchgBIAEoCRIRCgljbGllbnRfaWQYAiABKAkSFQoNY2xpZW50X3NlY3JldBgDIAEoCRIOCgZzY29wZXMYBCADKAkSMAoNZmllbGRfbWFwcGluZxgFIAEoCzIZLmJ5dGViYXNlLnYxLkZpZWxkTWFwcGluZxIXCg9za2lwX3Rsc192ZXJpZnkYBiABKAgSMAoKYXV0aF9zdHlsZRgHIAEoDjIcLmJ5dGViYXNlLnYxLk9BdXRoMkF1dGhTdHlsZRIaCg1hdXRoX2VuZHBvaW50GAggASgJQgPgQQMi9wIKGkxEQVBJZGVudGl0eVByb3ZpZGVyQ29uZmlnEgwKBGhvc3QYASABKAkSDAoEcG9ydBgCIAEoBRIXCg9za2lwX3Rsc192ZXJpZnkYAyABKAgSDwoHYmluZF9kbhgEIAEoCRIVCg1iaW5kX3Bhc3N3b3JkGAUgASgJEg8KB2Jhc2VfZG4YBiABKAkSEwoLdXNlcl9maWx0ZXIYByABKAkSUwoRc2VjdXJpdHlfcHJvdG9jb2wYCCABKA4yOC5ieXRlYmFzZS52MS5MREFQSWRlbnRpdHlQcm92aWRlckNvbmZpZy5TZWN1cml0eVByb3RvY29sEjAKDWZpZWxkX21hcHBpbmcYCSABKAsyGS5ieXRlYmFzZS52MS5GaWVsZE1hcHBpbmciTwoQU2VjdXJpdHlQcm90b2NvbBIhCh1TRUNVUklUWV9QUk9UT0NPTF9VTlNQRUNJRklFRBAAEg0KCVNUQVJUX1RMUxABEgkKBUxEQVBTEAIiXQoMRmllbGRNYXBwaW5nEhIKCmlkZW50aWZpZXIYASABKAkSFAoMZGlzcGxheV9uYW1lGAIgASgJEg0KBXBob25lGAQgASgJEg4KBmdyb3VwcxgFIAEoCUoECAMQBCpeChRJZGVudGl0eVByb3ZpZGVyVHlwZRImCiJJREVOVElUWV9QUk9WSURFUl9UWVBFX1VOU1BFQ0lGSUVEEAASCgoGT0FVVEgyEAESCAoET0lEQxACEggKBExEQVAQAypSCg9PQXV0aDJBdXRoU3R5bGUSIQodT0FVVEgyX0FVVEhfU1RZTEVfVU5TUEVDSUZJRUQQABINCglJTl9QQVJBTVMQARINCglJTl9IRUFERVIQAjLcCAoXSWRlbnRpdHlQcm92aWRlclNlcnZpY2USnwEKE0dldElkZW50aXR5UHJvdmlkZXISJy5ieXRlYmFzZS52MS5HZXRJZGVudGl0eVByb3ZpZGVyUmVxdWVzdBodLmJ5dGViYXNlLnYxLklkZW50aXR5UHJvdmlkZXIiQNpBBG5hbWWK6jAYYmIuaWRlbnRpdHlQcm92aWRlcnMuZ2V0kOowAYLT5JMCExIRL3YxL3tuYW1lPWlkcHMvKn0ShwEKFUxpc3RJZGVudGl0eVByb3ZpZGVycxIpLmJ5dGViYXNlLnYxLkxpc3RJZGVudGl0eVByb3ZpZGVyc1JlcXVlc3QaKi5ieXRlYmFzZS52MS5MaXN0SWRlbnRpdHlQcm92aWRlcnNSZXNwb25zZSIX2kEAgOowAYLT5JMCChIIL3YxL2lkcHMSsgEKFkNyZWF0ZUlkZW50aXR5UHJvdmlkZXISKi5ieXRlYmFzZS52MS5DcmVhdGVJZGVudGl0eVByb3ZpZGVyUmVxdWVzdBodLmJ5dGViYXNlLnYxLklkZW50aXR5UHJvdmlkZXIiTdpBAIrqMBtiYi5pZGVudGl0eVByb3ZpZGVycy5jcmVhdGWQ6jABmOowAYLT5JMCHToRaWRlbnRpdHlfcHJvdmlkZXIiCC92MS9pZHBzEooCChZVcGRhdGVJZGVudGl0eVByb3ZpZGVyEiouYnl0ZWJhc2UudjEuVXBkYXRlSWRlbnRpdHlQcm92aWRlclJlcXVlc3QaHS5ieXRlYmFzZS52MS5JZGVudGl0eVByb3ZpZGVyIqQB2kEdaWRlbnRpdHlfcHJvdmlkZXIsdXBkYXRlX21hc2uK6jAbYmIuaWRlbnRpdHlQcm92aWRlcnMudXBkYXRlkOowAZjqMAGi6jAbYmIuaWRlbnRpdHlQcm92aWRlcnMuY3JlYXRlgtPkkwI4OhFpZGVudGl0eV9wcm92aWRlcjIjL3YxL3tpZGVudGl0eV9wcm92aWRlci5uYW1lPWlkcHMvKn0SpQEKFkRlbGV0ZUlkZW50aXR5UHJvdmlkZXISKi5ieXRlYmFzZS52MS5EZWxldGVJZGVudGl0eVByb3ZpZGVyUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJH2kEEbmFtZYrqMBtiYi5pZGVudGl0eVByb3ZpZGVycy5kZWxldGWQ6jABmOowAYLT5JMCEyoRL3YxL3tuYW1lPWlkcHMvKn0SqgEKFFRlc3RJZGVudGl0eVByb3ZpZGVyEiguYnl0ZWJhc2UudjEuVGVzdElkZW50aXR5UHJvdmlkZXJSZXF1ZXN0GikuYnl0ZWJhc2UudjEuVGVzdElkZW50aXR5UHJvdmlkZXJSZXNwb25zZSI9iuowG2JiLmlkZW50aXR5UHJvdmlkZXJzLnVwZGF0ZZDqMAGC0+STAhQ6ASoiDy92MS9pZHBzLyo6dGVzdEKlAQoPY29tLmJ5dGViYXNlLnYxQg9JZHBTZXJ2aWNlUHJvdG9QAVo0Z2l0aHViLmNvbS9ieXRlYmFzZS9ieXRlYmFzZS9iYWNrZW5kL2dlbmVyYXRlZC1nby92MaICA0JYWKoCC0J5dGViYXNlLlYxygILQnl0ZWJhc2VcVjHiAhdCeXRlYmFzZVxWMVxHUEJNZXRhZGF0YeoCDEJ5dGViYXNlOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_field_mask, file_v1_annotation]);

/**
 * Describes the message bytebase.v1.GetIdentityProviderRequest.
 * Use `create(GetIdentityProviderRequestSchema)` to create a new message.
 */
export const GetIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 0);

/**
 * Describes the message bytebase.v1.ListIdentityProvidersRequest.
 * Use `create(ListIdentityProvidersRequestSchema)` to create a new message.
 */
export const ListIdentityProvidersRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 1);

/**
 * Describes the message bytebase.v1.ListIdentityProvidersResponse.
 * Use `create(ListIdentityProvidersResponseSchema)` to create a new message.
 */
export const ListIdentityProvidersResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 2);

/**
 * Describes the message bytebase.v1.CreateIdentityProviderRequest.
 * Use `create(CreateIdentityProviderRequestSchema)` to create a new message.
 */
export const CreateIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 3);

/**
 * Describes the message bytebase.v1.UpdateIdentityProviderRequest.
 * Use `create(UpdateIdentityProviderRequestSchema)` to create a new message.
 */
export const UpdateIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 4);

/**
 * Describes the message bytebase.v1.DeleteIdentityProviderRequest.
 * Use `create(DeleteIdentityProviderRequestSchema)` to create a new message.
 */
export const DeleteIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 5);

/**
 * Describes the message bytebase.v1.TestIdentityProviderRequest.
 * Use `create(TestIdentityProviderRequestSchema)` to create a new message.
 */
export const TestIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 6);

/**
 * Describes the message bytebase.v1.OAuth2IdentityProviderTestRequestContext.
 * Use `create(OAuth2IdentityProviderTestRequestContextSchema)` to create a new message.
 */
export const OAuth2IdentityProviderTestRequestContextSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 7);

/**
 * Describes the message bytebase.v1.TestIdentityProviderResponse.
 * Use `create(TestIdentityProviderResponseSchema)` to create a new message.
 */
export const TestIdentityProviderResponseSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 8);

/**
 * Describes the message bytebase.v1.IdentityProvider.
 * Use `create(IdentityProviderSchema)` to create a new message.
 */
export const IdentityProviderSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 9);

/**
 * Describes the message bytebase.v1.IdentityProviderConfig.
 * Use `create(IdentityProviderConfigSchema)` to create a new message.
 */
export const IdentityProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 10);

/**
 * Describes the message bytebase.v1.OAuth2IdentityProviderConfig.
 * Use `create(OAuth2IdentityProviderConfigSchema)` to create a new message.
 */
export const OAuth2IdentityProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 11);

/**
 * Describes the message bytebase.v1.OIDCIdentityProviderConfig.
 * Use `create(OIDCIdentityProviderConfigSchema)` to create a new message.
 */
export const OIDCIdentityProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 12);

/**
 * Describes the message bytebase.v1.LDAPIdentityProviderConfig.
 * Use `create(LDAPIdentityProviderConfigSchema)` to create a new message.
 */
export const LDAPIdentityProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 13);

/**
 * Describes the enum bytebase.v1.LDAPIdentityProviderConfig.SecurityProtocol.
 */
export const LDAPIdentityProviderConfig_SecurityProtocolSchema = /*@__PURE__*/
  enumDesc(file_v1_idp_service, 13, 0);

/**
 * @generated from enum bytebase.v1.LDAPIdentityProviderConfig.SecurityProtocol
 */
export const LDAPIdentityProviderConfig_SecurityProtocol = /*@__PURE__*/
  tsEnum(LDAPIdentityProviderConfig_SecurityProtocolSchema);

/**
 * Describes the message bytebase.v1.FieldMapping.
 * Use `create(FieldMappingSchema)` to create a new message.
 */
export const FieldMappingSchema = /*@__PURE__*/
  messageDesc(file_v1_idp_service, 14);

/**
 * Describes the enum bytebase.v1.IdentityProviderType.
 */
export const IdentityProviderTypeSchema = /*@__PURE__*/
  enumDesc(file_v1_idp_service, 0);

/**
 * @generated from enum bytebase.v1.IdentityProviderType
 */
export const IdentityProviderType = /*@__PURE__*/
  tsEnum(IdentityProviderTypeSchema);

/**
 * Describes the enum bytebase.v1.OAuth2AuthStyle.
 */
export const OAuth2AuthStyleSchema = /*@__PURE__*/
  enumDesc(file_v1_idp_service, 1);

/**
 * @generated from enum bytebase.v1.OAuth2AuthStyle
 */
export const OAuth2AuthStyle = /*@__PURE__*/
  tsEnum(OAuth2AuthStyleSchema);

/**
 * IdentityProviderService manages external identity providers for SSO authentication.
 *
 * @generated from service bytebase.v1.IdentityProviderService
 */
export const IdentityProviderService = /*@__PURE__*/
  serviceDesc(file_v1_idp_service, 0);

