// @generated by protoc-gen-es v2.5.2
// @generated from file v1/auth_service.proto (package bytebase.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { User } from "./user_service_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file v1/auth_service.proto.
 */
export declare const file_v1_auth_service: GenFile;

/**
 * @generated from message bytebase.v1.LoginRequest
 */
export declare type LoginRequest = Message<"bytebase.v1.LoginRequest"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * If web is set, we will set access token, refresh token, and user to the cookie.
   *
   * @generated from field: bool web = 3;
   */
  web: boolean;

  /**
   * The name of the identity provider.
   * Format: idps/{idp}
   *
   * @generated from field: string idp_name = 4;
   */
  idpName: string;

  /**
   * The idp_context is using to get the user information from identity provider.
   *
   * @generated from field: bytebase.v1.IdentityProviderContext idp_context = 5;
   */
  idpContext?: IdentityProviderContext;

  /**
   * The otp_code is used to verify the user's identity by MFA.
   *
   * @generated from field: optional string otp_code = 6;
   */
  otpCode?: string;

  /**
   * The recovery_code is used to recovery the user's identity with MFA.
   *
   * @generated from field: optional string recovery_code = 7;
   */
  recoveryCode?: string;

  /**
   * The mfa_temp_token is used to verify the user's identity by MFA.
   *
   * @generated from field: optional string mfa_temp_token = 8;
   */
  mfaTempToken?: string;
};

/**
 * Describes the message bytebase.v1.LoginRequest.
 * Use `create(LoginRequestSchema)` to create a new message.
 */
export declare const LoginRequestSchema: GenMessage<LoginRequest>;

/**
 * @generated from message bytebase.v1.IdentityProviderContext
 */
export declare type IdentityProviderContext = Message<"bytebase.v1.IdentityProviderContext"> & {
  /**
   * @generated from oneof bytebase.v1.IdentityProviderContext.context
   */
  context: {
    /**
     * @generated from field: bytebase.v1.OAuth2IdentityProviderContext oauth2_context = 1;
     */
    value: OAuth2IdentityProviderContext;
    case: "oauth2Context";
  } | {
    /**
     * @generated from field: bytebase.v1.OIDCIdentityProviderContext oidc_context = 2;
     */
    value: OIDCIdentityProviderContext;
    case: "oidcContext";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message bytebase.v1.IdentityProviderContext.
 * Use `create(IdentityProviderContextSchema)` to create a new message.
 */
export declare const IdentityProviderContextSchema: GenMessage<IdentityProviderContext>;

/**
 * @generated from message bytebase.v1.OAuth2IdentityProviderContext
 */
export declare type OAuth2IdentityProviderContext = Message<"bytebase.v1.OAuth2IdentityProviderContext"> & {
  /**
   * @generated from field: string code = 1;
   */
  code: string;
};

/**
 * Describes the message bytebase.v1.OAuth2IdentityProviderContext.
 * Use `create(OAuth2IdentityProviderContextSchema)` to create a new message.
 */
export declare const OAuth2IdentityProviderContextSchema: GenMessage<OAuth2IdentityProviderContext>;

/**
 * @generated from message bytebase.v1.OIDCIdentityProviderContext
 */
export declare type OIDCIdentityProviderContext = Message<"bytebase.v1.OIDCIdentityProviderContext"> & {
};

/**
 * Describes the message bytebase.v1.OIDCIdentityProviderContext.
 * Use `create(OIDCIdentityProviderContextSchema)` to create a new message.
 */
export declare const OIDCIdentityProviderContextSchema: GenMessage<OIDCIdentityProviderContext>;

/**
 * @generated from message bytebase.v1.LoginResponse
 */
export declare type LoginResponse = Message<"bytebase.v1.LoginResponse"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: optional string mfa_temp_token = 2;
   */
  mfaTempToken?: string;

  /**
   * @generated from field: bool require_reset_password = 3;
   */
  requireResetPassword: boolean;

  /**
   * The user of successful login.
   *
   * @generated from field: bytebase.v1.User user = 4;
   */
  user?: User;
};

/**
 * Describes the message bytebase.v1.LoginResponse.
 * Use `create(LoginResponseSchema)` to create a new message.
 */
export declare const LoginResponseSchema: GenMessage<LoginResponse>;

/**
 * @generated from message bytebase.v1.LogoutRequest
 */
export declare type LogoutRequest = Message<"bytebase.v1.LogoutRequest"> & {
};

/**
 * Describes the message bytebase.v1.LogoutRequest.
 * Use `create(LogoutRequestSchema)` to create a new message.
 */
export declare const LogoutRequestSchema: GenMessage<LogoutRequest>;

/**
 * @generated from service bytebase.v1.AuthService
 */
export declare const AuthService: GenService<{
  /**
   * @generated from rpc bytebase.v1.AuthService.Login
   */
  login: {
    methodKind: "unary";
    input: typeof LoginRequestSchema;
    output: typeof LoginResponseSchema;
  },
  /**
   * @generated from rpc bytebase.v1.AuthService.Logout
   */
  logout: {
    methodKind: "unary";
    input: typeof LogoutRequestSchema;
    output: typeof EmptySchema;
  },
}>;

