name: Backend Tests

on:
  pull_request:
    branches:
      - 'main'
      - 'release/*.*.*'
    paths:
      - 'backend/**'
      - 'go.mod'
      - 'proto/**/*.go'
      - 'action/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  go-tests:
    runs-on: self-hosted
    timeout-minutes: 30
    
    services:
      # Oracle service for tests
      oracle:
        image: gvenzl/oracle-free:slim
        env:
          ORACLE_RANDOM_PASSWORD: true
          APP_USER: testuser
          APP_USER_PASSWORD: testpass
        ports:
          - 1521:1521
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 20s
          --health-timeout 10s
          --health-retries 15
          --shm-size 1g
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
          cache: false # Caching is slow.
      - name: Verify go.mod is tidy
        run: |
          go mod tidy
          git diff --exit-code
      - name: Wait for Oracle service
        run: |
          echo "Waiting for Oracle service to be healthy..."
          # Wait for Oracle to be available on port 1521
          for i in {1..60}; do
            if nc -z localhost 1521 2>/dev/null; then
              echo "Oracle is ready!"
              break
            fi
            echo "Waiting for Oracle... (attempt $i/60)"
            sleep 5
          done
      - name: Run all tests
        env:
          # Environment variables for Oracle tests to use service instead of testcontainers
          ORACLE_CI_HOST: localhost
          ORACLE_CI_PORT: 1521
          ORACLE_CI_USER: testuser
          ORACLE_CI_PASSWORD: testpass
          ORACLE_CI_SERVICE: FREEPDB1
        run: go test -p=8 -timeout 30m -ldflags "-w -s" -v ./backend/... | tee test.log; exit ${PIPESTATUS[0]}
      - name: Pretty print tests running time
        # grep: filter out lines like "--- PASS: Test (15.04s)"
        # sed: remove unnecessary characters
        # awk: re-format lines to "PASS: Test (15.04s)"
        # sort: cut into columns by delimiter ' ' (single space) and sort by column 3 (test time in seconds) as numeric type in reverse order (largest comes first)
        # awk: accumulate sum by test time in seconds
        run: grep --color=never -e '--- PASS:' -e '--- FAIL:' test.log | sed 's/[:()]//g' | awk '{print $2,$3,$4}' | sort -t' ' -nk3 -r | awk '{sum += $3; print $1,$2,$3,sum"s"}'
