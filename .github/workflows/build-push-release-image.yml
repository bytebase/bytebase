name: Build and push release image

on:
  push:
    branches:
      # Run on pushing branches like `release/1.0.0`
      - "release/*.*.*"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-release-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract build args
        # Extract version from branch name
        # Example: branch name `release/1.0.0` sets up env.RELEASE_VERSION=1.0.0
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF_NAME#release/}" >> $GITHUB_ENV
          echo "GIT_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV
          echo "BUILD_USER=$(id -u -n)" >> $GITHUB_ENV
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.0
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: pnpm
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: pnpm install --frozen-lockfile
        working-directory: frontend
      - name: Run pnpm release build
        run: |
          cp backend/plugin/advisor/config/* frontend/src/types
          cp backend/enterprise/api/plan.yaml frontend/src/types
          pnpm --dir ./frontend i && pnpm --dir ./frontend release
      - uses: depot/setup-action@v1
      - name: Build and push
        id: bytebase_build
        uses: depot/build-push-action@v1
        with:
          context: .
          project: jv967c892k
          token: ${{ secrets.DEPOT_TOKEN }}
          file: scripts/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: bytebase/bytebase:${{ env.RELEASE_VERSION }}
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
            GIT_COMMIT=${{ env.GIT_COMMIT }}
            BUILD_TIME=${{ env.BUILD_TIME }}
            BUILD_USER=${{ env.BUILD_USER }}
      - name: Image digest
        run: echo "Successfully pushed bytebase/bytebase:${{ env.RELEASE_VERSION }} ${{ steps.bytebase_build.outputs.digest }}"
      - name: Build and push bb CLI
        id: bb_build
        uses: depot/build-push-action@v1
        with:
          context: .
          project: jv967c892k
          token: ${{ secrets.DEPOT_TOKEN }}
          file: scripts/Dockerfile.bb
          push: true
          tags: bytebase/bb:${{ env.RELEASE_VERSION }}
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
            GIT_COMMIT=${{ env.GIT_COMMIT }}
            BUILD_TIME=${{ env.BUILD_TIME }}
            BUILD_USER=${{ env.BUILD_USER }}
      - name: Image digest
        run: echo "Successfully pushed bytebase/bb:${{ env.RELEASE_VERSION }} ${{ steps.bb_build.outputs.digest }}"
      - name: Build and push SQL service
        id: sql_build
        uses: depot/build-push-action@v1
        with:
          context: .
          project: jv967c892k
          token: ${{ secrets.DEPOT_TOKEN }}
          file: scripts/Dockerfile.sql-service
          push: true
          tags: bytebase/sql:${{ env.RELEASE_VERSION }}
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
            GIT_COMMIT=${{ env.GIT_COMMIT }}
            BUILD_TIME=${{ env.BUILD_TIME }}
            BUILD_USER=${{ env.BUILD_USER }}
      - name: Image digest
        run: echo "Successfully pushed bytebase/sql:${{ env.RELEASE_VERSION }} ${{ steps.sql_build.outputs.digest }}"
