name: Test

on:
  pull_request:
    branches:
      - main
      - "release/*.*.*"

jobs:
  eslint-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.11.0
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: pnpm
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - run: pnpm install --frozen-lockfile
        working-directory: frontend
      - name: Run pnpm lint
        run: pnpm lint
        working-directory: frontend

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.11.0
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: pnpm
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - run: pnpm install --frozen-lockfile
        working-directory: frontend
      - name: Run pnpm test
        run: pnpm test
        working-directory: frontend

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
          check-latest: true
          cache: true
      - name: Verify go.mod is tidy
        run: |
          go mod tidy
          git diff --exit-code
      - name: Cache MySQL
        uses: actions/cache@v3
        with:
          path: |
            ./resources/mysql/*.tar.gz
            ./resources/mysql/*.tar.xz
          key: ${{ runner.OS }}-build-mysql-cache
      - name: Install dependencies
        run: go generate -tags mysql ./...
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.49.0
          args: -v
          skip-cache: true

  go-tests:
    strategy:
      matrix:
        release-tags:
          - "release,mysql"
          - "mysql"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
          check-latest: true
          cache: true
      - name: Cache MySQL
        uses: actions/cache@v3
        with:
          path: |
            ./resources/mysql/*.tar.gz
            ./resources/mysql/*.tar.xz
          key: ${{ runner.OS }}-build-mysql-cache
      - name: Install dependencies
        run: go generate -tags ${{ matrix.release-tags }} ./...
      - name: Run all tests
        run: go test -v ./... -tags=${{ matrix.release-tags }} -p=10 | tee test.log; exit ${PIPESTATUS[0]}
      - name: Pretty print tests running time
        # grep: filter out lines like "--- PASS: TestVCS (15.04s)"
        # sed: remove unnecessary characters
        # awk: re-format lines to "PASS: TestVCS (15.04s)"
        # sort: cut into columns by delimiter ' ' (single space) and sort by column 3 (test time in seconds) as numeric type in reverse order (largest comes first)
        # awk: accumulate sum by test time in seconds
        run: grep --color=never -e '--- PASS:' -e '--- FAIL:' test.log | sed 's/[:()]//g' | awk '{print $2,$3,$4}' | sort -t' ' -nk3 -r | awk '{sum += $3; print $1,$2,$3,sum"s"}'
