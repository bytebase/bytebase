- oldSchema: |
    CREATE TABLE public.projects ();
  newSchema: |
    CREATE TABLE public.users (
        id serial PRIMARY KEY,
        username TEXT NOT NULL
    );
    CREATE TABLE public.projects ();
    CREATE TABLE public.repositories (
        id serial PRIMARY KEY
    );
  diff: |
    CREATE TABLE public.users (
        id serial PRIMARY KEY,
        username TEXT NOT NULL
    );
    CREATE TABLE public.repositories (
        id serial PRIMARY KEY
    );
- oldSchema: CREATE TABLE public.t1(a int, b char(20), c int);
  newSchema: CREATE TABLE public.t1(a int);
  diff: |
    ALTER TABLE "public"."t1"
        DROP COLUMN "b",
        DROP COLUMN "c";
- oldSchema: CREATE TABLE public.t1(a int);
  newSchema: CREATE TABLE public.t1(a int, b char(20), c int)
  diff: |
    ALTER TABLE "public"."t1"
        ADD COLUMN "b" character(20),
        ADD COLUMN "c" integer;
- oldSchema: create table public.t1(a int, b bigint, c serial);
  newSchema: create table public.t1(a varchar(20), b serial, c bigint, d char(30))
  diff: |
    ALTER TABLE "public"."t1"
        ALTER COLUMN "a" SET DATA TYPE character varying(20),
        ALTER COLUMN "b" SET DATA TYPE serial,
        ALTER COLUMN "c" SET DATA TYPE bigint,
        ADD COLUMN "d" character(30);
- oldSchema: create table public.t1(a int, b int NOT NULL)
  newSchema: create table public.t1(a int NOT NULL, b int)
  diff: |
    ALTER TABLE "public"."t1"
        ALTER COLUMN "a" SET NOT NULL,
        ALTER COLUMN "b" DROP NOT NULL;
- oldSchema: create table public.t1(a int, b int DEFAULT 1+2, c int DEFAULT 1)
  newSchema: create table public.t1(a int DEFAULT 1, b int, c int DEFAULT 1+2+3+4)
  diff: |
    ALTER TABLE "public"."t1"
        ALTER COLUMN "a" SET DEFAULT 1,
        ALTER COLUMN "b" DROP DEFAULT,
        ALTER COLUMN "c" SET DEFAULT ((1 + 2) + 3) + 4;
- oldSchema: |
    create schema s1;
    create table s1.t1(a int);
    create table s1.t2(a int, b int);
    create schema s2;
    create table s2.t3(a int);
    create table s2.t4(a int);
  newSchema: |
    create schema s1;
    create table s1.t2(a int);
    create table s1.t3(a int, b int);
    create schema s2;
    create table s2.t2(a int);
    create table s2.t3(a int);
  diff: |
    create table s1.t3(a int, b int);
    create table s2.t2(a int);
    ALTER TABLE "s1"."t2"
        DROP COLUMN "b";
    DROP TABLE IF EXISTS "s1"."t1", "s2"."t4" CASCADE;
- oldSchema: |
    create table public.t1(
      a int,
      b int,
      constraint check_a check(a > b),
      constraint check_b check(b > 1)
    );
  newSchema: |
    create table public.t1(
      a int,
      b int,
      constraint check_b check(b > a),
      constraint check_c check(a > 1)
    )
  diff: |
    ALTER TABLE "public"."t1"
        DROP CONSTRAINT "check_b",
        ADD CONSTRAINT "check_b" CHECK (b > a),
        ADD CONSTRAINT "check_c" CHECK (a > 1),
        DROP CONSTRAINT "check_a";
- oldSchema: |
    create table public.t1(
      a int,
      b int,
      constraint check_a check(a > 1),
      constraint check_b check(b > 1)
    );
  newSchema: |
    create table public.t1(
      a int,
      b int,
      constraint check_b check(b > 1),
      constraint check_a check(a > 1)
    )
  diff: ""
- oldSchema: |
    CREATE INDEX idx1 ON public.t1 USING btree (a, b, (c+1));
    CREATE INDEX idx2 ON public.t1 USING hash (a);
  newSchema: |
    CREATE INDEX idx2 ON public.t1 USING btree (a);
    CREATE INDEX idx3 ON public.t1 USING btree (a, b);
  diff: |
    CREATE INDEX "idx3" ON "public"."t1" USING btree (a, b);
    DROP INDEX IF EXISTS "public"."idx2" CASCADE;
    CREATE INDEX "idx2" ON "public"."t1" USING btree (a);
    DROP INDEX IF EXISTS "public"."idx1" CASCADE;
