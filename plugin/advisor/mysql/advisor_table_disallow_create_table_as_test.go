package mysql

// Framework code is generated by the generator.

import (
	"testing"

	"github.com/bytebase/bytebase/plugin/advisor"
)

func TestTableDisallowCreateTableAs(t *testing.T) {
	tests := []advisor.TestCase{
		{
			Statement: `CREATE TABLE t AS 
				(
					SELECT * FROM tbl
				)
			`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementCreateTableAs,
					Title:   "statement.create-table.no-create-table-as",
					Content: "cannot create table `t` by using CREATE TABLE ... [AS] SELECT ...",
					Line:    1,
				},
			},
		},
		{
			Statement: `CREATE TABLE t SELECT * FROM tbl`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementCreateTableAs,
					Title:   "statement.create-table.no-create-table-as",
					Content: "cannot create table `t` by using CREATE TABLE ... [AS] SELECT ...",
					Line:    1,
				},
			},
		},
		{
			Statement: `CREATE TABLE t LIKE tbl`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Success,
					Code:    advisor.Ok,
					Title:   "OK",
					Content: "",
				},
			},
		},
		{
			Statement: `CREATE TABLE t (id INT PRIMARY KEY)`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Success,
					Code:    advisor.Ok,
					Title:   "OK",
					Content: "",
				},
			},
		},
	}

	advisor.RunSQLReviewRuleTests(t, tests, &TableDisallowCreateTableAsAdvisor{}, &advisor.SQLReviewRule{
		Type:    advisor.SchemaRuleStatementNoCreateTableAs,
		Level:   advisor.SchemaRuleLevelWarning,
		Payload: "",
	}, advisor.MockMySQLDatabase)
}
