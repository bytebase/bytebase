package mysql

// Framework code is generated by the generator.

import (
	"encoding/json"
	"testing"

	"github.com/stretchr/testify/require"

	"github.com/bytebase/bytebase/plugin/advisor"
)

func TestInsertRowLimit(t *testing.T) {
	tests := []advisor.TestCase{
		{
			Statement: `INSERT INTO tech_book values(1, 'a')`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Success,
					Code:    advisor.Ok,
					Title:   "OK",
					Content: "",
				},
			},
		},
		{
			Statement: `INSERT INTO tech_book values(1, 'a'), (2, 'b'), (3, 'c'), (4, 'd'), (5, 'e'), (6, 'f')`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.InsertTooManyRows,
					Title:   "insert.row-limit",
					Content: "The value rows in one INSERT statement should be no more than 5, but found 6",
					Line:    1,
				},
			},
		},
	}
	payload, err := json.Marshal(advisor.NumberLimitRulePayload{
		Number: 5,
	})
	require.NoError(t, err)
	advisor.RunSQLReviewRuleTests(t, tests, &InsertRowLimitAdvisor{}, &advisor.SQLReviewRule{
		Type:    advisor.SchemaRuleInsertRowLimit,
		Level:   advisor.SchemaRuleLevelWarning,
		Payload: string(payload),
	}, advisor.MockMySQLDatabase)
}
