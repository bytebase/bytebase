package mysql

// Framework code is generated by the generator.

import (
	"testing"

	"github.com/bytebase/bytebase/plugin/advisor"
)

func TestStatementMergeAlterTable(t *testing.T) {
	tests := []advisor.TestCase{
		{
			Statement: `ALTER TABLE tech_book ADD COLUMN a int`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Success,
					Code:    advisor.Ok,
					Title:   "OK",
					Content: "",
				},
			},
		},
		{
			Statement: `
				ALTER TABLE tech_book ADD COLUMN a int;
				ALTER TABLE tech_book ADD COLUMN b int;
				`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementRedundantAlterTable,
					Title:   "statement.merge-alter-table",
					Content: "There are 2 statements to modify table `tech_book`",
					Line:    3,
				},
			},
		},
		{
			Statement: `
				CREATE TABLE t(a int);
				ALTER TABLE tech_book ADD COLUMN a int;
				ALTER TABLE t ADD COLUMN b int;
				ALTER TABLE tech_book ADD COLUMN b int;
				`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementRedundantAlterTable,
					Title:   "statement.merge-alter-table",
					Content: "There are 2 statements to modify table `t`",
					Line:    4,
				},
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementRedundantAlterTable,
					Title:   "statement.merge-alter-table",
					Content: "There are 2 statements to modify table `tech_book`",
					Line:    5,
				},
			},
		},
		{
			Statement: `
				CREATE TABLE t(a int);
				ALTER TABLE tech_book ADD COLUMN a int;
				ALTER TABLE tech_book ADD COLUMN b int;
				ALTER TABLE t ADD COLUMN b int;
				`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementRedundantAlterTable,
					Title:   "statement.merge-alter-table",
					Content: "There are 2 statements to modify table `tech_book`",
					Line:    4,
				},
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementRedundantAlterTable,
					Title:   "statement.merge-alter-table",
					Content: "There are 2 statements to modify table `t`",
					Line:    5,
				},
			},
		},
	}

	advisor.RunSQLReviewRuleTests(t, tests, &StatementMergeAlterTableAdvisor{}, &advisor.SQLReviewRule{
		Type:    advisor.SchemaRuleStatementMergeAlterTable,
		Level:   advisor.SchemaRuleLevelWarning,
		Payload: "",
	}, advisor.MockMySQLDatabase)
}
