package mysql

// Framework code is generated by the generator.

import (
	"testing"

	"github.com/bytebase/bytebase/plugin/advisor"
)

func TestDisallowOrderBy(t *testing.T) {
	tests := []advisor.TestCase{
		{
			Statement: `INSERT INTO tech_book values(1, 'a')`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Success,
					Code:    advisor.Ok,
					Title:   "OK",
					Content: "",
				},
			},
		},
		{
			Statement: `UPDATE tech_book SET name = 'my name' ORDER BY id`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.UpdateUseOrderBy,
					Title:   "statement.disallow-order-by",
					Content: "ORDER BY clause is forbidden in DELETE and UPDATE statements, but \"UPDATE tech_book SET name = 'my name' ORDER BY id\" uses",
					Line:    1,
				},
			},
		},
		{
			Statement: `DELETE FROM tech_book ORDER BY id`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.DeleteUseOrderBy,
					Title:   "statement.disallow-order-by",
					Content: "ORDER BY clause is forbidden in DELETE and UPDATE statements, but \"DELETE FROM tech_book ORDER BY id\" uses",
					Line:    1,
				},
			},
		},
	}

	advisor.RunSQLReviewRuleTests(t, tests, &DisallowOrderByAdvisor{}, &advisor.SQLReviewRule{
		Type:    advisor.SchemaRuleStatementDisallowOrderBy,
		Level:   advisor.SchemaRuleLevelWarning,
		Payload: "",
	}, advisor.MockMySQLDatabase)
}
