package mysql

// Framework code is generated by the generator.

import (
	"testing"

	"github.com/bytebase/bytebase/plugin/advisor"
)

func TestStatementDisallowCommit(t *testing.T) {
	tests := []advisor.TestCase{
		{
			Statement: `
			START TRANSACTION;
			CREATE TABLE techBook(id int, name varchar(255));
			COMMIT;
			`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementDisallowCommit,
					Title:   "statement.disallow-commit",
					Content: "Commit is not allowed, related statement: \"COMMIT;\"",
					Line:    4,
				},
			},
		},
		{
			Statement: `
			START TRANSACTION;
			CREATE TABLE techBook(id int, name varchar(255));
			COMMIT;

			START TRANSACTION;
			INSERT INTO techBook(id, name) VALUES(1, "book");
			COMMIT;
			`,
			Want: []advisor.Advice{
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementDisallowCommit,
					Title:   "statement.disallow-commit",
					Content: "Commit is not allowed, related statement: \"COMMIT;\"",
					Line:    4,
				},
				{
					Status:  advisor.Warn,
					Code:    advisor.StatementDisallowCommit,
					Title:   "statement.disallow-commit",
					Content: "Commit is not allowed, related statement: \"COMMIT;\"",
					Line:    8,
				},
			},
		},
	}

	advisor.RunSQLReviewRuleTests(t, tests, &StatementDisallowCommitAdvisor{}, &advisor.SQLReviewRule{
		Type:    advisor.SchemaRuleStatementDisallowCommit,
		Level:   advisor.SchemaRuleLevelWarning,
		Payload: "",
	}, advisor.MockMySQLDatabase)
}
